"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _jsxRuntime = require("../../lib/jsxRuntime");

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = require("react");

var _dom = require("../../lib/dom");

var _ConfigProviderContext = require("./ConfigProviderContext");

var _platform = require("../../lib/platform");

var _useIsomorphicLayoutEffect = require("../../lib/useIsomorphicLayoutEffect");

var _useObjectMemo = require("../../hooks/useObjectMemo");

var _utils = require("../../lib/utils");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function mapOldScheme(scheme) {
  switch (scheme) {
    case _ConfigProviderContext.Scheme.DEPRECATED_CLIENT_LIGHT:
      return _ConfigProviderContext.Scheme.BRIGHT_LIGHT;

    case _ConfigProviderContext.Scheme.DEPRECATED_CLIENT_DARK:
      return _ConfigProviderContext.Scheme.SPACE_GRAY;

    default:
      return scheme;
  }
}

var ConfigProvider = function ConfigProvider(_ref) {
  var children = _ref.children,
      config = (0, _objectWithoutProperties2.default)(_ref, ["children"]);
  var scheme = config.platform === _platform.VKCOM ? _ConfigProviderContext.Scheme.VKCOM : mapOldScheme(config.scheme);

  var _useDOM = (0, _dom.useDOM)(),
      document = _useDOM.document;

  var setScheme = function setScheme() {
    if (scheme !== 'inherit') {
      document.body.setAttribute('scheme', scheme);
    }
  };

  var isMounted = (0, _react.useRef)(false);

  if (!isMounted.current && _dom.canUseDOM) {
    setScheme();
    isMounted.current = true;
  }

  (0, _useIsomorphicLayoutEffect.useIsomorphicLayoutEffect)(function () {
    setScheme();
    return scheme === 'inherit' ? _utils.noop : function () {
      return document.body.removeAttribute('scheme');
    };
  }, [scheme]);
  var configContext = (0, _useObjectMemo.useObjectMemo)(config);
  return (0, _jsxRuntime.createScopedElement)(_ConfigProviderContext.ConfigProviderContext.Provider, {
    value: configContext
  }, children);
}; // Деструктуризация нужна из бага в react-docgen-typescript
// https://github.com/styleguidist/react-docgen-typescript/issues/195


ConfigProvider.defaultProps = _objectSpread({}, _ConfigProviderContext.defaultConfigProviderProps);
var _default = ConfigProvider;
exports.default = _default;
//# sourceMappingURL=ConfigProvider.js.map