import React, { HTMLAttributes, ReactNode } from 'react';
import { HasPlatform } from '../../types';
import { ConfigProviderContextInterface } from '../ConfigProvider/ConfigProviderContext';
import { SplitColContextProps } from '../SplitCol/SplitCol';
import { ScrollContextInterface } from '../AppRoot/ScrollContext';
export interface RootProps extends HTMLAttributes<HTMLDivElement>, HasPlatform {
    activeView: string;
    onTransition?(params: {
        isBack: boolean;
        from: string;
        to: string;
    }): void;
    popout?: ReactNode;
    modal?: ReactNode;
    /**
     * @ignore
     */
    splitCol?: SplitColContextProps;
    /**
     * @ignore
     */
    configProvider?: ConfigProviderContextInterface;
    /**
     * @ignore
     */
    scroll?: ScrollContextInterface;
}
export declare type AnimationEndCallback = (e?: AnimationEvent) => void;
export interface RootState {
    activeView: string;
    prevView: string;
    nextView: string;
    visibleViews: [string] | [string, string];
    isBack: boolean;
    scrolls: {
        [index: string]: number;
    };
    transition: boolean;
}
declare const _default: React.ComponentType<RootProps>;
export default _default;
