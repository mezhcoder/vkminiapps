{"version":3,"sources":["../../../../src/components/MiniInfoCell/MiniInfoCell.tsx"],"names":["MiniInfoCell","props","platform","before","after","mode","textWrap","textLevel","children","restProps","Component","onClick","Tappable","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AA2CO,IAAMA,YAAmC,GAAG,SAAtCA,YAAsC,CAACC,KAAD,EAA8B;AAAA;;AAC/E,MAAMC,QAAQ,GAAG,+BAAjB;AAD+E,MAG7EC,MAH6E,GAU3EF,KAV2E,CAG7EE,MAH6E;AAAA,MAI7EC,KAJ6E,GAU3EH,KAV2E,CAI7EG,KAJ6E;AAAA,MAK7EC,IAL6E,GAU3EJ,KAV2E,CAK7EI,IAL6E;AAAA,MAM7EC,QAN6E,GAU3EL,KAV2E,CAM7EK,QAN6E;AAAA,MAO7EC,SAP6E,GAU3EN,KAV2E,CAO7EM,SAP6E;AAAA,MAQ7EC,QAR6E,GAU3EP,KAV2E,CAQ7EO,QAR6E;AAAA,MAS1EC,SAT0E,0CAU3ER,KAV2E;AAY/E,MAAMS,SAAsB,GAAGD,SAAS,CAACE,OAAV,GAAoBC,iBAApB,GAA+B,KAA9D;AAEA,SACE,qCAAC,SAAD,6BACMH,SADN;AAEE,IAAA,SAAS,EAAE,6BAAW,gCAAa,cAAb,EAA6BP,QAA7B,CAAX,2FACYG,IADZ,GACqBA,IAAI,KAAK,MAD9B,yEAEYC,QAFZ,GAEyBA,QAAQ,KAAK,QAFtC,6CAGaC,SAHb;AAFb,MAOE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGJ,MADH,CAPF,EAUE,qCAAC,aAAD;AACE,IAAA,SAAS,EAAC,uBADZ;AAEE,IAAA,MAAM,EAAEE,IAAI,KAAK,MAAT,GAAkB,QAAlB,GAA6B;AAFvC,KAIGG,QAJH,CAVF,EAgBG,yBAAaJ,KAAb,KACD;AAAK,IAAA,SAAS,EAAC;AAAf,KACGA,KADH,CAjBF,CADF;AAwBD,CAtCM;;;AAwCPJ,YAAY,CAACa,YAAb,GAA4B;AAC1BR,EAAAA,IAAI,EAAE,MADoB;AAE1BC,EAAAA,QAAQ,EAAE,QAFgB;AAG1BC,EAAAA,SAAS,EAAE;AAHe,CAA5B","sourcesContent":["import { ElementType, FC, HTMLAttributes, ReactNode } from 'react';\nimport { classNames } from '../../lib/classNames';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { getClassName } from '../../helpers/getClassName';\nimport Text from '../Typography/Text/Text';\nimport Tappable from '../../components/Tappable/Tappable';\nimport { hasReactNode } from '../../lib/utils';\n\nexport interface MiniInfoCellProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Иконка слева.<br />\n   * Рекомендуется использовать иконки размера 20.\n   */\n  before: ReactNode;\n\n  /**\n   * Содержимое справа.<br />\n   * `<UsersStack size=\"s\" />` или `<Avatar size={24} />`\n   */\n  after?: ReactNode;\n\n  /**\n   * Тип ячейки:\n   *\n   * - `base` – базовая ячейка с серой иконкой и серым текстом.<br />\n   * В компонент можно передать `Link`, чтобы визуально сделать часть текста ссылкой.\n   * - `add` – тип ячейки, который показывает, что взаимодействие с ней должно вызывать действие добавления чего-то.\n   * - `more` – взаимодействие с такой ячейкой должно открывать какую-то подробную информацию.\n   */\n  mode?: 'base' | 'add' | 'more';\n\n  /**\n   * Тип отображения текста:\n   *\n   * - `nowrap` – в одну строку, текст не переносится и обрезается.\n   * - `short` – максимально отображается 3 строки, остальное обрезается.\n   * - `full` – текст отображается полностью.\n   */\n  textWrap?: 'nowrap' | 'short' | 'full';\n\n  /**\n   * Стиль текста:\n   *\n   * - `primary` – используйте этот стиль, если хотите выделить информацию в общем списке.<br />Пример использования: подробная информация на странице сообщества\n   * - `secondary` – стиль по-умолчанию.\n   */\n  textLevel?: 'primary' | 'secondary';\n}\n\nexport const MiniInfoCell: FC<MiniInfoCellProps> = (props: MiniInfoCellProps) => {\n  const platform = usePlatform();\n  const {\n    before,\n    after,\n    mode,\n    textWrap,\n    textLevel,\n    children,\n    ...restProps\n  } = props;\n\n  const Component: ElementType = restProps.onClick ? Tappable : 'div';\n\n  return (\n    <Component\n      {...restProps}\n      vkuiClass={classNames(getClassName('MiniInfoCell', platform), {\n        [`MiniInfoCell--md-${mode}`]: mode !== 'base',\n        [`MiniInfoCell--wr-${textWrap}`]: textWrap !== 'nowrap',\n      }, `MiniInfoCell--lvl-${textLevel}`)}\n    >\n      <div vkuiClass=\"MiniInfoCell__icon\">\n        {before}\n      </div>\n      <Text\n        vkuiClass=\"MiniInfoCell__content\"\n        weight={mode === 'more' ? 'medium' : 'regular'}\n      >\n        {children}\n      </Text>\n      {hasReactNode(after) &&\n      <div vkuiClass=\"MiniInfoCell__after\">\n        {after}\n      </div>\n      }\n    </Component>\n  );\n};\n\nMiniInfoCell.defaultProps = {\n  mode: 'base',\n  textWrap: 'nowrap',\n  textLevel: 'secondary',\n};\n"],"file":"MiniInfoCell.js"}