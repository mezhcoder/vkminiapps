{"version":3,"sources":["../../../../src/components/Tappable/Tappable.tsx"],"names":["ts","Date","now","ACTIVE_DELAY","ACTIVE_EFFECT_DELAY","storage","deactivateOtherInstances","exclude","Object","keys","filter","id","forEach","clearTimeout","activeTimeout","timeout","stop","TappableContext","React","createContext","insideTappable","Tappable","props","originalEvent","insideTouchRoot","stopPropagation","state","hasActive","touches","length","platform","ANDROID","onDown","window","setTimeout","start","shiftXAbs","shiftYAbs","isSlide","active","activeEffectDelay","store","getStorage","e","container","top","left","x","y","key","toString","setState","clicks","wavesTimeout","hovered","getRootRef","Math","round","random","hasHover","prevProps","children","Component","sizeX","hasMouse","propsHasHover","hoverMode","propsHasActive","activeMode","restProps","isPresetHoverMode","includes","isPresetActiveMode","classes","RootComponent","disabled","Touch","onStart","onMove","onEnd","getRef","ref","onEnter","onLeave","touchProps","map","k","role"],"mappings":"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","sourcesContent":["import React, { AllHTMLAttributes, Component, ElementType, RefCallback } from 'react';\nimport Touch, { TouchEvent, TouchEventHandler, TouchProps } from '../Touch/Touch';\nimport TouchRootContext from '../Touch/TouchContext';\nimport { classNames } from '../../lib/classNames';\nimport { getClassName } from '../../helpers/getClassName';\nimport { ANDROID } from '../../lib/platform';\nimport { getOffsetRect } from '../../lib/offset';\nimport { coordX, coordY, VKUITouchEvent, VKUITouchEventHander } from '../../lib/touch';\nimport { HasPlatform, HasRootRef, Ref } from '../../types';\nimport { withPlatform } from '../../hoc/withPlatform';\nimport { hasHover } from '@vkontakte/vkjs/lib/InputUtils';\nimport { setRef } from '../../lib/utils';\nimport { withAdaptivity, AdaptivityProps } from '../../hoc/withAdaptivity';\n\nexport interface TappableProps extends AllHTMLAttributes<HTMLElement>, HasRootRef<HTMLElement>, HasPlatform, AdaptivityProps {\n  Component?: ElementType;\n  /**\n   * Длительность показа active-состояния\n   */\n  activeEffectDelay?: number;\n  stopPropagation?: boolean;\n  /**\n   * Указывает, должен ли компонент реагировать на hover-состояние\n   */\n  hasHover?: boolean;\n  /**\n   * Указывает, должен ли компонент реагировать на active-состояние\n   */\n  hasActive?: boolean;\n  /**\n   * Стиль подсветки active-состояния. Если передать произвольную строку, она добавится как css-класс во время active\n   */\n  activeMode?: 'opacity' | 'background' | string;\n  /**\n   * Стиль подсветки hover-состояния. Если передать произвольную строку, она добавится как css-класс во время hover\n   */\n  hoverMode?: 'opacity' | 'background' | string;\n}\n\nexport interface TappableState {\n  clicks?: {\n    [index: string]: {\n      x: number;\n      y: number;\n    };\n  };\n  hovered?: boolean;\n  active?: boolean;\n  ts?: number;\n  hasHover?: boolean;\n  hasActive?: boolean;\n}\n\nexport interface RootComponentProps extends TouchProps {\n  ref?: Ref<HTMLElement>;\n}\n\nexport interface StorageItem {\n  activeTimeout: number;\n  timeout?: number;\n  stop(): void;\n}\n\nexport interface Storage {\n  [index: string]: StorageItem;\n}\n\nexport type GetStorage = () => StorageItem;\n\nconst ts = () => +Date.now();\n\nexport const ACTIVE_DELAY = 70;\nexport const ACTIVE_EFFECT_DELAY = 600;\n\nlet storage: Storage = {};\n\n/*\n * Очищает таймауты и хранилище для всех экземпляров компонента, кроме переданного\n */\nfunction deactivateOtherInstances(exclude?: string) {\n  Object.keys(storage).filter((id: string) => id !== exclude).forEach((id: string) => {\n    clearTimeout(storage[id].activeTimeout);\n    clearTimeout(storage[id].timeout);\n    storage[id].stop();\n\n    delete storage[id];\n  });\n}\n\nconst TappableContext = React.createContext<{ insideTappable?: boolean; onEnter?: VoidFunction; onLeave?: VoidFunction }>({ insideTappable: false });\n\nclass Tappable extends Component<TappableProps, TappableState> {\n  constructor(props: TappableProps) {\n    super(props);\n    this.id = Math.round(Math.random() * 1e8).toString(16);\n    this.state = {\n      clicks: {},\n      active: false,\n      ts: null,\n      hasHover: props.hasHover,\n      hasActive: props.hasActive,\n    };\n    this.isSlide = false;\n  }\n\n  id: string;\n\n  isSlide: boolean;\n\n  insideTouchRoot: boolean;\n\n  container: HTMLElement;\n\n  timeout: number;\n\n  wavesTimeout: number;\n\n  static defaultProps = {\n    Component: 'div',\n    role: 'button',\n    stopPropagation: false,\n    disabled: false,\n    hasHover,\n    hoverMode: 'background',\n    hasActive: true,\n    activeMode: 'background',\n    activeEffectDelay: ACTIVE_EFFECT_DELAY,\n  };\n\n  /*\n   * Обрабатывает событие touchstart\n   */\n  onStart: TouchEventHandler = ({ originalEvent }: TouchEvent) => {\n    !this.insideTouchRoot && this.props.stopPropagation && originalEvent.stopPropagation();\n    if (this.state.hasActive) {\n      if (originalEvent.touches && originalEvent.touches.length > 1) {\n        deactivateOtherInstances();\n        return;\n      }\n\n      if (this.props.platform === ANDROID) {\n        this.onDown(originalEvent);\n      }\n\n      storage[this.id] = {\n        stop: this.stop,\n        activeTimeout: window.setTimeout(this.start, ACTIVE_DELAY),\n      };\n    }\n  };\n\n  /*\n   * Обрабатывает событие touchmove\n   */\n  onMove: TouchEventHandler = ({ originalEvent, shiftXAbs, shiftYAbs }: TouchEvent) => {\n    !this.insideTouchRoot && this.props.stopPropagation && originalEvent.stopPropagation();\n    if (shiftXAbs > 20 || shiftYAbs > 20) {\n      this.isSlide = true;\n      this.stop();\n    }\n  };\n\n  /*\n   * Обрабатывает событие touchend\n   */\n  onEnd: TouchEventHandler = ({ originalEvent }: TouchEvent) => {\n    !this.insideTouchRoot && this.props.stopPropagation && originalEvent.stopPropagation();\n    const now = ts();\n\n    if (originalEvent.touches && originalEvent.touches.length > 0) {\n      this.isSlide = false;\n      this.stop();\n      return;\n    }\n\n    if (this.state.active) {\n      if (now - this.state.ts >= 100) {\n        // Долгий тап, выключаем подсветку\n        this.stop();\n      } else {\n        // Короткий тап, оставляем подсветку\n        const timeout = window.setTimeout(this.stop, this.props.activeEffectDelay - now + this.state.ts);\n        const store = this.getStorage();\n\n        if (store) {\n          store.timeout = timeout;\n        }\n      }\n    } else if (!this.isSlide) {\n      // Очень короткий тап, включаем подсветку\n      this.start();\n\n      const timeout = window.setTimeout(this.stop, this.props.activeEffectDelay);\n\n      if (this.getStorage()) {\n        clearTimeout(this.getStorage().activeTimeout);\n        this.getStorage().timeout = timeout;\n      } else {\n        this.timeout = timeout;\n      }\n    }\n\n    this.isSlide = false;\n  };\n\n  /*\n   * Реализует эффект при тапе для Андроида\n   */\n  onDown: VKUITouchEventHander = (e: VKUITouchEvent) => {\n    if (this.props.platform === ANDROID) {\n      const { top, left } = getOffsetRect(this.container);\n      const x = coordX(e) - left;\n      const y = coordY(e) - top;\n      const key = 'wave' + Date.now().toString();\n\n      this.setState((state: TappableState): TappableState => {\n        return {\n          clicks: {\n            ...state.clicks,\n            [key]: {\n              x,\n              y,\n            },\n          },\n        };\n      });\n\n      this.wavesTimeout = window.setTimeout(() => {\n        this.setState((state: TappableState): TappableState => {\n          let clicks = { ...state.clicks };\n          delete clicks[key];\n          return { clicks };\n        });\n      }, 225);\n    }\n  };\n\n  onEnter = () => {\n    this.setState({ hovered: true });\n  };\n\n  onLeave = () => {\n    this.setState({ hovered: false });\n  };\n\n  /*\n   * Устанавливает активное выделение\n   */\n  start: VoidFunction = () => {\n    if (!this.state.active && this.state.hasActive) {\n      this.setState({\n        active: true,\n        ts: ts(),\n      });\n    }\n    deactivateOtherInstances(this.id);\n  };\n\n  /*\n   * Снимает активное выделение\n   */\n  stop: VoidFunction = () => {\n    if (this.state.active) {\n      this.setState({\n        active: false,\n        ts: null,\n      });\n    }\n    if (this.getStorage()) {\n      clearTimeout(this.getStorage().activeTimeout);\n      delete storage[this.id];\n    }\n  };\n\n  /*\n   * Возвращает хранилище для экземпляра компонента\n   */\n  getStorage: GetStorage = () => {\n    return storage[this.id];\n  };\n\n  /*\n   * Берет ref на DOM-ноду из экземпляра Touch\n   */\n  getRef: RefCallback<HTMLElement> = (container) => {\n    this.container = container;\n    setRef(container, this.props.getRootRef);\n  };\n\n  componentWillUnmount() {\n    if (storage[this.id]) {\n      clearTimeout(storage[this.id].timeout);\n      clearTimeout(storage[this.id].activeTimeout);\n\n      delete storage[this.id];\n    }\n\n    clearTimeout(this.wavesTimeout);\n  }\n\n  componentDidUpdate(prevProps: TappableProps) {\n    if (prevProps.hasHover !== this.props.hasHover || prevProps.hasActive !== this.props.hasActive) {\n      this.setState({ hasHover: this.props.hasHover, hasActive: this.props.hasActive });\n    }\n  }\n\n  render() {\n    const { clicks, active, hovered, hasHover, hasActive } = this.state;\n    const { children, Component, activeEffectDelay,\n      stopPropagation, getRootRef, platform, sizeX, hasMouse, hasHover: propsHasHover, hoverMode, hasActive: propsHasActive, activeMode, ...restProps } = this.props;\n\n    const isPresetHoverMode = ['opacity', 'background'].includes(hoverMode);\n    const isPresetActiveMode = ['opacity', 'background'].includes(activeMode);\n\n    const classes = classNames(\n      getClassName('Tappable', platform),\n      `Tappable--sizeX-${sizeX}`,\n      {\n        'Tappable--active': hasActive && active,\n        'Tappable--inactive': !active,\n        'Tappable--mouse': hasMouse,\n        [`Tappable--hover-${hoverMode}`]: hasHover && hovered && isPresetHoverMode,\n        [`Tappable--active-${activeMode}`]: hasActive && active && isPresetActiveMode,\n        [hoverMode]: hasHover && hovered && !isPresetHoverMode,\n        [activeMode]: hasActive && active && !isPresetActiveMode,\n      });\n\n    const RootComponent = restProps.disabled\n      ? Component\n      : Touch;\n\n    let props: RootComponentProps = {};\n    if (!restProps.disabled) {\n      props.Component = Component;\n      /* eslint-disable */\n      props.onStart = this.onStart;\n      props.onMove = this.onMove;\n      props.onEnd = this.onEnd;\n      /* eslint-enable */\n      props.getRootRef = this.getRef;\n    } else {\n      props.ref = this.getRef;\n    }\n\n    return (\n      <TappableContext.Consumer>\n        {({ insideTappable, onEnter, onLeave }) => {\n          return (\n            <TouchRootContext.Consumer>\n              {(insideTouchRoot: boolean) => {\n                this.insideTouchRoot = insideTouchRoot;\n                const touchProps = restProps.disabled ? {} : {\n                  onEnter: () => {\n                    insideTappable && onEnter();\n                    !restProps.disabled && this.onEnter();\n                  },\n                  onLeave: () => {\n                    insideTappable && onLeave();\n                    !restProps.disabled && this.onLeave();\n                  },\n                };\n                return (\n                  <RootComponent\n                    {...touchProps}\n                    {...restProps}\n                    vkuiClass={classes}\n                    {...props}>\n                    <TappableContext.Provider\n                      value={{\n                        insideTappable: true,\n                        onEnter: () => this.setState({ hasHover: false, hasActive: false }),\n                        onLeave: () => this.setState({ hasHover: propsHasHover, hasActive: propsHasActive }),\n                      }}\n                    >\n                      {children}\n                    </TappableContext.Provider>\n                    {platform === ANDROID && !hasMouse && hasActive && activeMode === 'background' &&\n                    <span vkuiClass=\"Tappable__waves\">\n                      {Object.keys(clicks).map((k: string) => {\n                        return (\n                          <span vkuiClass=\"Tappable__wave\" style={{ top: clicks[k].y, left: clicks[k].x }} key={k} />\n                        );\n                      })}\n                    </span>\n                    }\n                    {hasHover && <span vkuiClass=\"Tappable__hoverShadow\" />}\n                  </RootComponent>\n                );\n              }}\n            </TouchRootContext.Consumer>\n          );\n        }}\n      </TappableContext.Consumer>\n    );\n  }\n}\n\nexport default withAdaptivity(withPlatform(Tappable), { sizeX: true, hasMouse: true });\n"],"file":"Tappable.js"}