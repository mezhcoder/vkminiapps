"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.ACTIVE_EFFECT_DELAY = exports.ACTIVE_DELAY = void 0;

var _jsxRuntime = require("../../lib/jsxRuntime");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _Touch = _interopRequireDefault(require("../Touch/Touch"));

var _TouchContext = _interopRequireDefault(require("../Touch/TouchContext"));

var _classNames2 = require("../../lib/classNames");

var _getClassName = require("../../helpers/getClassName");

var _platform = require("../../lib/platform");

var _offset = require("../../lib/offset");

var _touch = require("../../lib/touch");

var _withPlatform = require("../../hoc/withPlatform");

var _InputUtils = require("@vkontakte/vkjs/lib/InputUtils");

var _utils = require("../../lib/utils");

var _withAdaptivity = require("../../hoc/withAdaptivity");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var ts = function ts() {
  return +Date.now();
};

var ACTIVE_DELAY = 70;
exports.ACTIVE_DELAY = ACTIVE_DELAY;
var ACTIVE_EFFECT_DELAY = 600;
exports.ACTIVE_EFFECT_DELAY = ACTIVE_EFFECT_DELAY;
var storage = {};
/*
 * Очищает таймауты и хранилище для всех экземпляров компонента, кроме переданного
 */

function deactivateOtherInstances(exclude) {
  Object.keys(storage).filter(function (id) {
    return id !== exclude;
  }).forEach(function (id) {
    clearTimeout(storage[id].activeTimeout);
    clearTimeout(storage[id].timeout);
    storage[id].stop();
    delete storage[id];
  });
}

var TappableContext = /*#__PURE__*/_react.default.createContext({
  insideTappable: false
});

var Tappable = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(Tappable, _Component);

  var _super = _createSuper(Tappable);

  function Tappable(props) {
    var _this;

    (0, _classCallCheck2.default)(this, Tappable);
    _this = _super.call(this, props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "id", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "isSlide", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "insideTouchRoot", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "container", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "timeout", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "wavesTimeout", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onStart", function (_ref) {
      var originalEvent = _ref.originalEvent;
      !_this.insideTouchRoot && _this.props.stopPropagation && originalEvent.stopPropagation();

      if (_this.state.hasActive) {
        if (originalEvent.touches && originalEvent.touches.length > 1) {
          deactivateOtherInstances();
          return;
        }

        if (_this.props.platform === _platform.ANDROID) {
          _this.onDown(originalEvent);
        }

        storage[_this.id] = {
          stop: _this.stop,
          activeTimeout: window.setTimeout(_this.start, ACTIVE_DELAY)
        };
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onMove", function (_ref2) {
      var originalEvent = _ref2.originalEvent,
          shiftXAbs = _ref2.shiftXAbs,
          shiftYAbs = _ref2.shiftYAbs;
      !_this.insideTouchRoot && _this.props.stopPropagation && originalEvent.stopPropagation();

      if (shiftXAbs > 20 || shiftYAbs > 20) {
        _this.isSlide = true;

        _this.stop();
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onEnd", function (_ref3) {
      var originalEvent = _ref3.originalEvent;
      !_this.insideTouchRoot && _this.props.stopPropagation && originalEvent.stopPropagation();
      var now = ts();

      if (originalEvent.touches && originalEvent.touches.length > 0) {
        _this.isSlide = false;

        _this.stop();

        return;
      }

      if (_this.state.active) {
        if (now - _this.state.ts >= 100) {
          // Долгий тап, выключаем подсветку
          _this.stop();
        } else {
          // Короткий тап, оставляем подсветку
          var timeout = window.setTimeout(_this.stop, _this.props.activeEffectDelay - now + _this.state.ts);

          var store = _this.getStorage();

          if (store) {
            store.timeout = timeout;
          }
        }
      } else if (!_this.isSlide) {
        // Очень короткий тап, включаем подсветку
        _this.start();

        var _timeout = window.setTimeout(_this.stop, _this.props.activeEffectDelay);

        if (_this.getStorage()) {
          clearTimeout(_this.getStorage().activeTimeout);
          _this.getStorage().timeout = _timeout;
        } else {
          _this.timeout = _timeout;
        }
      }

      _this.isSlide = false;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onDown", function (e) {
      if (_this.props.platform === _platform.ANDROID) {
        var _getOffsetRect = (0, _offset.getOffsetRect)(_this.container),
            top = _getOffsetRect.top,
            left = _getOffsetRect.left;

        var x = (0, _touch.coordX)(e) - left;
        var y = (0, _touch.coordY)(e) - top;
        var key = 'wave' + Date.now().toString();

        _this.setState(function (state) {
          return {
            clicks: _objectSpread(_objectSpread({}, state.clicks), {}, (0, _defineProperty2.default)({}, key, {
              x: x,
              y: y
            }))
          };
        });

        _this.wavesTimeout = window.setTimeout(function () {
          _this.setState(function (state) {
            var clicks = _objectSpread({}, state.clicks);

            delete clicks[key];
            return {
              clicks: clicks
            };
          });
        }, 225);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onEnter", function () {
      _this.setState({
        hovered: true
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onLeave", function () {
      _this.setState({
        hovered: false
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "start", function () {
      if (!_this.state.active && _this.state.hasActive) {
        _this.setState({
          active: true,
          ts: ts()
        });
      }

      deactivateOtherInstances(_this.id);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "stop", function () {
      if (_this.state.active) {
        _this.setState({
          active: false,
          ts: null
        });
      }

      if (_this.getStorage()) {
        clearTimeout(_this.getStorage().activeTimeout);
        delete storage[_this.id];
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getStorage", function () {
      return storage[_this.id];
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getRef", function (container) {
      _this.container = container;
      (0, _utils.setRef)(container, _this.props.getRootRef);
    });
    _this.id = Math.round(Math.random() * 1e8).toString(16);
    _this.state = {
      clicks: {},
      active: false,
      ts: null,
      hasHover: props.hasHover,
      hasActive: props.hasActive
    };
    _this.isSlide = false;
    return _this;
  }

  (0, _createClass2.default)(Tappable, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (storage[this.id]) {
        clearTimeout(storage[this.id].timeout);
        clearTimeout(storage[this.id].activeTimeout);
        delete storage[this.id];
      }

      clearTimeout(this.wavesTimeout);
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      if (prevProps.hasHover !== this.props.hasHover || prevProps.hasActive !== this.props.hasActive) {
        this.setState({
          hasHover: this.props.hasHover,
          hasActive: this.props.hasActive
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _classNames,
          _this2 = this;

      var _this$state = this.state,
          clicks = _this$state.clicks,
          active = _this$state.active,
          hovered = _this$state.hovered,
          hasHover = _this$state.hasHover,
          hasActive = _this$state.hasActive;
      var _this$props = this.props,
          children = _this$props.children,
          Component = _this$props.Component,
          activeEffectDelay = _this$props.activeEffectDelay,
          stopPropagation = _this$props.stopPropagation,
          getRootRef = _this$props.getRootRef,
          platform = _this$props.platform,
          sizeX = _this$props.sizeX,
          hasMouse = _this$props.hasMouse,
          propsHasHover = _this$props.hasHover,
          hoverMode = _this$props.hoverMode,
          propsHasActive = _this$props.hasActive,
          activeMode = _this$props.activeMode,
          restProps = (0, _objectWithoutProperties2.default)(_this$props, ["children", "Component", "activeEffectDelay", "stopPropagation", "getRootRef", "platform", "sizeX", "hasMouse", "hasHover", "hoverMode", "hasActive", "activeMode"]);
      var isPresetHoverMode = ['opacity', 'background'].includes(hoverMode);
      var isPresetActiveMode = ['opacity', 'background'].includes(activeMode);
      var classes = (0, _classNames2.classNames)((0, _getClassName.getClassName)('Tappable', platform), "Tappable--sizeX-".concat(sizeX), (_classNames = {
        'Tappable--active': hasActive && active,
        'Tappable--inactive': !active,
        'Tappable--mouse': hasMouse
      }, (0, _defineProperty2.default)(_classNames, "Tappable--hover-".concat(hoverMode), hasHover && hovered && isPresetHoverMode), (0, _defineProperty2.default)(_classNames, "Tappable--active-".concat(activeMode), hasActive && active && isPresetActiveMode), (0, _defineProperty2.default)(_classNames, hoverMode, hasHover && hovered && !isPresetHoverMode), (0, _defineProperty2.default)(_classNames, activeMode, hasActive && active && !isPresetActiveMode), _classNames));
      var RootComponent = restProps.disabled ? Component : _Touch.default;
      var props = {};

      if (!restProps.disabled) {
        props.Component = Component;
        /* eslint-disable */

        props.onStart = this.onStart;
        props.onMove = this.onMove;
        props.onEnd = this.onEnd;
        /* eslint-enable */

        props.getRootRef = this.getRef;
      } else {
        props.ref = this.getRef;
      }

      return (0, _jsxRuntime.createScopedElement)(TappableContext.Consumer, null, function (_ref4) {
        var insideTappable = _ref4.insideTappable,
            _onEnter = _ref4.onEnter,
            _onLeave = _ref4.onLeave;
        return (0, _jsxRuntime.createScopedElement)(_TouchContext.default.Consumer, null, function (insideTouchRoot) {
          _this2.insideTouchRoot = insideTouchRoot;
          var touchProps = restProps.disabled ? {} : {
            onEnter: function onEnter() {
              insideTappable && _onEnter();
              !restProps.disabled && _this2.onEnter();
            },
            onLeave: function onLeave() {
              insideTappable && _onLeave();
              !restProps.disabled && _this2.onLeave();
            }
          };
          return (0, _jsxRuntime.createScopedElement)(RootComponent, (0, _extends2.default)({}, touchProps, restProps, {
            vkuiClass: classes
          }, props), (0, _jsxRuntime.createScopedElement)(TappableContext.Provider, {
            value: {
              insideTappable: true,
              onEnter: function onEnter() {
                return _this2.setState({
                  hasHover: false,
                  hasActive: false
                });
              },
              onLeave: function onLeave() {
                return _this2.setState({
                  hasHover: propsHasHover,
                  hasActive: propsHasActive
                });
              }
            }
          }, children), platform === _platform.ANDROID && !hasMouse && hasActive && activeMode === 'background' && (0, _jsxRuntime.createScopedElement)("span", {
            vkuiClass: "Tappable__waves"
          }, Object.keys(clicks).map(function (k) {
            return (0, _jsxRuntime.createScopedElement)("span", {
              vkuiClass: "Tappable__wave",
              style: {
                top: clicks[k].y,
                left: clicks[k].x
              },
              key: k
            });
          })), hasHover && (0, _jsxRuntime.createScopedElement)("span", {
            vkuiClass: "Tappable__hoverShadow"
          }));
        });
      });
    }
  }]);
  return Tappable;
}(_react.Component);

(0, _defineProperty2.default)(Tappable, "defaultProps", {
  Component: 'div',
  role: 'button',
  stopPropagation: false,
  disabled: false,
  hasHover: _InputUtils.hasHover,
  hoverMode: 'background',
  hasActive: true,
  activeMode: 'background',
  activeEffectDelay: ACTIVE_EFFECT_DELAY
});

var _default = (0, _withAdaptivity.withAdaptivity)((0, _withPlatform.withPlatform)(Tappable), {
  sizeX: true,
  hasMouse: true
});

exports.default = _default;
//# sourceMappingURL=Tappable.js.map