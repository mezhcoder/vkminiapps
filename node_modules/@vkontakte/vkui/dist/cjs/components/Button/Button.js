"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _jsxRuntime = require("../../lib/jsxRuntime");

var _getClassName = require("../../helpers/getClassName");

var _classNames2 = require("../../lib/classNames");

var _Tappable = _interopRequireDefault(require("../Tappable/Tappable"));

var _Title = _interopRequireDefault(require("../Typography/Title/Title"));

var _Text = _interopRequireDefault(require("../Typography/Text/Text"));

var _Subhead = _interopRequireDefault(require("../Typography/Subhead/Subhead"));

var _Caption = _interopRequireDefault(require("../Typography/Caption/Caption"));

var _usePlatform = require("../../hooks/usePlatform");

var _withAdaptivity = require("../../hoc/withAdaptivity");

var _platform = require("../../lib/platform");

var getContent = function getContent(size, children, sizeY, platform) {
  switch (size) {
    case 'l':
      return sizeY === _withAdaptivity.SizeType.COMPACT ? (0, _jsxRuntime.createScopedElement)(_Text.default, {
        weight: "medium",
        vkuiClass: "Button__content"
      }, children) : (0, _jsxRuntime.createScopedElement)(_Title.default, {
        level: "3",
        weight: "medium",
        Component: "div",
        vkuiClass: "Button__content"
      }, children);

    case 'm':
      return sizeY === _withAdaptivity.SizeType.COMPACT ? (0, _jsxRuntime.createScopedElement)(_Subhead.default, {
        weight: platform === _platform.VKCOM ? 'regular' : 'medium',
        vkuiClass: "Button__content",
        Component: "div"
      }, children) : (0, _jsxRuntime.createScopedElement)(_Text.default, {
        weight: "medium",
        vkuiClass: "Button__content"
      }, children);

    case 's':
    default:
      if (platform === _platform.Platform.IOS) {
        return (0, _jsxRuntime.createScopedElement)(_Subhead.default, {
          weight: "medium",
          vkuiClass: "Button__content"
        }, children);
      } else if (platform === _platform.Platform.VKCOM) {
        return (0, _jsxRuntime.createScopedElement)(_Caption.default, {
          level: "1",
          weight: "regular",
          vkuiClass: "Button__content"
        }, children);
      } else {
        return sizeY === _withAdaptivity.SizeType.COMPACT ? (0, _jsxRuntime.createScopedElement)(_Caption.default, {
          level: "1",
          weight: "medium",
          vkuiClass: "Button__content"
        }, children) : (0, _jsxRuntime.createScopedElement)(_Subhead.default, {
          weight: "medium",
          vkuiClass: "Button__content"
        }, children);
      }

  }
};

var Button = function Button(props) {
  var _classNames;

  var platform = (0, _usePlatform.usePlatform)();
  var size = props.size,
      mode = props.mode,
      stretched = props.stretched,
      align = props.align,
      children = props.children,
      before = props.before,
      after = props.after,
      getRootRef = props.getRootRef,
      Component = props.Component,
      sizeY = props.sizeY,
      restProps = (0, _objectWithoutProperties2.default)(props, ["size", "mode", "stretched", "align", "children", "before", "after", "getRootRef", "Component", "sizeY"]);
  var hasIcons = Boolean(before || after);
  return (0, _jsxRuntime.createScopedElement)(_Tappable.default, (0, _extends2.default)({}, restProps, {
    vkuiClass: (0, _classNames2.classNames)((0, _getClassName.getClassName)('Button', platform), "Button--sz-".concat(size), "Button--lvl-".concat(mode), "Button--aln-".concat(align), "Button--sizeY-".concat(sizeY), (_classNames = {}, (0, _defineProperty2.default)(_classNames, 'Button--str', stretched), (0, _defineProperty2.default)(_classNames, 'Button--with-icon', hasIcons), _classNames)),
    getRootRef: getRootRef,
    Component: restProps.href ? 'a' : Component,
    activeMode: "opacity"
  }), (0, _jsxRuntime.createScopedElement)("div", {
    vkuiClass: "Button__in"
  }, before && (0, _jsxRuntime.createScopedElement)("div", {
    vkuiClass: "Button__before"
  }, before), children && getContent(size, children, sizeY, platform), after && (0, _jsxRuntime.createScopedElement)("div", {
    vkuiClass: "Button__after"
  }, after)));
};

Button.defaultProps = {
  mode: 'primary',
  Component: 'button',
  align: 'center',
  size: 's',
  stretched: false,
  stopPropagation: true
};

var _default = (0, _withAdaptivity.withAdaptivity)(Button, {
  sizeY: true
});

exports.default = _default;
//# sourceMappingURL=Button.js.map