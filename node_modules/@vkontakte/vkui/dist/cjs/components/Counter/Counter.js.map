{"version":3,"sources":["../../../../src/components/Counter/Counter.tsx"],"names":["CounterTypography","size","children","restProps","platform","weight","VKCOM","Counter","props","mode","Children","count","defaultProps","React","memo"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAMA,IAAMA,iBAA6C,GAAG,SAAhDA,iBAAgD,OAA8D;AAAA,MAA3DC,IAA2D,QAA3DA,IAA2D;AAAA,MAArDC,QAAqD,QAArDA,QAAqD;AAAA,MAAxCC,SAAwC;AAClH,MAAMC,QAAQ,GAAG,+BAAjB;;AAEA,MAAIH,IAAI,KAAK,GAAb,EAAkB;AAChB,QAAMI,MAAM,GAAGD,QAAQ,KAAKE,eAAb,GAAqB,QAArB,GAAgC,SAA/C;AAEA,WAAO,qCAAC,gBAAD;AAAS,MAAA,KAAK,EAAC,GAAf;AAAmB,MAAA,MAAM,EAAED;AAA3B,OAAuCF,SAAvC,GAAmDD,QAAnD,CAAP;AACD;;AAED,SAAO,qCAAC,aAAD;AAAM,IAAA,MAAM,EAAC;AAAb,KAA0BC,SAA1B,GAAsCD,QAAtC,CAAP;AACD,CAVD;;AAoBA,IAAMK,OAAyB,GAAG,SAA5BA,OAA4B,CAACC,KAAD,EAAyB;AAAA,MACjDC,IADiD,GACVD,KADU,CACjDC,IADiD;AAAA,MAC3CR,IAD2C,GACVO,KADU,CAC3CP,IAD2C;AAAA,MACrCC,QADqC,GACVM,KADU,CACrCN,QADqC;AAAA,MACxBC,SADwB,0CACVK,KADU;AAEzD,MAAMJ,QAAQ,GAAG,+BAAjB;;AAEA,MAAIM,gBAASC,KAAT,CAAeT,QAAf,MAA6B,CAAjC,EAAoC;AAClC,WAAO,IAAP;AACD;;AAED,SACE,uEACMC,SADN;AAEE,IAAA,SAAS,EAAE,4BACT,gCAAa,SAAb,EAAwBC,QAAxB,CADS,qBAEGK,IAFH,wBAGKR,IAHL;AAFb,MAQG,yBAAaC,QAAb,KAA0B,qCAAC,iBAAD;AAAmB,IAAA,IAAI,EAAED,IAAzB;AAA+B,IAAA,SAAS,EAAC;AAAzC,KAAwDC,QAAxD,CAR7B,CADF;AAYD,CApBD;;AAsBAK,OAAO,CAACK,YAAR,GAAuB;AACrBH,EAAAA,IAAI,EAAE,WADe;AAErBR,EAAAA,IAAI,EAAE;AAFe,CAAvB;;4BAKeY,eAAMC,IAAN,CAAWP,OAAX,C","sourcesContent":["import React, { HTMLAttributes, FC, Children } from 'react';\nimport { classNames } from '../../lib/classNames';\nimport { getClassName } from '../../helpers/getClassName';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport Caption from '../Typography/Caption/Caption';\nimport Text from '../Typography/Text/Text';\nimport { VKCOM } from '../../lib/platform';\nimport { hasReactNode } from '../../lib/utils';\n\ninterface CounterTypographyProps extends HTMLAttributes<HTMLDivElement> {\n  size: CounterProps['size'];\n}\n\nconst CounterTypography: FC<CounterTypographyProps> = ({ size, children, ...restProps }: CounterTypographyProps) => {\n  const platform = usePlatform();\n\n  if (size === 's') {\n    const weight = platform === VKCOM ? 'medium' : 'regular';\n\n    return <Caption level=\"2\" weight={weight} {...restProps}>{children}</Caption>;\n  }\n\n  return <Text weight=\"medium\" {...restProps}>{children}</Text>;\n};\n\nexport interface CounterProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Тип счетчика. При использовании компонента в качестве значения свойства `after` у `Button` эти значения игнорируются\n   */\n  mode?: 'secondary' | 'primary' | 'prominent';\n  size?: 's' | 'm';\n}\n\nconst Counter: FC<CounterProps> = (props: CounterProps) => {\n  const { mode, size, children, ...restProps } = props;\n  const platform = usePlatform();\n\n  if (Children.count(children) === 0) {\n    return null;\n  }\n\n  return (\n    <div\n      {...restProps}\n      vkuiClass={classNames(\n        getClassName('Counter', platform),\n        `Counter--${mode}`,\n        `Counter--s-${size}`,\n      )}\n    >\n      {hasReactNode(children) && <CounterTypography size={size} vkuiClass=\"Counter__in\">{children}</CounterTypography>}\n    </div>\n  );\n};\n\nCounter.defaultProps = {\n  mode: 'secondary',\n  size: 'm',\n};\n\nexport default React.memo(Counter);\n"],"file":"Counter.js"}