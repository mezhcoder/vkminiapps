"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _jsxRuntime = require("../../lib/jsxRuntime");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = require("react");

var _dom = require("../../lib/dom");

var _classNames = require("../../lib/classNames");

var _AppRootContext = require("./AppRootContext");

var _withAdaptivity = require("../../hoc/withAdaptivity");

var _useIsomorphicLayoutEffect = require("../../lib/useIsomorphicLayoutEffect");

var _classScopingMode = require("../../lib/classScopingMode");

var _icons = require("@vkontakte/icons");

var _ScrollContext = require("./ScrollContext");

function applyAdaptivityStyles(container, sizeX) {
  if (sizeX === _withAdaptivity.SizeType.REGULAR) {
    container.classList.add('vkui--sizeX-regular');
  } else {
    container.classList.remove('vkui--sizeX-regular');
  }
}

var AppRoot = function AppRoot(_ref) {
  var children = _ref.children,
      embedded = _ref.embedded,
      sizeX = _ref.sizeX,
      hasMouse = _ref.hasMouse,
      _ref$noLegacyClasses = _ref.noLegacyClasses,
      noLegacyClasses = _ref$noLegacyClasses === void 0 ? false : _ref$noLegacyClasses,
      _ref$scroll = _ref.scroll,
      scroll = _ref$scroll === void 0 ? 'global' : _ref$scroll,
      props = (0, _objectWithoutProperties2.default)(_ref, ["children", "embedded", "sizeX", "hasMouse", "noLegacyClasses", "scroll"]);
  var rootRef = (0, _react.useRef)();

  var _useState = (0, _react.useState)(null),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      portalRoot = _useState2[0],
      setPortalRoot = _useState2[1];

  var _useDOM = (0, _dom.useDOM)(),
      window = _useDOM.window,
      document = _useDOM.document;

  var initialized = (0, _react.useRef)(false);

  if (!initialized.current) {
    if (window && !embedded) {
      document.documentElement.classList.add('vkui');
    }

    _classScopingMode.classScopingMode.noConflict = noLegacyClasses;
  }

  (0, _react.useEffect)(function () {
    if (scroll !== 'global' && !embedded) {
      console.warn('[VKUI/AppRoot] Scroll modes only supported in embedded mode');
    }
  }, [scroll]); // one time initialization and cleanup

  (0, _useIsomorphicLayoutEffect.useIsomorphicLayoutEffect)(function () {
    var doc = document.documentElement;
    var body = document.body;
    var parentNode = rootRef.current.parentElement;
    var portal;

    if (embedded) {
      portal = document.createElement('div');
      portal.classList.add('vkui__portal-root');
      body.appendChild(portal);
      setPortalRoot(portal);
      parentNode.classList.add('vkui__root', 'vkui__root--embedded');
    } else {
      parentNode.classList.add('vkui__root');
    }

    initialized.current = true;
    return function () {
      if (embedded) {
        parentNode.classList.remove('vkui__root', 'vkui__root--embedded', 'vkui--sizeX-regular');
        portal.parentElement.removeChild(portal);
      } else {
        parentNode.classList.remove('vkui__root');
        body.classList.remove('vkui__root', 'vkui--sizeX-regular');
        doc.classList.remove('vkui');
      }
    };
  }, []); // adaptivity handler

  (0, _useIsomorphicLayoutEffect.useIsomorphicLayoutEffect)(function () {
    return applyAdaptivityStyles(embedded ? rootRef.current.parentElement : document.body, sizeX);
  }, [sizeX]);
  var scrollController = (0, _react.useMemo)(function () {
    return scroll === 'contain' ? (0, _ScrollContext.elementScrollController)(rootRef) : (0, _ScrollContext.globalScrollController)(window, document);
  }, [scroll]);
  return (0, _jsxRuntime.createScopedElement)("div", (0, _extends2.default)({
    ref: rootRef,
    vkuiClass: (0, _classNames.classNames)('AppRoot', {
      'AppRoot--no-mouse': !hasMouse
    })
  }, props), (0, _jsxRuntime.createScopedElement)(_AppRootContext.AppRootContext.Provider, {
    value: {
      appRoot: rootRef,
      portalRoot: portalRoot,
      embedded: embedded
    }
  }, (0, _jsxRuntime.createScopedElement)(_ScrollContext.ScrollContext.Provider, {
    value: scrollController
  }, (0, _jsxRuntime.createScopedElement)(_icons.IconSettingsProvider, {
    classPrefix: "vkui",
    globalClasses: !noLegacyClasses
  }, children))));
};

var _default = (0, _withAdaptivity.withAdaptivity)(AppRoot, {
  sizeX: true,
  hasMouse: true
});

exports.default = _default;
//# sourceMappingURL=AppRoot.js.map