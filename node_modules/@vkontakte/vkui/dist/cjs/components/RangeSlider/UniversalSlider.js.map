{"version":3,"sources":["../../../../src/components/RangeSlider/UniversalSlider.tsx"],"names":["UniversalSliderDumb","e","props","disabled","boundingRect","container","getBoundingClientRect","containerWidth","width","absolutePosition","startX","left","value","offsetToValue","dragging","snapDirection","originalEvent","target","onChange","updateRange","shiftX","preventDefault","getRootRef","start","end","absolute","min","max","step","thumbStart","current","thumbEnd","Math","abs","defaultValue","platform","sizeY","restProps","toPercent","v","isRange","draggerStyle","join","onStart","onMove","onEnd","getRef","Component","UniversalSlider"],"mappings":"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","sourcesContent":["import { Component, createRef, HTMLAttributes, RefCallback } from 'react';\nimport Touch, { TouchEvent, TouchEventHandler } from '../Touch/Touch';\nimport { getClassName } from '../../helpers/getClassName';\nimport { classNames } from '../../lib/classNames';\nimport { HasPlatform, HasRootRef } from '../../types';\nimport { setRef } from '../../lib/utils';\nimport { rescale } from '../../helpers/math';\nimport { withAdaptivity, AdaptivityProps } from '../../hoc/withAdaptivity';\nimport { withPlatform } from '../../hoc/withPlatform';\n\nexport type UniversalValue = [number | null, number];\n\nexport interface UniversalSliderProps<Value> extends\n  HasRootRef<HTMLDivElement>,\n  HasPlatform,\n  Omit<HTMLAttributes<HTMLDivElement>, 'value' | 'defaultValue' | 'onChange'>,\n  AdaptivityProps {\n  min?: number;\n  max?: number;\n  step?: number;\n  value?: Value;\n  defaultValue?: Value;\n  disabled?: boolean;\n  onChange?(value: Value, e: TouchEvent): void;\n}\n\nclass UniversalSliderDumb extends Component<UniversalSliderProps<UniversalValue>> {\n  dragging: false | 'start' | 'end' = false;\n  startX = 0;\n  containerWidth = 0;\n\n  container: HTMLDivElement;\n  thumbStart = createRef<HTMLDivElement>();\n  thumbEnd = createRef<HTMLDivElement>();\n\n  onStart: TouchEventHandler = (e: TouchEvent) => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    const boundingRect = this.container.getBoundingClientRect();\n    this.containerWidth = boundingRect.width;\n\n    const absolutePosition = e.startX - boundingRect.left;\n    const value = this.offsetToValue(absolutePosition);\n    this.dragging = this.snapDirection(value, e.originalEvent.target);\n    this.startX = absolutePosition;\n\n    this.props.onChange(this.updateRange(value), e);\n  };\n\n  onMove: TouchEventHandler = (e: TouchEvent) => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    const value = this.offsetToValue(this.startX + (e.shiftX || 0));\n    this.props.onChange(this.updateRange(value), e);\n\n    e.originalEvent.preventDefault();\n  };\n\n  onEnd: TouchEventHandler = () => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    this.dragging = false;\n  };\n\n  updateRange(value: number): UniversalValue {\n    if (this.props.disabled) {\n      return this.props.value;\n    }\n\n    const [start, end] = this.props.value;\n\n    if (start == null) {\n      return [null, value];\n    }\n\n    const { dragging } = this;\n    if (dragging === 'start') {\n      if (value > end) {\n        // \"перехватиться\", если перетянули за конец\n        this.dragging = 'end';\n        return [end, value];\n      }\n      return [value, end];\n    }\n    if (dragging === 'end') {\n      if (value < start) {\n        // \"перехватиться\", если перетянули за начало\n        this.dragging = 'start';\n        return [value, start];\n      }\n      return [start, value];\n    }\n    return this.props.value;\n  };\n\n  offsetToValue(absolute: number) {\n    const { min, max, step } = this.props;\n    return rescale(absolute, [0, this.containerWidth], [min, max], { step });\n  }\n\n  snapDirection(value: number, target: EventTarget) {\n    if (target === this.thumbStart.current) {\n      return 'start';\n    }\n    if (target === this.thumbEnd.current) {\n      return 'end';\n    }\n    const [start, end] = this.props.value;\n    return Math.abs(start - value) <= Math.abs(end - value) ? 'start' : 'end';\n  }\n\n  getRef: RefCallback<HTMLDivElement> = (container) => {\n    this.container = container;\n    setRef(container, this.props.getRootRef);\n  };\n\n  render() {\n    const { min, max, step, value, defaultValue,\n      onChange, getRootRef, platform, sizeY, disabled, ...restProps } = this.props;\n    const toPercent = (v: number) => (v - min) / (max - min) * 100;\n\n    const isRange = value[0] != null;\n    const draggerStyle = isRange ? {\n      width: `${toPercent(value[1]) - toPercent(value[0])}%`,\n      left: isRange ? `${toPercent(value[0])}%` : null,\n    } : {\n      width: `${toPercent(value[1])}%`,\n    };\n\n    return (\n      <Touch\n        data-value={isRange ? value.join(',') : value}\n        {...restProps}\n        onStart={this.onStart}\n        onMove={this.onMove}\n        onEnd={this.onEnd}\n        vkuiClass={classNames(\n          getClassName('Slider', platform),\n          `Slider--sizeY-${sizeY}`,\n          disabled && 'Slider--disabled',\n        )}\n      >\n        <div ref={this.getRef} vkuiClass=\"Slider__in\">\n          <div vkuiClass=\"Slider__dragger\" style={draggerStyle}>\n            {isRange && <span vkuiClass={classNames('Slider__thumb', 'Slider__thumb--start')} ref={this.thumbStart} />}\n            <span vkuiClass={classNames('Slider__thumb', 'Slider__thumb--end')} ref={this.thumbEnd} />\n          </div>\n        </div>\n      </Touch>\n    );\n  }\n}\n\nexport const UniversalSlider = withAdaptivity(withPlatform(UniversalSliderDumb), {\n  sizeY: true,\n});\n"],"file":"UniversalSlider.js"}