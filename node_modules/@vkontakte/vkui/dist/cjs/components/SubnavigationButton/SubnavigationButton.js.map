{"version":3,"sources":["../../../../src/components/SubnavigationButton/SubnavigationButton.tsx"],"names":["renderLabel","children","textLevel","className","SubnavigationButton","props","platform","size","selected","before","after","expandable","restProps","defaultProps"],"mappings":";;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAoBA,SAASA,WAAT,CAAqBC,QAArB,EAA0CC,SAA1C,EAAuG;AACrG,MAAMC,SAAS,GAAG,4BAAlB;;AAEA,UAAQD,SAAR;AACE,SAAK,CAAL;AACE,aACE,qCAAC,gBAAD;AAAS,QAAA,SAAS,EAAC,KAAnB;AAAyB,QAAA,MAAM,EAAC,SAAhC;AAA0C,QAAA,SAAS,EAAEC;AAArD,SACGF,QADH,CADF;;AAMF,SAAK,CAAL;AACE,aACE,qCAAC,gBAAD;AAAS,QAAA,KAAK,EAAC,GAAf;AAAmB,QAAA,SAAS,EAAC,KAA7B;AAAmC,QAAA,MAAM,EAAC,SAA1C;AAAoD,QAAA,SAAS,EAAEE;AAA/D,SACGF,QADH,CADF;;AAMF,SAAK,CAAL;AACE,aACE,qCAAC,gBAAD;AAAS,QAAA,KAAK,EAAC,GAAf;AAAmB,QAAA,SAAS,EAAC,KAA7B;AAAmC,QAAA,MAAM,EAAC,SAA1C;AAAoD,QAAA,SAAS,EAAEE;AAA/D,SACGF,QADH,CADF;AAhBJ;AAsBD;;AAEM,IAAMG,mBAAiD,GAAG,SAApDA,mBAAoD,CAACC,KAAD,EAAqC;AACpG,MAAMC,QAAQ,GAAG,+BAAjB;AADoG,MAGlGC,IAHkG,GAWhGF,KAXgG,CAGlGE,IAHkG;AAAA,MAIlGC,QAJkG,GAWhGH,KAXgG,CAIlGG,QAJkG;AAAA,MAKlGN,SALkG,GAWhGG,KAXgG,CAKlGH,SALkG;AAAA,MAMlGO,MANkG,GAWhGJ,KAXgG,CAMlGI,MANkG;AAAA,MAOlGC,KAPkG,GAWhGL,KAXgG,CAOlGK,KAPkG;AAAA,MAQlGC,UARkG,GAWhGN,KAXgG,CAQlGM,UARkG;AAAA,MASlGV,QATkG,GAWhGI,KAXgG,CASlGJ,QATkG;AAAA,MAU/FW,SAV+F,0CAWhGP,KAXgG;AAapG,SACE,qCAAC,iBAAD,6BACMO,SADN;AAEE,IAAA,SAAS,EAAE,KAFb;AAGE,IAAA,SAAS,EAAE,4BACT,gCAAa,qBAAb,EAAoCN,QAApC,CADS,iCAEeC,IAFf,GAGT;AACE,uCAAiCC;AADnC,KAHS;AAHb,MAWE;AAAK,IAAA,SAAS,EAAC;AAAf,KACG,yBAAaC,MAAb,KAAwB;AAAK,IAAA,SAAS,EAAC;AAAf,KAA8CA,MAA9C,CAD3B,EAEGT,WAAW,CAACC,QAAD,EAAWC,SAAX,CAFd,EAGG,yBAAaQ,KAAb,KAAuB;AAAK,IAAA,SAAS,EAAC;AAAf,KAA6CA,KAA7C,CAH1B,EAIGC,UAAU,IAAI,qCAAC,qBAAD;AAAgB,IAAA,SAAS,EAAC;AAA1B,IAJjB,CAXF,CADF;AAoBD,CAjCM;;;AAmCPP,mBAAmB,CAACS,YAApB,GAAmC;AACjCN,EAAAA,IAAI,EAAE,GAD2B;AAEjCL,EAAAA,SAAS,EAAE;AAFsB,CAAnC","sourcesContent":["import { FC, ReactNode } from 'react';\nimport { classNames } from '../../lib/classNames';\nimport { getClassName } from '../../helpers/getClassName';\nimport { hasReactNode } from '../../lib/utils';\nimport Tappable, { TappableProps } from '../Tappable/Tappable';\nimport { Icon16Dropdown } from '@vkontakte/icons';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport Caption from '../Typography/Caption/Caption';\nimport Subhead from '../Typography/Subhead/Subhead';\n\nexport interface SubnavigationButtonProps extends Omit<TappableProps, 'size'> {\n  size?: 'm' | 'l';\n  selected?: boolean;\n  /**\n   * Размер шрифта. Этим свойством рекомендуется пользоваться, чтобы отрегулировать размер шрифта у кнопок в `<SubnavigationBar mode=\"fixed\" />`\n   */\n  textLevel?: 1 | 2 | 3;\n  /**\n   * Рекомендуется использовать только иконки с размером 24\n   */\n  before?: ReactNode;\n  /**\n   * Рекомендуется использовать только `<Counter size=\"s\" />` или `<Badge />`\n   */\n  after?: ReactNode;\n  expandable?: boolean;\n}\n\nfunction renderLabel(children: ReactNode, textLevel: SubnavigationButtonProps['textLevel']): ReactNode {\n  const className = 'SubnavigationButton__label';\n\n  switch (textLevel) {\n    case 1:\n      return (\n        <Subhead Component=\"div\" weight=\"regular\" vkuiClass={className}>\n          {children}\n        </Subhead>\n      );\n\n    case 2:\n      return (\n        <Caption level=\"1\" Component=\"div\" weight=\"regular\" vkuiClass={className}>\n          {children}\n        </Caption>\n      );\n\n    case 3:\n      return (\n        <Caption level=\"2\" Component=\"div\" weight=\"regular\" vkuiClass={className}>\n          {children}\n        </Caption>\n      );\n  }\n}\n\nexport const SubnavigationButton: FC<SubnavigationButtonProps> = (props: SubnavigationButtonProps) => {\n  const platform = usePlatform();\n  const {\n    size,\n    selected,\n    textLevel,\n    before,\n    after,\n    expandable,\n    children,\n    ...restProps\n  } = props;\n\n  return (\n    <Tappable\n      {...restProps}\n      hasActive={false}\n      vkuiClass={classNames(\n        getClassName('SubnavigationButton', platform),\n        `SubnavigationButton--${size}`,\n        {\n          'SubnavigationButton--selected': selected,\n        },\n      )}\n    >\n      <div vkuiClass=\"SubnavigationButton__in\">\n        {hasReactNode(before) && <div vkuiClass=\"SubnavigationButton__before\">{before}</div>}\n        {renderLabel(children, textLevel)}\n        {hasReactNode(after) && <div vkuiClass=\"SubnavigationButton__after\">{after}</div>}\n        {expandable && <Icon16Dropdown vkuiClass=\"SubnavigationButton__expandableIcon\" />}\n      </div>\n    </Tappable>\n  );\n};\n\nSubnavigationButton.defaultProps = {\n  size: 'm',\n  textLevel: 1,\n};\n"],"file":"SubnavigationButton.js"}