{"version":3,"sources":["../../../../src/components/RichCell/RichCell.tsx"],"names":["RichCell","children","text","caption","before","after","bottom","actions","multiline","Component","onClick","sizeY","restProps","platform","RootComponent","disabled","Tappable","undefined","props","href","defaultProps"],"mappings":";;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAkCA,IAAMA,QAA0C,GAAG,SAA7CA,QAA6C,OAa7C;AAAA,MAZJC,QAYI,QAZJA,QAYI;AAAA,MAXJC,IAWI,QAXJA,IAWI;AAAA,MAVJC,OAUI,QAVJA,OAUI;AAAA,MATJC,MASI,QATJA,MASI;AAAA,MARJC,KAQI,QARJA,KAQI;AAAA,MAPJC,MAOI,QAPJA,MAOI;AAAA,MANJC,OAMI,QANJA,OAMI;AAAA,MALJC,SAKI,QALJA,SAKI;AAAA,MAJJC,SAII,QAJJA,SAII;AAAA,MAHJC,OAGI,QAHJA,OAGI;AAAA,MAFJC,KAEI,QAFJA,KAEI;AAAA,MADDC,SACC;AACJ,MAAMC,QAAQ,GAAG,+BAAjB;AACA,MAAMC,aAAa,GAAGF,SAAS,CAACG,QAAV,GAAqBN,SAArB,GAAiCO,iBAAvD;AACAP,EAAAA,SAAS,GAAGG,SAAS,CAACG,QAAV,GAAqBE,SAArB,GAAiCR,SAA7C;AAEA,MAAMS,KAAoB,GAAGN,SAA7B;;AAEA,MAAI,CAACA,SAAS,CAACG,QAAf,EAAyB;AACvBG,IAAAA,KAAK,CAACT,SAAN,GAAkBG,SAAS,CAACO,IAAV,GAAiB,GAAjB,GAAuBV,SAAzC;AACAS,IAAAA,KAAK,CAACR,OAAN,GAAgBA,OAAhB;AACD;;AAED,SACE,qCAAC,aAAD,6BACMQ,KADN;AAEE,IAAA,SAAS,EACP,4BACE,gCAAa,UAAb,EAAyBL,QAAzB,CADF,EAEE;AACE,wBAAkBL;AADpB,KAFF,4BAKqBG,KALrB;AAHJ,MAYGP,MAZH,EAaE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KAEGC,KAFH,EAGE,qCAAC,aAAD;AAAM,IAAA,MAAM,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC;AAAhC,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KAAqCJ,QAArC,CADF,EAEG,yBAAaI,KAAb,KAAuB;AAAK,IAAA,SAAS,EAAC;AAAf,KAAkCA,KAAlC,CAF1B,CAHF,EAOG,yBAAaH,IAAb,KAAsB,qCAAC,aAAD;AAAM,IAAA,MAAM,EAAC,SAAb;AAAuB,IAAA,SAAS,EAAC;AAAjC,KAAmDA,IAAnD,CAPzB,EAQG,yBAAaC,OAAb,KAAyB,qCAAC,gBAAD;AAAS,IAAA,KAAK,EAAC,GAAf;AAAmB,IAAA,MAAM,EAAC,SAA1B;AAAoC,IAAA,SAAS,EAAC;AAA9C,KAAmEA,OAAnE,CAR5B,EASG,CAAC,yBAAaG,MAAb,KAAwB,yBAAaC,OAAb,CAAzB,KACC;AAAK,IAAA,SAAS,EAAC;AAAf,KACGD,MADH,EAEG,yBAAaC,OAAb,KAAyB;AAAK,IAAA,SAAS,EAAC;AAAf,KAAoCA,OAApC,CAF5B,CAVJ,CADF,CAbF,CADF;AAkCD,CA3DD;;AA6DAP,QAAQ,CAACoB,YAAT,GAAwB;AACtBX,EAAAA,SAAS,EAAE;AADW,CAAxB;;eAIe,oCAAeT,QAAf,EAAyB;AAAEW,EAAAA,KAAK,EAAE;AAAT,CAAzB,C","sourcesContent":["import { FunctionComponent, ReactNode } from 'react';\nimport { classNames } from '../../lib/classNames';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { getClassName } from '../../helpers/getClassName';\nimport Tappable, { TappableProps } from '../Tappable/Tappable';\nimport { hasReactNode } from '../../lib/utils';\nimport Text from '../Typography/Text/Text';\nimport Caption from '../Typography/Caption/Caption';\nimport { withAdaptivity } from '../../hoc/withAdaptivity';\n\nexport interface RichCellProps extends TappableProps {\n  /**\n   * Контейнер для текста под `children`.\n   */\n  text?: ReactNode;\n  /**\n   * Контейнер для текста под `text`.\n   */\n  caption?: ReactNode;\n  /**\n   * Контейнер для контента под `caption`. Например `<UsersStack size=\"s\" />`\n   */\n  bottom?: ReactNode;\n  /**\n   * Кнопка или набор кнопок `<Button size=\"s\" />`. Располагается под `bottom`.\n   */\n  actions?: ReactNode;\n  /**\n   * `<Avatar size={48|72} />`\n   */\n  before?: ReactNode;\n  /**\n   * Иконка 28 или текст\n   */\n  after?: ReactNode;\n  /**\n   * Убирает анимацию нажатия\n   */\n  disabled?: boolean;\n  multiline?: boolean;\n}\n\nconst RichCell: FunctionComponent<RichCellProps> = ({\n  children,\n  text,\n  caption,\n  before,\n  after,\n  bottom,\n  actions,\n  multiline,\n  Component,\n  onClick,\n  sizeY,\n  ...restProps\n}) => {\n  const platform = usePlatform();\n  const RootComponent = restProps.disabled ? Component : Tappable;\n  Component = restProps.disabled ? undefined : Component;\n\n  const props: RichCellProps = restProps;\n\n  if (!restProps.disabled) {\n    props.Component = restProps.href ? 'a' : Component;\n    props.onClick = onClick;\n  }\n\n  return (\n    <RootComponent\n      {...props}\n      vkuiClass={\n        classNames(\n          getClassName('RichCell', platform),\n          {\n            'RichCell--mult': multiline,\n          },\n          `RichCell--sizeY-${sizeY}`,\n        )\n      }\n    >\n      {before}\n      <div vkuiClass=\"RichCell__in\">\n        <div vkuiClass=\"RichCell__top\">\n          {/* Этот after будет скрыт из верстки. Он нужен для CSS */}\n          {after}\n          <Text weight=\"medium\" vkuiClass=\"RichCell__content\">\n            <div vkuiClass=\"RichCell__children\">{children}</div>\n            {hasReactNode(after) && <div vkuiClass=\"RichCell__after\">{after}</div>}\n          </Text>\n          {hasReactNode(text) && <Text weight=\"regular\" vkuiClass=\"RichCell__text\">{text}</Text>}\n          {hasReactNode(caption) && <Caption level=\"1\" weight=\"regular\" vkuiClass=\"RichCell__caption\">{caption}</Caption>}\n          {(hasReactNode(bottom) || hasReactNode(actions)) &&\n            <div vkuiClass=\"RichCell__bottom\">\n              {bottom}\n              {hasReactNode(actions) && <div vkuiClass=\"RichCell__actions\">{actions}</div>}\n            </div>\n          }\n        </div>\n      </div>\n    </RootComponent>\n  );\n};\n\nRichCell.defaultProps = {\n  Component: 'div',\n};\n\nexport default withAdaptivity(RichCell, { sizeY: true });\n"],"file":"RichCell.js"}