{"version":3,"sources":["../../../../src/components/Epic/Epic.tsx"],"names":["Epic","props","platform","scroll","current","activeStory","tabbar","children","viewWidth","restProps","ViewWidth","SMALL_TABLET","console","warn","story","React","Children","toArray","find","value"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAOO,IAAMA,IAAmB,GAAG,SAAtBA,IAAsB,CAACC,KAAD,EAAsB;AACvD,MAAMC,QAAQ,GAAG,+BAAjB;AACA,MAAMC,MAAM,GAAG,mBAAkC,EAAlC,EAAsCC,OAArD;AAFuD,MAG/CC,WAH+C,GAGYJ,KAHZ,CAG/CI,WAH+C;AAAA,MAGlCC,MAHkC,GAGYL,KAHZ,CAGlCK,MAHkC;AAAA,MAG1BC,QAH0B,GAGYN,KAHZ,CAG1BM,QAH0B;AAAA,MAGhBC,SAHgB,GAGYP,KAHZ,CAGhBO,SAHgB;AAAA,MAGFC,SAHE,0CAGYR,KAHZ;AAKvD,wBAAU,YAAM;AACd,QAAI,CAACK,MAAD,IAAWE,SAAS,GAAGE,0BAAUC,YAArC,EAAmD;AACjDC,MAAAA,OAAO,CAACC,IAAR,CAAa,+DAAb;AACD;AACF,GAJD,EAIG,CAACL,SAAD,CAJH;AAKA,MAAMM,KAAK,GAAIC,eAAMC,QAAN,CAAeC,OAAf,CAAuBV,QAAvB,CAAD,CAAqDW,IAArD,CAA0D,UAACJ,KAAD;AAAA,WAAW,wBAASA,KAAK,CAACb,KAAf,MAA0BI,WAArC;AAAA,GAA1D,KAA+G,IAA7H;AAEA,SACE,uEAASI,SAAT;AAAoB,IAAA,SAAS,EAAE,gCAAa,MAAb,EAAqBP,QAArB;AAA/B,MACE,qCAAC,wBAAD;AACE,IAAA,GAAG,EAAEG,WADP;AAEE,IAAA,aAAa,EAAEF,MAAM,CAACE,WAAD,CAAN,IAAuB,CAFxC;AAGE,IAAA,UAAU,EAAE,oBAACc,KAAD;AAAA,aAAWhB,MAAM,CAACE,WAAD,CAAN,GAAsBc,KAAjC;AAAA;AAHd,KAIEL,KAJF,CADF,EAMGR,MANH,CADF;AAUD,CAtBM;;;;eAwBQ,oCAAeN,IAAf,EAAqB;AAClCQ,EAAAA,SAAS,EAAE;AADuB,CAArB,C","sourcesContent":["import React, { HTMLAttributes, ReactNode, ReactElement, FC, useEffect, useRef } from 'react';\nimport { getClassName } from '../../helpers/getClassName';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { withAdaptivity, ViewWidth, AdaptivityProps } from '../../hoc/withAdaptivity';\nimport { ScrollSaver } from './ScrollSaver';\nimport { getNavId } from '../../lib/getNavId';\n\nexport interface EpicProps extends HTMLAttributes<HTMLDivElement>, AdaptivityProps {\n  tabbar?: ReactNode;\n  activeStory: string;\n}\n\nexport const Epic: FC<EpicProps> = (props: EpicProps) => {\n  const platform = usePlatform();\n  const scroll = useRef<{ [key: string]: number }>({}).current;\n  const { activeStory, tabbar, children, viewWidth, ...restProps } = props;\n\n  useEffect(() => {\n    if (!tabbar && viewWidth < ViewWidth.SMALL_TABLET) {\n      console.warn('[Epic] Using Epic without tabbar is not recommended on mobile');\n    }\n  }, [viewWidth]);\n  const story = (React.Children.toArray(children) as ReactElement[]).find((story) => getNavId(story.props) === activeStory) || null;\n\n  return (\n    <div {...restProps} vkuiClass={getClassName('Epic', platform)}>\n      <ScrollSaver\n        key={activeStory}\n        initialScroll={scroll[activeStory] || 0}\n        saveScroll={(value) => scroll[activeStory] = value}\n      >{story}</ScrollSaver>\n      {tabbar}\n    </div>\n  );\n};\n\nexport default withAdaptivity(Epic, {\n  viewWidth: true,\n});\n"],"file":"Epic.js"}