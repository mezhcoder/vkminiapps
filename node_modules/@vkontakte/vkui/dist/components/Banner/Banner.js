import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import { createScopedElement } from "../../lib/jsxRuntime";
import { Children } from 'react';
import { getClassName } from "../../helpers/getClassName";
import { classNames } from "../../lib/classNames";
import { usePlatform } from "../../hooks/usePlatform";
import { ANDROID, IOS, VKCOM } from "../../lib/platform";
import { Icon24Chevron, Icon24DismissSubstract, Icon24DismissDark, Icon24Cancel } from '@vkontakte/icons';
import Tappable from "../Tappable/Tappable";
import Headline from "../Typography/Headline/Headline";
import Caption from "../Typography/Caption/Caption";
import Text from "../Typography/Text/Text";
import { hasReactNode } from "../../lib/utils";
import Title from "../Typography/Title/Title";

function renderHeader(_ref) {
  var size = _ref.size,
      header = _ref.header;

  switch (size) {
    case 's':
      return createScopedElement(Headline, {
        weight: "medium",
        vkuiClass: "Banner__header"
      }, header);

    case 'm':
      return createScopedElement(Title, {
        level: "2",
        weight: "medium",
        vkuiClass: "Banner__header"
      }, header);
  }
}

function renderSubheader(_ref2) {
  var size = _ref2.size,
      subheader = _ref2.subheader;

  switch (size) {
    case 's':
      return createScopedElement(Caption, {
        level: "1",
        weight: "regular",
        vkuiClass: "Banner__subheader"
      }, subheader);

    case 'm':
      return createScopedElement(Text, {
        weight: "regular",
        vkuiClass: "Banner__subheader"
      }, subheader);
  }
}

var Banner = function Banner(props) {
  var platform = usePlatform();

  var mode = props.mode,
      imageTheme = props.imageTheme,
      size = props.size,
      before = props.before,
      asideMode = props.asideMode,
      header = props.header,
      subheader = props.subheader,
      text = props.text,
      children = props.children,
      background = props.background,
      actions = props.actions,
      onDismiss = props.onDismiss,
      restProps = _objectWithoutProperties(props, ["mode", "imageTheme", "size", "before", "asideMode", "header", "subheader", "text", "children", "background", "actions", "onDismiss"]);

  var InnerComponent = asideMode === 'expand' ? Tappable : 'div';
  var innerProps = asideMode === 'expand' ? {
    activeMode: platform === IOS ? 'opacity' : 'background'
  } : {};
  return createScopedElement("div", _extends({}, restProps, {
    vkuiClass: classNames(getClassName('Banner', platform), "Banner--md-".concat(mode), "Banner--sz-".concat(size), {
      'Banner--inverted': mode === 'image' && imageTheme === 'dark'
    })
  }), createScopedElement(InnerComponent, _extends({
    vkuiClass: "Banner__in"
  }, innerProps), mode === 'image' && background && createScopedElement("div", {
    vkuiClass: "Banner__bg"
  }, background), before && createScopedElement("div", {
    vkuiClass: "Banner__before"
  }, before), createScopedElement("div", {
    vkuiClass: "Banner__content"
  }, hasReactNode(header) && renderHeader({
    size: size,
    header: header
  }), hasReactNode(subheader) && renderSubheader({
    size: size,
    subheader: subheader
  }), hasReactNode(text) && createScopedElement(Text, {
    weight: "regular",
    vkuiClass: "Banner__text"
  }, text), hasReactNode(actions) && Children.count(actions) > 0 && createScopedElement("div", {
    vkuiClass: "Banner__actions"
  }, actions)), asideMode === 'expand' && createScopedElement("div", {
    vkuiClass: "Banner__expand"
  }, createScopedElement(Icon24Chevron, null)), asideMode === 'dismiss' && createScopedElement("div", {
    vkuiClass: "Banner__dismiss"
  }, createScopedElement("div", {
    vkuiClass: "Banner__dismissIcon",
    onClick: onDismiss
  }, (platform === ANDROID || platform === VKCOM) && createScopedElement(Icon24Cancel, null), platform === IOS && (mode === 'image' ? createScopedElement(Icon24DismissDark, null) : createScopedElement(Icon24DismissSubstract, null))))));
};

Banner.defaultProps = {
  mode: 'tint',
  size: 's',
  imageTheme: 'dark'
};
export default Banner;
//# sourceMappingURL=Banner.js.map