{"version":3,"sources":["../../../src/components/CustomSelect/CustomSelect.tsx"],"names":["React","createRef","SelectMimicry","debounce","setRef","classNames","CustomScrollView","withAdaptivity","withPlatform","CustomSelectOption","getClassName","CustomSelect","props","keyboardInput","selectedOptionIndex","state","options","length","setState","opened","focusedOptionIndex","isValidIndex","scrollToElement","resetKeyboardInput","select","index","item","nativeSelectValue","value","event","Event","bubbles","selectEl","dispatchEvent","close","open","focused","thisNode","node","contains","target","onBlur","oldIndex","type","focusOptionByIndex","e","Array","prototype","indexOf","call","currentTarget","parentNode","children","preventDefault","key","fullInput","optionIndex","findIndex","option","label","toLowerCase","includes","isControlledOutside","findSelectedIndex","onChange","onKeyboardInput","focusOption","selectFocused","renderOption","hovered","selected","onClick","onMouseDown","handleOptionDown","onMouseEnter","handleOptionHover","element","getRootRef","getRef","defaultValue","initialValue","undefined","Number","center","dropdown","scrollBoxRef","current","dropdownHeight","offsetHeight","scrollTop","itemTop","offsetTop","itemHeight","document","addEventListener","handleDocumentClick","removeEventListener","prevProps","name","className","popupDirection","sizeY","platform","style","onFocus","restProps","getSelectedItem","rootRef","handleKeyDownSelect","handleKeyUp","selectRef","onNativeSelectChange","map","resetFocusedOption","Component"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAEEC,SAFF,QAOO,OAPP;AAQA,OAAOC,aAAP;AACA,SAASC,QAAT,EAAmBC,MAAnB;AACA,SAASC,UAAT;AAEA,OAAOC,gBAAP;AACA,SAASC,cAAT;AACA,SAASC,YAAT;AACA,OAAOC,kBAAP;AACA,SAASC,YAAT;;IAmCMC,Y;;;;;AAUJ,wBAAmBC,KAAnB,EAA6C;AAAA;;AAAA;;AAC3C,8BAAMA,KAAN;;AAD2C;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,gFA2BbX,SAAS,EA3BI;;AAAA,yEA6BP,YAAM;AAC1C,YAAKY,aAAL,GAAqB,EAArB;AACD,KA/B4C;;AAAA,sEAiCV,YAAM;AAAA,UAC/BC,mBAD+B,GACP,MAAKC,KADE,CAC/BD,mBAD+B;AAAA,UAE/BE,OAF+B,GAEnB,MAAKJ,KAFc,CAE/BI,OAF+B;;AAIvC,UAAI,CAACA,OAAO,CAACC,MAAb,EAAqB;AACnB,eAAO,IAAP;AACD;;AAED,aAAOD,OAAO,CAACF,mBAAD,CAAd;AACD,KA1C4C;;AAAA,2DAmDtC,YAAM;AACX,YAAKI,QAAL,CAAc;AAAA,YAAGJ,mBAAH,QAAGA,mBAAH;AAAA,eAA8B;AAC1CK,UAAAA,MAAM,EAAE,IADkC;AAE1CC,UAAAA,kBAAkB,EAAEN;AAFsB,SAA9B;AAAA,OAAd,EAGI,YAAM;AAAA,YACAA,mBADA,GACwB,MAAKC,KAD7B,CACAD,mBADA;;AAGR,YAAI,MAAKO,YAAL,CAAkBP,mBAAlB,CAAJ,EAA4C;AAC1C,gBAAKQ,eAAL,CAAqBR,mBAArB,EAA0C,IAA1C;AACD;AACF,OATD;AAUD,KA9D4C;;AAAA,4DAgErC,YAAM;AACZ,YAAKS,kBAAL;;AAEA,YAAKL,QAAL,CAAc;AAAA,eAAO;AACnBC,UAAAA,MAAM,EAAE,KADW;AAEnBC,UAAAA,kBAAkB,EAAE,CAAC;AAFF,SAAP;AAAA,OAAd;AAID,KAvE4C;;AAAA,oEA6E7B,YAAM;AAAA,UACZA,kBADY,GACW,MAAKL,KADhB,CACZK,kBADY;;AAGpB,YAAKI,MAAL,CAAYJ,kBAAZ;AACD,KAjF4C;;AAAA,6DAmFpC,UAACK,KAAD,EAAmB;AAAA,UAClBT,OADkB,GACN,MAAKJ,KADC,CAClBI,OADkB;;AAG1B,UAAI,CAAC,MAAKK,YAAL,CAAkBI,KAAlB,CAAL,EAA+B;AAC7B;AACD;;AAED,UAAMC,IAAI,GAAGV,OAAO,CAACS,KAAD,CAApB;;AAEA,YAAKP,QAAL,CAAc;AACZS,QAAAA,iBAAiB,EAAED,IAAI,CAACE;AADZ,OAAd,EAEG,YAAM;AACP,YAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAU,QAAV,EAAoB;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAApB,CAAd;;AACA,cAAKC,QAAL,CAAcC,aAAd,CAA4BJ,KAA5B;AACD,OALD;;AAMA,YAAKK,KAAL;AACD,KAnG4C;;AAAA,8DAqGnC,YAAM;AACd,YAAKnB,KAAL,CAAWI,MAAX,GAAoB,MAAKe,KAAL,EAApB,GAAmC,MAAKC,IAAL,EAAnC;AACD,KAvG4C;;AAAA,8DAyGnC,YAAM;AACd,YAAKjB,QAAL,CAAc;AAAA,eAAO;AACnBkB,UAAAA,OAAO,EAAE;AADU,SAAP;AAAA,OAAd;;AAIA,UAAMP,KAAK,GAAG,IAAIC,KAAJ,CAAU,OAAV,CAAd;;AACA,YAAKE,QAAL,CAAcC,aAAd,CAA4BJ,KAA5B;AACD,KAhH4C;;AAAA,6DAkHpC,YAAM;AACb,YAAKN,kBAAL;;AAEA,YAAKL,QAAL,CAAc;AAAA,eAAO;AACnBC,UAAAA,MAAM,EAAE,KADW;AAEnBiB,UAAAA,OAAO,EAAE;AAFU,SAAP;AAAA,OAAd;;AAKA,UAAMP,KAAK,GAAG,IAAIC,KAAJ,CAAU,MAAV,CAAd;;AACA,YAAKE,QAAL,CAAcC,aAAd,CAA4BJ,KAA5B;AACD,KA5H4C;;AAAA,0EA8HvB,UAACA,KAAD,EAAkB;AACtC,UAAMQ,QAAQ,GAAG,MAAKC,IAAtB;;AAEA,UAAI,MAAKvB,KAAL,CAAWI,MAAX,IAAqBkB,QAArB,IAAiC,CAACA,QAAQ,CAACE,QAAT,CAAkBV,KAAK,CAACW,MAAxB,CAAtC,EAA+E;AAC7E,cAAKC,MAAL;AACD;AACF,KApI4C;;AAAA,yEA4JxB,UAAChB,KAAD,EAAmB;AAAA,UAC9BL,kBAD8B,GACP,MAAKL,KADE,CAC9BK,kBAD8B;AAAA,UAE9BJ,OAF8B,GAElB,MAAKJ,KAFa,CAE9BI,OAF8B;AAGtC,UAAM0B,QAAQ,GAAGtB,kBAAjB;;AAEA,UAAIK,KAAK,GAAG,CAAZ,EAAe;AACbA,QAAAA,KAAK,GAAGT,OAAO,CAACC,MAAR,GAAiB,CAAzB;AACD,OAFD,MAEO,IAAIQ,KAAK,IAAIT,OAAO,CAACC,MAArB,EAA6B;AAClCQ,QAAAA,KAAK,GAAG,CAAR;AACD;;AAED,UAAIA,KAAK,KAAKiB,QAAd,EAAwB;AACtB;AACD;;AAED,YAAKpB,eAAL,CAAqBG,KAArB;;AAEA,YAAKP,QAAL,CAAc;AAAA,eAAO;AACnBE,UAAAA,kBAAkB,EAAEK;AADD,SAAP;AAAA,OAAd;AAGD,KAhL4C;;AAAA,kEAkL/B,UAACkB,IAAD,EAA2B;AAAA,UAC/BvB,kBAD+B,GACR,MAAKL,KADG,CAC/BK,kBAD+B;AAEvC,UAAIK,KAAK,GAAGL,kBAAZ;;AAEA,UAAIuB,IAAI,KAAK,MAAb,EAAqB;AACnBlB,QAAAA,KAAK,GAAGL,kBAAkB,GAAG,CAA7B;AACD,OAFD,MAEO,IAAIuB,IAAI,KAAK,MAAb,EAAqB;AAC1BlB,QAAAA,KAAK,GAAGL,kBAAkB,GAAG,CAA7B;AACD;;AAED,YAAKwB,kBAAL,CAAwBnB,KAAxB;AACD,KA7L4C;;AAAA,wEA+LN,UAACoB,CAAD,EAAgC;AACrE,YAAK3B,QAAL,CAAc;AACZE,QAAAA,kBAAkB,EAAE0B,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBC,IAAxB,CAA6BJ,CAAC,CAACK,aAAF,CAAgBC,UAAhB,CAA2BC,QAAxD,EAAkEP,CAAC,CAACK,aAApE;AADR,OAAd;AAGD,KAnM4C;;AAAA,uEAqMP,UAACL,CAAD,EAAgC;AACpEA,MAAAA,CAAC,CAACQ,cAAF;AACD,KAvM4C;;AAAA,yEAyMxB,YAAM;AACzB,YAAKnC,QAAL,CAAc;AAAA,eAAO;AACnBE,UAAAA,kBAAkB,EAAE,CAAC;AADF,SAAP;AAAA,OAAd;AAGD,KA7M4C;;AAAA,sEA+M3B,UAACkC,GAAD,EAAiB;AAAA,UACzBtC,OADyB,GACb,MAAKJ,KADQ,CACzBI,OADyB;AAEjC,UAAMuC,SAAS,GAAG,MAAK1C,aAAL,GAAqByC,GAAvC;AAEA,UAAME,WAAW,GAAGxC,OAAO,CAACyC,SAAR,CAAkB,UAACC,MAAD,EAAY;AAChD,eAAOA,MAAM,CAACC,KAAP,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCN,SAApC,CAAP;AACD,OAFmB,CAApB;;AAIA,UAAIC,WAAW,GAAG,CAAC,CAAnB,EAAsB;AACpB,cAAKZ,kBAAL,CAAwBY,WAAxB;AACD;;AAED,YAAK3C,aAAL,GAAqB0C,SAArB;AACD,KA5N4C;;AAAA,2EA8NiB,UAACV,CAAD,EAAO;AACnE,UAAMjB,KAAK,GAAGiB,CAAC,CAACK,aAAF,CAAgBtB,KAA9B;;AACA,UAAI,CAAC,MAAKkC,mBAAV,EAA+B;AAC7B,cAAK5C,QAAL,CAAc;AACZJ,UAAAA,mBAAmB,EAAE,MAAKiD,iBAAL,CAAuB,MAAKnD,KAAL,CAAWI,OAAlC,EAA2CY,KAA3C;AADT,SAAd;AAGD;;AACD,UAAI,MAAKhB,KAAL,CAAWoD,QAAf,EAAyB;AACvB,cAAKpD,KAAL,CAAWoD,QAAX,CAAoBnB,CAApB;AACD;AACF,KAxO4C;;AAAA,0EA0OvB,UAAChB,KAAD,EAA0B;AAAA,UACtCV,MADsC,GAC3B,MAAKJ,KADsB,CACtCI,MADsC;;AAG9C,UAAIU,KAAK,CAACyB,GAAN,CAAUrC,MAAV,KAAqB,CAArB,IAA0BY,KAAK,CAACyB,GAAN,KAAc,GAA5C,EAAiD;AAC/C,cAAKW,eAAL,CAAqBpC,KAAK,CAACyB,GAA3B;;AAEA;AACD;;AAED,cAAQzB,KAAK,CAACyB,GAAd;AACE,aAAK,SAAL;AACEzB,UAAAA,KAAK,CAACwB,cAAN;AACAlC,UAAAA,MAAM,GAAG,MAAK+C,WAAL,CAAiB,MAAjB,CAAH,GAA8B,MAAK/B,IAAL,EAApC;AACA;;AACF,aAAK,WAAL;AACEN,UAAAA,KAAK,CAACwB,cAAN;AACAlC,UAAAA,MAAM,GAAG,MAAK+C,WAAL,CAAiB,MAAjB,CAAH,GAA8B,MAAK/B,IAAL,EAApC;AACA;;AACF,aAAK,QAAL;AACEN,UAAAA,KAAK,CAACwB,cAAN;;AACA,gBAAKnB,KAAL;;AACA;;AACF,aAAK,OAAL;AACA,aAAK,UAAL;AACA,aAAK,GAAL;AACEL,UAAAA,KAAK,CAACwB,cAAN;AACAlC,UAAAA,MAAM,GAAG,MAAKgD,aAAL,EAAH,GAA0B,MAAKhC,IAAL,EAAhC;AACA;AAlBJ;AAoBD,KAvQ4C;;AAAA,kEAyQ/BhC,QAAQ,CAAC,MAAKoB,kBAAN,EAA0B,IAA1B,CAzQuB;;AAAA,mEAgS9B,UAACmC,MAAD,EAAsCjC,KAAtC,EAAwD;AAAA,wBACjB,MAAKV,KADY;AAAA,UAC7DK,kBAD6D,eAC7DA,kBAD6D;AAAA,UACzCN,mBADyC,eACzCA,mBADyC;AAAA,UAE7DsD,YAF6D,GAE5C,MAAKxD,KAFuC,CAE7DwD,YAF6D;AAGrE,UAAMC,OAAO,GAAG5C,KAAK,KAAKL,kBAA1B;AACA,UAAMkD,QAAQ,GAAG7C,KAAK,KAAKX,mBAA3B;AAEA,aACE,oBAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,GAAG,YAAK4C,MAAM,CAAC9B,KAAZ;AAAnB,SACGwC,YAAY,CAAC;AACZV,QAAAA,MAAM,EAANA,MADY;AAEZW,QAAAA,OAAO,EAAPA,OAFY;AAGZjB,QAAAA,QAAQ,EAAEM,MAAM,CAACC,KAHL;AAIZW,QAAAA,QAAQ,EAARA,QAJY;AAKZC,QAAAA,OAAO,EAAE,MAAKJ,aALF;AAMZK,QAAAA,WAAW,EAAE,MAAKC,gBANN;AAOZC,QAAAA,YAAY,EAAE,MAAKC;AAPP,OAAD,CADf,CADF;AAaD,KAnT4C;;AAAA,8DAqTnC,UAACC,OAAD,EAA+B;AACvC,YAAKtC,IAAL,GAAYsC,OAAZ;AACAxE,MAAAA,MAAM,CAACwE,OAAD,EAAU,MAAKhE,KAAL,CAAWiE,UAArB,CAAN;AACD,KAxT4C;;AAAA,gEA0TjC,UAACD,OAAD,EAAgC;AAC1C,YAAK5C,QAAL,GAAgB4C,OAAhB;AACAxE,MAAAA,MAAM,CAACwE,OAAD,EAAU,MAAKhE,KAAL,CAAWkE,MAArB,CAAN;AACD,KA7T4C;;AAAA,QAGnClD,MAHmC,GAGXhB,KAHW,CAGnCgB,KAHmC;AAAA,QAG5BmD,YAH4B,GAGXnE,KAHW,CAG5BmE,YAH4B;AAK3C,QAAMC,YAAY,GAAGpD,MAAK,KAAKqD,SAAV,GAAsBrD,MAAtB,GAA8BmD,YAAnD;AAEA,UAAKlE,aAAL,GAAqB,EAArB;AAEA,UAAKE,KAAL,GAAa;AACXI,MAAAA,MAAM,EAAE,KADG;AAEXiB,MAAAA,OAAO,EAAE,KAFE;AAGXhB,MAAAA,kBAAkB,EAAE,CAAC,CAHV;AAIXN,MAAAA,mBAAmB,EAAE,MAAKiD,iBAAL,CAAuBnD,KAAK,CAACI,OAA7B,EAAsCgE,YAAtC,CAJV;AAKXrD,MAAAA,iBAAiB,EAAEqD;AALR,KAAb;;AAQA,QAAIpE,KAAK,CAACgB,KAAN,KAAgBqD,SAApB,EAA+B;AAC7B,YAAKnB,mBAAL,GAA2B,IAA3B;AACD;;AAnB0C;AAoB5C;;;;sCAwBiB9C,O,EAAwCY,K,EAAoB;AAC5E,aAAOZ,OAAO,CAACyC,SAAR,CAAkB,UAAC/B,IAAD,EAAU;AACjCE,QAAAA,KAAK,GAAG,OAAOF,IAAI,CAACE,KAAZ,KAAsB,QAAtB,GAAiCsD,MAAM,CAACtD,KAAD,CAAvC,GAAiDA,KAAzD;AACA,eAAOF,IAAI,CAACE,KAAL,KAAeA,KAAtB;AACD,OAHM,CAAP;AAID;;;iCAwBoBH,K,EAAe;AAClC,aAAOA,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAG,KAAKb,KAAL,CAAWI,OAAX,CAAmBC,MAAhD;AACD;;;oCA2DuBQ,K,EAA+B;AAAA,UAAhB0D,MAAgB,uEAAP,KAAO;AACrD,UAAMC,QAAQ,GAAG,KAAKC,YAAL,CAAkBC,OAAnC;AACA,UAAM5D,IAAI,GAAG0D,QAAQ,GAAIA,QAAQ,CAAChC,QAAT,CAAkB3B,KAAlB,CAAJ,GAA+C,IAApE;;AAEA,UAAI,CAACC,IAAL,EAAW;AACT;AACD;;AAED,UAAM6D,cAAc,GAAGH,QAAQ,CAACI,YAAhC;AACA,UAAMC,SAAS,GAAGL,QAAQ,CAACK,SAA3B;AACA,UAAMC,OAAO,GAAGhE,IAAI,CAACiE,SAArB;AACA,UAAMC,UAAU,GAAGlE,IAAI,CAAC8D,YAAxB;;AAEA,UAAIL,MAAJ,EAAY;AACVC,QAAAA,QAAQ,CAACK,SAAT,GAAqBC,OAAO,GAAGH,cAAc,GAAG,CAA3B,GAA+BK,UAAU,GAAG,CAAjE;AACD,OAFD,MAEO,IAAIF,OAAO,GAAGE,UAAV,GAAuBL,cAAc,GAAGE,SAA5C,EAAuD;AAC5DL,QAAAA,QAAQ,CAACK,SAAT,GAAqBC,OAAO,GAAGH,cAAV,GAA2BK,UAAhD;AACD,OAFM,MAEA,IAAIF,OAAO,GAAGD,SAAd,EAAyB;AAC9BL,QAAAA,QAAQ,CAACK,SAAT,GAAqBC,OAArB;AACD;AACF;;;wCAiHmB;AAClBG,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmC,KAAKC,mBAAxC,EAA6D,KAA7D;AACAF,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,UAA1B,EAAsC,KAAKC,mBAA3C,EAAgE,KAAhE;AACD;;;2CAEsB;AACrBF,MAAAA,QAAQ,CAACG,mBAAT,CAA6B,OAA7B,EAAsC,KAAKD,mBAA3C,EAAgE,KAAhE;AACAF,MAAAA,QAAQ,CAACG,mBAAT,CAA6B,UAA7B,EAAyC,KAAKD,mBAA9C,EAAmE,KAAnE;AACD;;;uCAEkBE,S,EAA8B;AAC/C,UAAIA,SAAS,CAACrE,KAAV,KAAoB,KAAKhB,KAAL,CAAWgB,KAA/B,IAAwCqE,SAAS,CAACjF,OAAV,KAAsB,KAAKJ,KAAL,CAAWI,OAA7E,EAAsF;AACpF,aAAK8C,mBAAL,GAA2B,KAAKlD,KAAL,CAAWgB,KAAX,KAAqBqD,SAAhD;AACA,YAAMrD,KAAK,GAAG,KAAKhB,KAAL,CAAWgB,KAAX,KAAqBqD,SAArB,GAAiC,KAAKlE,KAAL,CAAWY,iBAA5C,GAAgE,KAAKf,KAAL,CAAWgB,KAAzF;AACA,aAAKV,QAAL,CAAc;AACZS,UAAAA,iBAAiB,EAAEC,KADP;AAEZd,UAAAA,mBAAmB,EAAE,KAAKiD,iBAAL,CAAuB,KAAKnD,KAAL,CAAWI,OAAlC,EAA2CY,KAA3C;AAFT,SAAd;AAID;AACF;;;6BAiCQ;AAAA,yBAC+B,KAAKb,KADpC;AAAA,UACCI,MADD,gBACCA,MADD;AAAA,UACSQ,iBADT,gBACSA,iBADT;;AAAA,wBAkBH,KAAKf,KAlBF;AAAA,UAGLsF,IAHK,eAGLA,IAHK;AAAA,UAILC,SAJK,eAILA,SAJK;AAAA,UAKLrB,MALK,eAKLA,MALK;AAAA,UAMLD,UANK,eAMLA,UANK;AAAA,UAOLuB,cAPK,eAOLA,cAPK;AAAA,UAQLpF,OARK,eAQLA,OARK;AAAA,UASLqF,KATK,eASLA,KATK;AAAA,UAULC,QAVK,eAULA,QAVK;AAAA,UAWLC,KAXK,eAWLA,KAXK;AAAA,UAYLvC,QAZK,eAYLA,QAZK;AAAA,UAaLvB,MAbK,eAaLA,MAbK;AAAA,UAcL+D,OAdK,eAcLA,OAdK;AAAA,UAeLpC,YAfK,eAeLA,YAfK;AAAA,UAgBLhB,QAhBK,eAgBLA,QAhBK;AAAA,UAiBFqD,SAjBE;;AAmBP,UAAMnC,QAAQ,GAAG,KAAKoC,eAAL,EAAjB;AACA,UAAM/C,KAAK,GAAGW,QAAQ,GAAGA,QAAQ,CAACX,KAAZ,GAAoBsB,SAA1C;AAEA,aACE;AACE,QAAA,SAAS,EAAEvE,YAAY,CAAC,cAAD,EAAiB4F,QAAjB,CADzB;AAEE,QAAA,SAAS,EAAEH,SAFb;AAGE,QAAA,KAAK,EAAEI,KAHT;AAIE,QAAA,GAAG,EAAE,KAAKI;AAJZ,SAME,oBAAC,aAAD,eACMF,SADN;AAEE,uBAAa,IAFf;AAGE,QAAA,OAAO,EAAE,KAAKlC,OAHhB;AAIE,QAAA,SAAS,EAAE,KAAKqC,mBAJlB;AAKE,QAAA,OAAO,EAAE,KAAKC,WALhB;AAME,QAAA,OAAO,EAAE,KAAKL,OANhB;AAOE,QAAA,MAAM,EAAE,KAAK/D,MAPf;AAQE,QAAA,SAAS,EAAEpC,UAAU,CAAC;AACpB,gCAAsBc,MADF;AAEpB,mDAAyCiF,cAAc,KAAK;AAFxC,SAAD,CARvB;AAYE,QAAA,SAAS,EAAED;AAZb,UAcGxC,KAdH,CANF,EAsBE;AACE,QAAA,GAAG,EAAE,KAAKmD,SADZ;AAEE,QAAA,IAAI,EAAEZ,IAFR;AAGE,QAAA,QAAQ,EAAE,KAAKa,oBAHjB;AAIE,QAAA,MAAM,EAAEtE,MAJV;AAKE,QAAA,OAAO,EAAE+D,OALX;AAME,QAAA,KAAK,EAAE7E,iBANT;AAOE,QAAA,SAAS,EAAC;AAPZ,SASGX,OAAO,CAACgG,GAAR,CAAY,UAACtF,IAAD;AAAA,eAAU;AAAQ,UAAA,GAAG,YAAKA,IAAI,CAACE,KAAV,CAAX;AAA8B,UAAA,KAAK,EAAEF,IAAI,CAACE;AAA1C,UAAV;AAAA,OAAZ,CATH,CAtBF,EAiCGT,MAAM,IACP;AACE,QAAA,SAAS,EAAEd,UAAU,CAAC,uBAAD,yCAA0DgG,KAA1D,GAAmE;AACtF,sDAA4CD,cAAc,KAAK;AADuB,SAAnE,CADvB;AAIE,QAAA,YAAY,EAAE,KAAKa;AAJrB,SAME,oBAAC,gBAAD;AAAkB,QAAA,MAAM,EAAE,KAAK5B;AAA/B,SACGrE,OAAO,CAACgG,GAAR,CAAY,KAAK5C,YAAjB,CADH,CANF,CAlCF,CADF;AAgDD;;;;EA/YwBpE,KAAK,CAACkH,S;;gBAA3BvG,Y,kBACqC;AACvCyD,EAAAA,YADuC,wBAC1BxD,KAD0B,EACiB;AACtD,WACE,oBAAC,kBAAD,EAAwBA,KAAxB,CADF;AAGD,GALsC;AAMvCI,EAAAA,OAAO,EAAE;AAN8B,C;;AAiZ3C,eAAeR,YAAY,CAACD,cAAc,CAACI,YAAD,EAAe;AACvD0F,EAAAA,KAAK,EAAE;AADgD,CAAf,CAAf,CAA3B","sourcesContent":["import React, {\n  ChangeEventHandler,\n  createRef,\n  KeyboardEvent,\n  MouseEvent,\n  ReactNode,\n  SelectHTMLAttributes,\n} from 'react';\nimport SelectMimicry from '../SelectMimicry/SelectMimicry';\nimport { debounce, setRef } from '../../lib/utils';\nimport { classNames } from '../../lib/classNames';\nimport { NativeSelectProps } from '../NativeSelect/NativeSelect';\nimport CustomScrollView from '../CustomScrollView/CustomScrollView';\nimport { withAdaptivity } from '../../hoc/withAdaptivity';\nimport { withPlatform } from '../../hoc/withPlatform';\nimport CustomSelectOption, { CustomSelectOptionProps } from '../CustomSelectOption/CustomSelectOption';\nimport { getClassName } from '../../helpers/getClassName';\nimport { FormFieldProps } from '../FormField/FormField';\nimport { HasPlatform } from '../../types';\n\ntype SelectValue = SelectHTMLAttributes<HTMLSelectElement>['value'];\n\nexport interface CustomSelectOptionInterface {\n  value: SelectValue;\n  label: string;\n  [index: string]: any;\n}\n\ninterface CustomSelectState {\n  opened?: boolean;\n  focused?: boolean;\n  focusedOptionIndex?: number;\n  selectedOptionIndex?: number;\n  nativeSelectValue?: SelectValue;\n}\n\nexport interface CustomSelectProps extends NativeSelectProps, HasPlatform, FormFieldProps {\n  options: Array<{\n    value: SelectValue;\n    label: string;\n    [index: string]: any;\n  }>;\n  popupDirection?: 'top' | 'bottom';\n  /**\n   * В качестве аргумента принимает валидные для [CustomSelectOption](#/CustomSelectOption) свойства\n   */\n  renderOption?: (props: CustomSelectOptionProps) => ReactNode;\n}\n\ntype MouseEventHandler = (event: MouseEvent<HTMLElement>) => void;\n\nclass CustomSelect extends React.Component<CustomSelectProps, CustomSelectState> {\n  static defaultProps: CustomSelectProps = {\n    renderOption(props: CustomSelectOptionProps): ReactNode {\n      return (\n        <CustomSelectOption {...props} />\n      );\n    },\n    options: [],\n  };\n\n  public constructor(props: CustomSelectProps) {\n    super(props);\n\n    const { value, defaultValue } = props;\n\n    const initialValue = value !== undefined ? value : defaultValue;\n\n    this.keyboardInput = '';\n\n    this.state = {\n      opened: false,\n      focused: false,\n      focusedOptionIndex: -1,\n      selectedOptionIndex: this.findSelectedIndex(props.options, initialValue),\n      nativeSelectValue: initialValue,\n    };\n\n    if (props.value !== undefined) {\n      this.isControlledOutside = true;\n    }\n  }\n\n  public state: CustomSelectState;\n  private keyboardInput: string;\n  private isControlledOutside: boolean;\n  private node: HTMLLabelElement;\n  private selectEl: HTMLSelectElement;\n  private readonly scrollBoxRef = createRef<HTMLDivElement>();\n\n  private readonly resetKeyboardInput = () => {\n    this.keyboardInput = '';\n  };\n\n  private readonly getSelectedItem = () => {\n    const { selectedOptionIndex } = this.state;\n    const { options } = this.props;\n\n    if (!options.length) {\n      return null;\n    }\n\n    return options[selectedOptionIndex];\n  };\n\n  findSelectedIndex(options: CustomSelectOptionInterface[], value: SelectValue) {\n    return options.findIndex((item) => {\n      value = typeof item.value === 'number' ? Number(value) : value;\n      return item.value === value;\n    });\n  }\n\n  open = () => {\n    this.setState(({ selectedOptionIndex }) => ({\n      opened: true,\n      focusedOptionIndex: selectedOptionIndex,\n    }), () => {\n      const { selectedOptionIndex } = this.state;\n\n      if (this.isValidIndex(selectedOptionIndex)) {\n        this.scrollToElement(selectedOptionIndex, true);\n      }\n    });\n  };\n\n  close = () => {\n    this.resetKeyboardInput();\n\n    this.setState(() => ({\n      opened: false,\n      focusedOptionIndex: -1,\n    }));\n  };\n\n  private isValidIndex(index: number) {\n    return index >= 0 && index < this.props.options.length;\n  }\n\n  selectFocused = () => {\n    const { focusedOptionIndex } = this.state;\n\n    this.select(focusedOptionIndex);\n  };\n\n  select = (index: number) => {\n    const { options } = this.props;\n\n    if (!this.isValidIndex(index)) {\n      return;\n    }\n\n    const item = options[index];\n\n    this.setState({\n      nativeSelectValue: item.value,\n    }, () => {\n      const event = new Event('change', { bubbles: true });\n      this.selectEl.dispatchEvent(event);\n    });\n    this.close();\n  };\n\n  onClick = () => {\n    this.state.opened ? this.close() : this.open();\n  };\n\n  onFocus = () => {\n    this.setState(() => ({\n      focused: true,\n    }));\n\n    const event = new Event('focus');\n    this.selectEl.dispatchEvent(event);\n  };\n\n  onBlur = () => {\n    this.resetKeyboardInput();\n\n    this.setState(() => ({\n      opened: false,\n      focused: false,\n    }));\n\n    const event = new Event('blur');\n    this.selectEl.dispatchEvent(event);\n  };\n\n  handleDocumentClick = (event: Event) => {\n    const thisNode = this.node;\n\n    if (this.state.opened && thisNode && !thisNode.contains(event.target as Node)) {\n      this.onBlur();\n    }\n  };\n\n  private scrollToElement(index: number, center = false) {\n    const dropdown = this.scrollBoxRef.current;\n    const item = dropdown ? (dropdown.children[index] as HTMLElement) : null;\n\n    if (!item) {\n      return;\n    }\n\n    const dropdownHeight = dropdown.offsetHeight;\n    const scrollTop = dropdown.scrollTop;\n    const itemTop = item.offsetTop;\n    const itemHeight = item.offsetHeight;\n\n    if (center) {\n      dropdown.scrollTop = itemTop - dropdownHeight / 2 + itemHeight / 2;\n    } else if (itemTop + itemHeight > dropdownHeight + scrollTop) {\n      dropdown.scrollTop = itemTop - dropdownHeight + itemHeight;\n    } else if (itemTop < scrollTop) {\n      dropdown.scrollTop = itemTop;\n    }\n  }\n\n  focusOptionByIndex = (index: number) => {\n    const { focusedOptionIndex } = this.state;\n    const { options } = this.props;\n    const oldIndex = focusedOptionIndex;\n\n    if (index < 0) {\n      index = options.length - 1;\n    } else if (index >= options.length) {\n      index = 0;\n    }\n\n    if (index === oldIndex) {\n      return;\n    }\n\n    this.scrollToElement(index);\n\n    this.setState(() => ({\n      focusedOptionIndex: index,\n    }));\n  };\n\n  focusOption = (type: 'next' | 'prev') => {\n    const { focusedOptionIndex } = this.state;\n    let index = focusedOptionIndex;\n\n    if (type === 'next') {\n      index = focusedOptionIndex + 1;\n    } else if (type === 'prev') {\n      index = focusedOptionIndex - 1;\n    }\n\n    this.focusOptionByIndex(index);\n  };\n\n  handleOptionHover: MouseEventHandler = (e: MouseEvent<HTMLElement>) => {\n    this.setState({\n      focusedOptionIndex: Array.prototype.indexOf.call(e.currentTarget.parentNode.children, e.currentTarget),\n    });\n  };\n\n  handleOptionDown: MouseEventHandler = (e: MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n  };\n\n  resetFocusedOption = () => {\n    this.setState(() => ({\n      focusedOptionIndex: -1,\n    }));\n  };\n\n  onKeyboardInput = (key: string) => {\n    const { options } = this.props;\n    const fullInput = this.keyboardInput + key;\n\n    const optionIndex = options.findIndex((option) => {\n      return option.label.toLowerCase().includes(fullInput);\n    });\n\n    if (optionIndex > -1) {\n      this.focusOptionByIndex(optionIndex);\n    }\n\n    this.keyboardInput = fullInput;\n  };\n\n  onNativeSelectChange: ChangeEventHandler<HTMLSelectElement> = (e) => {\n    const value = e.currentTarget.value;\n    if (!this.isControlledOutside) {\n      this.setState({\n        selectedOptionIndex: this.findSelectedIndex(this.props.options, value),\n      });\n    }\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  };\n\n  handleKeyDownSelect = (event: KeyboardEvent) => {\n    const { opened } = this.state;\n\n    if (event.key.length === 1 && event.key !== ' ') {\n      this.onKeyboardInput(event.key);\n\n      return;\n    }\n\n    switch (event.key) {\n      case 'ArrowUp':\n        event.preventDefault();\n        opened ? this.focusOption('prev') : this.open();\n        break;\n      case 'ArrowDown':\n        event.preventDefault();\n        opened ? this.focusOption('next') : this.open();\n        break;\n      case 'Escape':\n        event.preventDefault();\n        this.close();\n        break;\n      case 'Enter':\n      case 'Spacebar':\n      case ' ':\n        event.preventDefault();\n        opened ? this.selectFocused() : this.open();\n        break;\n    }\n  };\n\n  handleKeyUp = debounce(this.resetKeyboardInput, 1000);\n\n  componentDidMount() {\n    document.addEventListener('click', this.handleDocumentClick, false);\n    document.addEventListener('touchend', this.handleDocumentClick, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleDocumentClick, false);\n    document.removeEventListener('touchend', this.handleDocumentClick, false);\n  }\n\n  componentDidUpdate(prevProps: CustomSelectProps) {\n    if (prevProps.value !== this.props.value || prevProps.options !== this.props.options) {\n      this.isControlledOutside = this.props.value !== undefined;\n      const value = this.props.value === undefined ? this.state.nativeSelectValue : this.props.value;\n      this.setState({\n        nativeSelectValue: value,\n        selectedOptionIndex: this.findSelectedIndex(this.props.options, value),\n      });\n    }\n  }\n\n  renderOption = (option: CustomSelectOptionInterface, index: number) => {\n    const { focusedOptionIndex, selectedOptionIndex } = this.state;\n    const { renderOption } = this.props;\n    const hovered = index === focusedOptionIndex;\n    const selected = index === selectedOptionIndex;\n\n    return (\n      <React.Fragment key={`${option.value}`}>\n        {renderOption({\n          option,\n          hovered,\n          children: option.label,\n          selected,\n          onClick: this.selectFocused,\n          onMouseDown: this.handleOptionDown,\n          onMouseEnter: this.handleOptionHover,\n        })}\n      </React.Fragment>\n    );\n  };\n\n  rootRef = (element: HTMLLabelElement) => {\n    this.node = element;\n    setRef(element, this.props.getRootRef);\n  };\n\n  selectRef = (element: HTMLSelectElement) => {\n    this.selectEl = element;\n    setRef(element, this.props.getRef);\n  };\n\n  render() {\n    const { opened, nativeSelectValue } = this.state;\n    const {\n      name,\n      className,\n      getRef,\n      getRootRef,\n      popupDirection,\n      options,\n      sizeY,\n      platform,\n      style,\n      onChange,\n      onBlur,\n      onFocus,\n      renderOption,\n      children,\n      ...restProps\n    } = this.props;\n    const selected = this.getSelectedItem();\n    const label = selected ? selected.label : undefined;\n\n    return (\n      <label\n        vkuiClass={getClassName('CustomSelect', platform)}\n        className={className}\n        style={style}\n        ref={this.rootRef}\n      >\n        <SelectMimicry\n          {...restProps}\n          aria-hidden={true}\n          onClick={this.onClick}\n          onKeyDown={this.handleKeyDownSelect}\n          onKeyUp={this.handleKeyUp}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n          vkuiClass={classNames({\n            'CustomSelect__open': opened,\n            'CustomSelect__open--popupDirectionTop': popupDirection === 'top',\n          })}\n          className={className}\n        >\n          {label}\n        </SelectMimicry>\n        <select\n          ref={this.selectRef}\n          name={name}\n          onChange={this.onNativeSelectChange}\n          onBlur={onBlur}\n          onFocus={onFocus}\n          value={nativeSelectValue}\n          vkuiClass=\"CustomSelect__control\"\n        >\n          {options.map((item) => <option key={`${item.value}`} value={item.value} />)}\n        </select>\n        {opened &&\n        <div\n          vkuiClass={classNames('CustomSelect__options', `CustomSelect__options--sizeY-${sizeY}`, {\n            'CustomSelect__options--popupDirectionTop': popupDirection === 'top',\n          })}\n          onMouseLeave={this.resetFocusedOption}\n        >\n          <CustomScrollView boxRef={this.scrollBoxRef}>\n            {options.map(this.renderOption)}\n          </CustomScrollView>\n        </div>\n        }\n      </label>\n    );\n  }\n}\n\nexport default withPlatform(withAdaptivity(CustomSelect, {\n  sizeY: true,\n}));\n"],"file":"CustomSelect.js"}