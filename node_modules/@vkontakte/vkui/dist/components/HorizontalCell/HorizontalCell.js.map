{"version":3,"sources":["../../../src/components/HorizontalCell/HorizontalCell.tsx"],"names":["classNames","getClassName","usePlatform","hasReactNode","Caption","Tappable","Subhead","Avatar","CellTypography","size","children","restProps","HorizontalCell","props","className","header","subtitle","style","getRootRef","getRef","platform","defaultProps"],"mappings":";;;AACA,SAASA,UAAT;AACA,SAASC,YAAT;AACA,SAASC,WAAT;AACA,SAASC,YAAT;AACA,OAAOC,OAAP;AACA,OAAOC,QAAP;AACA,OAAOC,OAAP;AACA,OAAOC,MAAP;;AAOA,IAAMC,cAAuC,GAAG,SAA1CA,cAA0C,OAA2D;AAAA,MAAxDC,IAAwD,QAAxDA,IAAwD;AAAA,MAAlDC,QAAkD,QAAlDA,QAAkD;AAAA,MAArCC,SAAqC;;AACzG,SAAOF,IAAI,KAAK,GAAT,GACH,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,GAAf;AAAmB,IAAA,MAAM,EAAC;AAA1B,KAAwCE,SAAxC,GAAoDD,QAApD,CADG,GAEH,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAC;AAAhB,KAA8BC,SAA9B,GAA0CD,QAA1C,CAFJ;AAGD,CAJD;;AAYA,OAAO,IAAME,cAAuC,GAAG,SAA1CA,cAA0C,CAACC,KAAD,EAAgC;AAAA,MAC7EC,SAD6E,GACYD,KADZ,CAC7EC,SAD6E;AAAA,MAClEC,MADkE,GACYF,KADZ,CAClEE,MADkE;AAAA,MAC1DC,QAD0D,GACYH,KADZ,CAC1DG,QAD0D;AAAA,MAChDP,IADgD,GACYI,KADZ,CAChDJ,IADgD;AAAA,MAC1CQ,KAD0C,GACYJ,KADZ,CAC1CI,KAD0C;AAAA,MACnCP,QADmC,GACYG,KADZ,CACnCH,QADmC;AAAA,MACzBQ,UADyB,GACYL,KADZ,CACzBK,UADyB;AAAA,MACbC,MADa,GACYN,KADZ,CACbM,MADa;AAAA,MACFR,SADE,4BACYE,KADZ;;AAErF,MAAMO,QAAQ,GAAGlB,WAAW,EAA5B;AAEA,SACE;AAAK,IAAA,SAAS,EAAEF,UAAU,CAACC,YAAY,CAAC,gBAAD,EAAmBmB,QAAnB,CAAb,4BAA8DX,IAA9D,EAA1B;AAAiG,IAAA,GAAG,EAAES,UAAtG;AAAkH,IAAA,KAAK,EAAED,KAAzH;AAAgI,IAAA,SAAS,EAAEH;AAA3I,KACE,oBAAC,QAAD;AAAU,IAAA,UAAU,EAAEK;AAAtB,KAAkCR,SAAlC,GACGR,YAAY,CAACO,QAAD,CAAZ,IAA0B;AAAK,IAAA,SAAS,EAAC;AAAf,KAAwCA,QAAxC,CAD7B,EAEE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGP,YAAY,CAACY,MAAD,CAAZ,IACC,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAEN,IAAtB;AAA4B,IAAA,SAAS,EAAC;AAAtC,KAA+DM,MAA/D,CAFJ,EAIGZ,YAAY,CAACa,QAAD,CAAZ,IAA0B,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAC,SAAhB;AAA0B,IAAA,KAAK,EAAC,GAAhC;AAAoC,IAAA,SAAS,EAAC;AAA9C,KAA0EA,QAA1E,CAJ7B,CAFF,CADF,CADF;AAaD,CAjBM;AAmBPJ,cAAc,CAACS,YAAf,GAA8B;AAC5BZ,EAAAA,IAAI,EAAE,GADsB;AAE5BC,EAAAA,QAAQ,EAAE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE;AAAd;AAFkB,CAA9B","sourcesContent":["import { FC, HTMLAttributes, ReactNode } from 'react';\nimport { classNames } from '../../lib/classNames';\nimport { getClassName } from '../../helpers/getClassName';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { hasReactNode } from '../../lib/utils';\nimport Caption from '../Typography/Caption/Caption';\nimport Tappable from '../Tappable/Tappable';\nimport Subhead from '../Typography/Subhead/Subhead';\nimport Avatar from '../Avatar/Avatar';\nimport { HasRef, HasRootRef } from '../../types';\n\ninterface CellTypographyProps extends HTMLAttributes<HTMLDivElement> {\n  size: HorizontalCellProps['size'];\n}\n\nconst CellTypography: FC<CellTypographyProps> = ({ size, children, ...restProps }: CellTypographyProps) => {\n  return size === 's'\n    ? <Caption level=\"2\" weight=\"regular\" {...restProps}>{children}</Caption>\n    : <Subhead weight=\"regular\" {...restProps}>{children}</Subhead>;\n};\n\nexport interface HorizontalCellProps extends HTMLAttributes<HTMLDivElement>, HasRootRef<HTMLDivElement>, HasRef<HTMLDivElement> {\n  size?: 's' | 'm' | 'l';\n  header?: ReactNode;\n  subtitle?: ReactNode;\n}\n\nexport const HorizontalCell: FC<HorizontalCellProps> = (props: HorizontalCellProps) => {\n  const { className, header, subtitle, size, style, children, getRootRef, getRef, ...restProps } = props;\n  const platform = usePlatform();\n\n  return (\n    <div vkuiClass={classNames(getClassName('HorizontalCell', platform), `HorizontalCell--${size}`)} ref={getRootRef} style={style} className={className}>\n      <Tappable getRootRef={getRef} {...restProps}>\n        {hasReactNode(children) && <div vkuiClass=\"HorizontalCell__image\">{children}</div>}\n        <div vkuiClass=\"HorizontalCell__content\">\n          {hasReactNode(header) && (\n            <CellTypography size={size} vkuiClass=\"HorizontalCell__title\">{header}</CellTypography>\n          )}\n          {hasReactNode(subtitle) && <Caption weight=\"regular\" level=\"1\" vkuiClass=\"HorizontalCell__subtitle\">{subtitle}</Caption>}\n        </div>\n      </Tappable>\n    </div>\n  );\n};\n\nHorizontalCell.defaultProps = {\n  size: 's',\n  children: <Avatar size={56} />,\n};\n"],"file":"HorizontalCell.js"}