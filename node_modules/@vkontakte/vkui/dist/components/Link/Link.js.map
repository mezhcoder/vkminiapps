{"version":3,"sources":["../../../src/components/Link/Link.tsx"],"names":["getClassName","usePlatform","Tappable","Link","children","Component","restProps","platform","baseClassName","href","type"],"mappings":";;;;;;;;;AACA,SAASA,YAAT;AACA,SAASC,WAAT;AACA,OAAOC,QAAP;;AAIA,IAAMC,IAAkC,GAAG,SAArCA,IAAqC,OAI1B;AAAA,MAHfC,QAGe,QAHfA,QAGe;AAAA,MAFfC,SAEe,QAFfA,SAEe;AAAA,MADZC,SACY;;AACf,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,MAAMO,aAAa,GAAGR,YAAY,CAAC,MAAD,EAASO,QAAT,CAAlC;;AAEA,MAAI,CAACF,SAAL,EAAgB;AACd,QAAIC,SAAS,CAACG,IAAd,EAAoB;AAClBJ,MAAAA,SAAS,GAAG,GAAZ;AACD,KAFD,MAEO;AACLA,MAAAA,SAAS,GAAG,QAAZ;AACAC,MAAAA,SAAS;AAAKI,QAAAA,IAAI,EAAE;AAAX,SAAwBJ,SAAxB,CAAT;AACD;AACF;;AAED,SACE,oBAAC,QAAD;AACE,IAAA,SAAS,EAAED;AADb,KAEMC,SAFN;AAGE,IAAA,SAAS,EAAEE,aAHb;AAIE,IAAA,SAAS,EAAE,KAJb;AAKE,IAAA,SAAS,EAAC;AALZ,MAMEJ,QANF,CADF;AASD,CA1BD;;AA4BA,eAAeD,IAAf","sourcesContent":["import { FunctionComponent, AnchorHTMLAttributes } from 'react';\nimport { getClassName } from '../../helpers/getClassName';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport Tappable, { TappableProps } from '../Tappable/Tappable';\n\nexport interface LinkProps extends AnchorHTMLAttributes<HTMLElement>, TappableProps {}\n\nconst Link: FunctionComponent<LinkProps> = ({\n  children,\n  Component,\n  ...restProps\n}: LinkProps) => {\n  const platform = usePlatform();\n  const baseClassName = getClassName('Link', platform);\n\n  if (!Component) {\n    if (restProps.href) {\n      Component = 'a';\n    } else {\n      Component = 'button';\n      restProps = { type: 'button', ...restProps };\n    }\n  }\n\n  return (\n    <Tappable\n      Component={Component}\n      {...restProps}\n      vkuiClass={baseClassName}\n      hasActive={false}\n      hoverMode=\"opacity\"\n    >{children}</Tappable>\n  );\n};\n\nexport default Link;\n"],"file":"Link.js"}