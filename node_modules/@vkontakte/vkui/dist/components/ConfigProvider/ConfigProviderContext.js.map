{"version":3,"sources":["../../../src/components/ConfigProvider/ConfigProviderContext.tsx"],"names":["createContext","vkBridge","platform","Appearance","Scheme","WebviewType","defaultConfigProviderProps","webviewType","VKAPPS","isWebView","scheme","BRIGHT_LIGHT","appearance","LIGHT","transitionMotionEnabled","ConfigProviderContext"],"mappings":"AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAA+D,sBAA/D;AACA,SAAuBC,QAAvB;AAEA,WAAYC,UAAZ;;WAAYA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;GAAAA,U,KAAAA,U;;AAKZ,WAAYC,MAAZ;;WAAYA,M;AAAAA,EAAAA,M;AAAAA,EAAAA,M;AAAAA,EAAAA,M;AAAAA,EAAAA,M;AAAAA,EAAAA,M;GAAAA,M,KAAAA,M;;AAUZ,WAAYC,WAAZ;;WAAYA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;GAAAA,W,KAAAA,W;;AAiCZ,OAAO,IAAMC,0BAA0B,GAAG;AACxCC,EAAAA,WAAW,EAAEF,WAAW,CAACG,MADe;AAExCC,EAAAA,SAAS,EAAER,QAAQ,CAACQ,SAAT,EAF6B;AAGxCC,EAAAA,MAAM,EAAEN,MAAM,CAACO,YAHyB;AAIxCC,EAAAA,UAAU,EAAET,UAAU,CAACU,KAJiB;AAKxCC,EAAAA,uBAAuB,EAAE,IALe;AAMxCZ,EAAAA,QAAQ,EAAEA,QAAQ;AANsB,CAAnC;AASP,OAAO,IAAMa,qBAAqB,gBAAGf,aAAa,CAAiCM,0BAAjC,CAA3C","sourcesContent":["import { createContext } from 'react';\nimport vkBridge, { AppearanceSchemeType, AppearanceType } from '@vkontakte/vk-bridge';\nimport { PlatformType, platform } from '../../lib/platform';\n\nexport enum Appearance {\n  DARK = 'dark',\n  LIGHT = 'light',\n}\n\nexport enum Scheme {\n  DEPRECATED_CLIENT_LIGHT = 'client_light',\n  DEPRECATED_CLIENT_DARK = 'client_dark',\n  BRIGHT_LIGHT = 'bright_light',\n  SPACE_GRAY = 'space_gray',\n  VKCOM = 'vkcom'\n}\n\nexport type AppearanceScheme = AppearanceSchemeType | Scheme.VKCOM | 'inherit';\n\nexport enum WebviewType {\n  VKAPPS = 'vkapps',\n  INTERNAL = 'internal',\n}\n\nexport interface ConfigProviderContextInterface {\n  /**\n   * Подсказывает приложению, обёрнутому в `ConfigProvider`, где открыто приложение: внутри webview или в мобильном браузере\n   */\n  isWebView?: boolean;\n  /**\n   * Тип вебвью.<br>\n   * В случае `WebviewType.VKAPPS` интерфейс будет адаптирован для отображения в вебвью Mini Apps (системные контролы в правой части шапки)\n   */\n  webviewType?: WebviewType.INTERNAL | WebviewType.VKAPPS;\n  /**\n   * Тип приложения\n   */\n  app?: string;\n  /**\n   * Тип цветовой схемы – `light` или `dark`\n   */\n  appearance?: AppearanceType;\n  /**\n   * Включена ли анимация переходов между экранами в `Root` и `View`\n   */\n  transitionMotionEnabled?: boolean;\n  /**\n   * Платформа\n   */\n  platform?: PlatformType;\n}\n\nexport const defaultConfigProviderProps = {\n  webviewType: WebviewType.VKAPPS,\n  isWebView: vkBridge.isWebView(),\n  scheme: Scheme.BRIGHT_LIGHT,\n  appearance: Appearance.LIGHT,\n  transitionMotionEnabled: true,\n  platform: platform(),\n};\n\nexport const ConfigProviderContext = createContext<ConfigProviderContextInterface>(defaultConfigProviderProps);\n"],"file":"ConfigProviderContext.js"}