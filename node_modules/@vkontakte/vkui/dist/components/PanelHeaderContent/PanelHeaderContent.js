import _extends from "@babel/runtime/helpers/extends";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import { createScopedElement } from "../../lib/jsxRuntime";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import { getClassName } from "../../helpers/getClassName";
import Tappable from "../Tappable/Tappable";
import { usePlatform } from "../../hooks/usePlatform";
import { hasReactNode } from "../../lib/utils";
import Caption from "../Typography/Caption/Caption";
import Headline from "../Typography/Headline/Headline";
import { IOS } from "../..";

var PanelHeaderContent = function PanelHeaderContent(_ref) {
  var className = _ref.className,
      style = _ref.style,
      aside = _ref.aside,
      status = _ref.status,
      before = _ref.before,
      children = _ref.children,
      onClick = _ref.onClick,
      restProps = _objectWithoutProperties(_ref, ["className", "style", "aside", "status", "before", "children", "onClick"]);

  var InComponent = onClick ? Tappable : 'div';
  var rootProps = onClick ? {} : restProps;
  var platform = usePlatform();
  var inProps = onClick ? _objectSpread(_objectSpread({}, restProps), {}, {
    onClick: onClick,
    activeEffectDelay: 200,
    hasActive: platform === IOS,
    activeMode: 'opacity'
  }) : {};
  var baseClassNames = getClassName('PanelHeaderContent', platform);
  return createScopedElement("div", _extends({}, rootProps, {
    vkuiClass: baseClassNames,
    style: style,
    className: className
  }), hasReactNode(before) && createScopedElement("div", {
    vkuiClass: "PanelHeaderContent__before"
  }, before), createScopedElement(InComponent, _extends({}, inProps, {
    vkuiClass: "PanelHeaderContent__in"
  }), hasReactNode(status) && createScopedElement(Caption, {
    level: "1",
    weight: "regular",
    vkuiClass: "PanelHeaderContent__status"
  }, status), createScopedElement("div", {
    vkuiClass: "PanelHeaderContent__children"
  }, hasReactNode(status) ? createScopedElement(Headline, {
    Component: "span",
    weight: "medium"
  }, children) : createScopedElement("span", {
    vkuiClass: "PanelHeaderContent__children-in"
  }, children), hasReactNode(aside) && createScopedElement("div", {
    vkuiClass: "PanelHeaderContent__aside"
  }, aside)), hasReactNode(before) && createScopedElement("div", {
    vkuiClass: "PanelHeaderContent__width"
  })));
};

export default PanelHeaderContent;
//# sourceMappingURL=PanelHeaderContent.js.map