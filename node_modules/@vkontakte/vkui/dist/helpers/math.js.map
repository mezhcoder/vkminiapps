{"version":3,"sources":["../../src/helpers/math.ts"],"names":["clamp","value","min","max","Math","precisionRound","number","precision","factor","pow","round","rescale","from","to","options","res","step","stepFloatPart","split","length"],"mappings":";AAAA,OAAO,IAAMA,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAgBC,GAAhB,EAA6BC,GAA7B;AAAA,SAA6CC,IAAI,CAACD,GAAL,CAASD,GAAT,EAAcE,IAAI,CAACF,GAAL,CAASD,KAAT,EAAgBE,GAAhB,CAAd,CAA7C;AAAA,CAAd;AAEP,OAAO,SAASE,cAAT,CAAwBC,MAAxB,EAAuD;AAAA,MAAfC,SAAe,uEAAH,CAAG;AAC5D,MAAIC,MAAM,GAAGJ,IAAI,CAACK,GAAL,CAAS,EAAT,EAAaF,SAAb,CAAb;AACA,SAAOH,IAAI,CAACM,KAAL,CAAWJ,MAAM,GAAGE,MAApB,IAA8BA,MAArC;AACD;AAED,OAAO,SAASG,OAAT,CAAiBV,KAAjB,EAAgCW,IAAhC,EAAwDC,EAAxD,EAA+G;AAAA,MAAjCC,OAAiC,uEAAJ,EAAI;AACpH,MAAMC,GAAG,GAAGf,KAAK,MAAL,UAAM,CAACC,KAAK,GAAGW,IAAI,CAAC,CAAD,CAAb,KAAqBA,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAnC,KAA2CC,EAAE,CAAC,CAAD,CAAF,GAAQA,EAAE,CAAC,CAAD,CAArD,IAA4DA,EAAE,CAAC,CAAD,CAApE,4BAA4EA,EAA5E,GAAZ;AADoH,sBAG/FC,OAH+F,CAG5GE,IAH4G;AAAA,MAG5GA,IAH4G,8BAGrG,CAHqG;;AAIpH,MAAIA,IAAI,GAAG,CAAX,EAAc;AACZ,QAAMC,aAAa,GAAG,UAAGD,IAAH,EAAUE,KAAV,CAAgB,GAAhB,EAAqB,CAArB,KAA2B,EAAjD;AACA,WAAOb,cAAc,CAACD,IAAI,CAACM,KAAL,CAAWK,GAAG,GAAGC,IAAjB,IAAyBA,IAA1B,EAAgCC,aAAa,CAACE,MAA9C,CAArB;AACD;;AAED,SAAOJ,GAAP;AACD","sourcesContent":["export const clamp = (value: number, min: number, max: number) => Math.max(min, Math.min(value, max));\n\nexport function precisionRound(number: number, precision = 1) {\n  let factor = Math.pow(10, precision);\n  return Math.round(number * factor) / factor;\n}\n\nexport function rescale(value: number, from: [number, number], to: [number, number], options: { step?: number } = {}) {\n  const res = clamp((value - from[0]) / (from[1] - from[0]) * (to[1] - to[0]) + to[0], ...to);\n\n  const { step = 0 } = options;\n  if (step > 0) {\n    const stepFloatPart = `${step}`.split('.')[1] || '';\n    return precisionRound(Math.round(res / step) * step, stepFloatPart.length);\n  }\n\n  return res;\n}\n"],"file":"math.js"}