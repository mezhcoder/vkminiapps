{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { createScopedElement } from \"../../../lib/jsxRuntime\";\nimport { usePlatform } from \"../../../hooks/usePlatform\";\nimport { classNames } from \"../../../lib/classNames\";\nimport { getClassName } from \"../../../helpers/getClassName\";\nimport { ANDROID } from \"../../../lib/platform\";\nimport Headline from \"../Headline/Headline\";\n\nvar getComponent = function getComponent(level) {\n  if (!level) {\n    return 'div';\n  }\n\n  return 'h' + level;\n};\n\nvar getAndroidTitleWeight = function getAndroidTitleWeight(level, weight) {\n  if (level === '3') {\n    return weight === 'regular' ? weight : 'medium';\n  }\n\n  if (level === '2' && weight === 'semibold') {\n    return 'medium';\n  }\n\n  if (weight === 'heavy') {\n    return 'bold';\n  }\n\n  return weight;\n};\n\nvar Title = function Title(_ref) {\n  var children = _ref.children,\n      weight = _ref.weight,\n      level = _ref.level,\n      Component = _ref.Component,\n      restProps = _objectWithoutProperties(_ref, [\"children\", \"weight\", \"level\", \"Component\"]);\n\n  var platform = usePlatform();\n  var TitleComponent = Component || getComponent(level);\n  var titleWeight = platform === ANDROID ? getAndroidTitleWeight(level, weight) : weight;\n\n  if (platform === ANDROID && level === '3') {\n    return createScopedElement(Headline, _extends({\n      Component: TitleComponent\n    }, restProps, {\n      weight: titleWeight\n    }), children);\n  }\n\n  return createScopedElement(TitleComponent, _extends({}, restProps, {\n    vkuiClass: classNames(getClassName('Title', platform), \"Title--w-\".concat(titleWeight), \"Title--l-\".concat(level))\n  }), children);\n};\n\nexport default Title;","map":{"version":3,"sources":["../../../../src/components/Typography/Title/Title.tsx"],"names":["getComponent","getAndroidTitleWeight","level","weight","Title","children","Component","restProps","platform","usePlatform","TitleComponent","titleWeight","classNames","getClassName"],"mappings":";;;AACA,SAAA,WAAA,QAAA,4BAAA;AACA,SAAA,UAAA,QAAA,yBAAA;AACA,SAAA,YAAA,QAAA,+BAAA;AACA,SAAA,OAAA,QAAA,uBAAA;AACA,OAAA,QAAA,MAAA,sBAAA;;AAQA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAAA,KAAA,EAA6C;AAChE,MAAI,CAAJ,KAAA,EAAY;AACV,WAAA,KAAA;AACD;;AAED,SAAQ,MAAR,KAAA;AALF,CAAA;;AAQA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAA,KAAA,EAAA,MAAA,EAAoF;AAChH,MAAIC,KAAK,KAAT,GAAA,EAAmB;AACjB,WAAOC,MAAM,KAANA,SAAAA,GAAAA,MAAAA,GAAP,QAAA;AACD;;AAED,MAAID,KAAK,KAALA,GAAAA,IAAiBC,MAAM,KAA3B,UAAA,EAA4C;AAC1C,WAAA,QAAA;AACD;;AAED,MAAIA,MAAM,KAAV,OAAA,EAAwB;AACtB,WAAA,MAAA;AACD;;AAED,SAAA,MAAA;AAbF,CAAA;;AAgBA,IAAMC,KAAoC,GAAG,SAAvCA,KAAuC,CAAA,IAAA,EAM3B;AAAA,MALhBC,QAKgB,GAAA,IAAA,CALhBA,QAKgB;AAAA,MAJhBF,MAIgB,GAAA,IAAA,CAJhBA,MAIgB;AAAA,MAHhBD,KAGgB,GAAA,IAAA,CAHhBA,KAGgB;AAAA,MAFhBI,SAEgB,GAAA,IAAA,CAFhBA,SAEgB;AAAA,MADbC,SACa,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,WAAA,CAAA,CAAA;;AAChB,MAAMC,QAAQ,GAAGC,WAAjB,EAAA;AACA,MAAMC,cAAc,GAAGJ,SAAS,IAAIN,YAAY,CAAhD,KAAgD,CAAhD;AACA,MAAIW,WAAW,GAAGH,QAAQ,KAARA,OAAAA,GAAuBP,qBAAqB,CAAA,KAAA,EAA5CO,MAA4C,CAA5CA,GAAlB,MAAA;;AAEA,MAAIA,QAAQ,KAARA,OAAAA,IAAwBN,KAAK,KAAjC,GAAA,EAA2C;AACzC,WAAO,mBAAA,CAAA,QAAA,EAAA,QAAA,CAAA;AACL,MAAA,SAAS,EAAEQ;AADN,KAAA,EAAA,SAAA,EAAA;AAGL,MAAA,MAAM,EAAEC;AAHH,KAAA,CAAA,EAAP,QAAO,CAAP;AAOD;;AAED,SACE,mBAAA,CAAA,cAAA,EAAA,QAAA,CAAA,EAAA,EAAA,SAAA,EAAA;AAEE,IAAA,SAAS,EACPC,UAAU,CACRC,YAAY,CAAA,OAAA,EADJ,QACI,CADJ,EAAA,YAAA,MAAA,CAAA,WAAA,CAAA,EAAA,YAAA,MAAA,CAAA,KAAA,CAAA;AAHd,GAAA,CAAA,EADF,QACE,CADF;AArBF,CAAA;;AAqCA,eAAA,KAAA","sourcesContent":["import { ElementType, FunctionComponent, AllHTMLAttributes } from 'react';\nimport { usePlatform } from '../../../hooks/usePlatform';\nimport { classNames } from '../../../lib/classNames';\nimport { getClassName } from '../../../helpers/getClassName';\nimport { ANDROID } from '../../../lib/platform';\nimport Headline, { HeadlineProps } from '../Headline/Headline';\n\nexport interface TitleProps extends AllHTMLAttributes<HTMLElement> {\n  weight: 'heavy' | 'bold' | 'semibold' | 'medium' | 'regular';\n  level: '1' | '2' | '3';\n  Component?: ElementType;\n}\n\nconst getComponent = (level: TitleProps['level']): ElementType => {\n  if (!level) {\n    return 'div';\n  }\n\n  return ('h' + level) as ElementType;\n};\n\nconst getAndroidTitleWeight = (level: TitleProps['level'], weight: TitleProps['weight']): TitleProps['weight'] => {\n  if (level === '3') {\n    return weight === 'regular' ? weight : 'medium';\n  }\n\n  if (level === '2' && weight === 'semibold') {\n    return 'medium';\n  }\n\n  if (weight === 'heavy') {\n    return 'bold';\n  }\n\n  return weight;\n};\n\nconst Title: FunctionComponent<TitleProps> = ({\n  children,\n  weight,\n  level,\n  Component,\n  ...restProps\n}: TitleProps) => {\n  const platform = usePlatform();\n  const TitleComponent = Component || getComponent(level);\n  let titleWeight = platform === ANDROID ? getAndroidTitleWeight(level, weight) : weight;\n\n  if (platform === ANDROID && level === '3') {\n    return <Headline\n      Component={TitleComponent}\n      {...restProps}\n      weight={titleWeight as HeadlineProps['weight']}\n    >\n      {children}\n    </Headline>;\n  }\n\n  return (\n    <TitleComponent\n      {...restProps}\n      vkuiClass={\n        classNames(\n          getClassName('Title', platform),\n          `Title--w-${titleWeight}`,\n          `Title--l-${level}`,\n        )\n      }\n    >\n      {children}\n    </TitleComponent>\n  );\n};\n\nexport default Title;\n"]},"metadata":{},"sourceType":"module"}