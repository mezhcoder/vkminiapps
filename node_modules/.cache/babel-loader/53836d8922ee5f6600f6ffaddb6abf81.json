{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport { classNames } from \"../../lib/classNames\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport Tappable from \"../Tappable/Tappable\";\nimport { hasReactNode } from \"../../lib/utils\";\nimport Text from \"../Typography/Text/Text\";\nimport Caption from \"../Typography/Caption/Caption\";\nimport { withAdaptivity } from \"../../hoc/withAdaptivity\";\n\nvar RichCell = function RichCell(_ref) {\n  var children = _ref.children,\n      text = _ref.text,\n      caption = _ref.caption,\n      before = _ref.before,\n      after = _ref.after,\n      bottom = _ref.bottom,\n      actions = _ref.actions,\n      multiline = _ref.multiline,\n      Component = _ref.Component,\n      onClick = _ref.onClick,\n      sizeY = _ref.sizeY,\n      restProps = _objectWithoutProperties(_ref, [\"children\", \"text\", \"caption\", \"before\", \"after\", \"bottom\", \"actions\", \"multiline\", \"Component\", \"onClick\", \"sizeY\"]);\n\n  var platform = usePlatform();\n  var RootComponent = restProps.disabled ? Component : Tappable;\n  Component = restProps.disabled ? undefined : Component;\n  var props = restProps;\n\n  if (!restProps.disabled) {\n    props.Component = restProps.href ? 'a' : Component;\n    props.onClick = onClick;\n  }\n\n  return createScopedElement(RootComponent, _extends({}, props, {\n    vkuiClass: classNames(getClassName('RichCell', platform), {\n      'RichCell--mult': multiline\n    }, \"RichCell--sizeY-\".concat(sizeY))\n  }), before, createScopedElement(\"div\", {\n    vkuiClass: \"RichCell__in\"\n  }, createScopedElement(\"div\", {\n    vkuiClass: \"RichCell__top\"\n  }, after, createScopedElement(Text, {\n    weight: \"medium\",\n    vkuiClass: \"RichCell__content\"\n  }, createScopedElement(\"div\", {\n    vkuiClass: \"RichCell__children\"\n  }, children), hasReactNode(after) && createScopedElement(\"div\", {\n    vkuiClass: \"RichCell__after\"\n  }, after)), hasReactNode(text) && createScopedElement(Text, {\n    weight: \"regular\",\n    vkuiClass: \"RichCell__text\"\n  }, text), hasReactNode(caption) && createScopedElement(Caption, {\n    level: \"1\",\n    weight: \"regular\",\n    vkuiClass: \"RichCell__caption\"\n  }, caption), (hasReactNode(bottom) || hasReactNode(actions)) && createScopedElement(\"div\", {\n    vkuiClass: \"RichCell__bottom\"\n  }, bottom, hasReactNode(actions) && createScopedElement(\"div\", {\n    vkuiClass: \"RichCell__actions\"\n  }, actions)))));\n};\n\nRichCell.defaultProps = {\n  Component: 'div'\n};\nexport default withAdaptivity(RichCell, {\n  sizeY: true\n});","map":{"version":3,"sources":["../../../src/components/RichCell/RichCell.tsx"],"names":["RichCell","children","text","caption","before","after","bottom","actions","multiline","Component","onClick","sizeY","restProps","platform","usePlatform","RootComponent","props","classNames","getClassName","hasReactNode","withAdaptivity"],"mappings":"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","sourcesContent":["import { FunctionComponent, ReactNode } from 'react';\nimport { classNames } from '../../lib/classNames';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { getClassName } from '../../helpers/getClassName';\nimport Tappable, { TappableProps } from '../Tappable/Tappable';\nimport { hasReactNode } from '../../lib/utils';\nimport Text from '../Typography/Text/Text';\nimport Caption from '../Typography/Caption/Caption';\nimport { withAdaptivity } from '../../hoc/withAdaptivity';\n\nexport interface RichCellProps extends TappableProps {\n  /**\n   * Контейнер для текста под `children`.\n   */\n  text?: ReactNode;\n  /**\n   * Контейнер для текста под `text`.\n   */\n  caption?: ReactNode;\n  /**\n   * Контейнер для контента под `caption`. Например `<UsersStack size=\"s\" />`\n   */\n  bottom?: ReactNode;\n  /**\n   * Кнопка или набор кнопок `<Button size=\"s\" />`. Располагается под `bottom`.\n   */\n  actions?: ReactNode;\n  /**\n   * `<Avatar size={48|72} />`\n   */\n  before?: ReactNode;\n  /**\n   * Иконка 28 или текст\n   */\n  after?: ReactNode;\n  /**\n   * Убирает анимацию нажатия\n   */\n  disabled?: boolean;\n  multiline?: boolean;\n}\n\nconst RichCell: FunctionComponent<RichCellProps> = ({\n  children,\n  text,\n  caption,\n  before,\n  after,\n  bottom,\n  actions,\n  multiline,\n  Component,\n  onClick,\n  sizeY,\n  ...restProps\n}) => {\n  const platform = usePlatform();\n  const RootComponent = restProps.disabled ? Component : Tappable;\n  Component = restProps.disabled ? undefined : Component;\n\n  const props: RichCellProps = restProps;\n\n  if (!restProps.disabled) {\n    props.Component = restProps.href ? 'a' : Component;\n    props.onClick = onClick;\n  }\n\n  return (\n    <RootComponent\n      {...props}\n      vkuiClass={\n        classNames(\n          getClassName('RichCell', platform),\n          {\n            'RichCell--mult': multiline,\n          },\n          `RichCell--sizeY-${sizeY}`,\n        )\n      }\n    >\n      {before}\n      <div vkuiClass=\"RichCell__in\">\n        <div vkuiClass=\"RichCell__top\">\n          {/* Этот after будет скрыт из верстки. Он нужен для CSS */}\n          {after}\n          <Text weight=\"medium\" vkuiClass=\"RichCell__content\">\n            <div vkuiClass=\"RichCell__children\">{children}</div>\n            {hasReactNode(after) && <div vkuiClass=\"RichCell__after\">{after}</div>}\n          </Text>\n          {hasReactNode(text) && <Text weight=\"regular\" vkuiClass=\"RichCell__text\">{text}</Text>}\n          {hasReactNode(caption) && <Caption level=\"1\" weight=\"regular\" vkuiClass=\"RichCell__caption\">{caption}</Caption>}\n          {(hasReactNode(bottom) || hasReactNode(actions)) &&\n            <div vkuiClass=\"RichCell__bottom\">\n              {bottom}\n              {hasReactNode(actions) && <div vkuiClass=\"RichCell__actions\">{actions}</div>}\n            </div>\n          }\n        </div>\n      </div>\n    </RootComponent>\n  );\n};\n\nRichCell.defaultProps = {\n  Component: 'div',\n};\n\nexport default withAdaptivity(RichCell, { sizeY: true });\n"]},"metadata":{},"sourceType":"module"}