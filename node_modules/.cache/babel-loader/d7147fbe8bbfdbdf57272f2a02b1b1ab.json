{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport React, { Children } from 'react';\nimport { classNames } from \"../../lib/classNames\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport Caption from \"../Typography/Caption/Caption\";\nimport Text from \"../Typography/Text/Text\";\nimport { VKCOM } from \"../../lib/platform\";\nimport { hasReactNode } from \"../../lib/utils\";\n\nvar CounterTypography = function CounterTypography(_ref) {\n  var size = _ref.size,\n      children = _ref.children,\n      restProps = _objectWithoutProperties(_ref, [\"size\", \"children\"]);\n\n  var platform = usePlatform();\n\n  if (size === 's') {\n    var weight = platform === VKCOM ? 'medium' : 'regular';\n    return createScopedElement(Caption, _extends({\n      level: \"2\",\n      weight: weight\n    }, restProps), children);\n  }\n\n  return createScopedElement(Text, _extends({\n    weight: \"medium\"\n  }, restProps), children);\n};\n\nvar Counter = function Counter(props) {\n  var mode = props.mode,\n      size = props.size,\n      children = props.children,\n      restProps = _objectWithoutProperties(props, [\"mode\", \"size\", \"children\"]);\n\n  var platform = usePlatform();\n\n  if (Children.count(children) === 0) {\n    return null;\n  }\n\n  return createScopedElement(\"div\", _extends({}, restProps, {\n    vkuiClass: classNames(getClassName('Counter', platform), \"Counter--\".concat(mode), \"Counter--s-\".concat(size))\n  }), hasReactNode(children) && createScopedElement(CounterTypography, {\n    size: size,\n    vkuiClass: \"Counter__in\"\n  }, children));\n};\n\nCounter.defaultProps = {\n  mode: 'secondary',\n  size: 'm'\n};\nexport default /*#__PURE__*/React.memo(Counter);","map":{"version":3,"sources":["../../../src/components/Counter/Counter.tsx"],"names":["CounterTypography","size","children","restProps","platform","usePlatform","weight","Counter","mode","props","Children","classNames","getClassName","hasReactNode","React"],"mappings":";;;AAAA,OAAA,KAAA,IAAA,QAAA,QAAA,OAAA;AACA,SAAA,UAAA,QAAA,sBAAA;AACA,SAAA,YAAA,QAAA,4BAAA;AACA,SAAA,WAAA,QAAA,yBAAA;AACA,OAAA,OAAA,MAAA,+BAAA;AACA,OAAA,IAAA,MAAA,yBAAA;AACA,SAAA,KAAA,QAAA,oBAAA;AACA,SAAA,YAAA,QAAA,iBAAA;;AAMA,IAAMA,iBAA6C,GAAG,SAAhDA,iBAAgD,CAAA,IAAA,EAA8D;AAAA,MAA3DC,IAA2D,GAAA,IAAA,CAA3DA,IAA2D;AAAA,MAArDC,QAAqD,GAAA,IAAA,CAArDA,QAAqD;AAAA,MAAxCC,SAAwC,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,MAAA,EAAA,UAAA,CAAA,CAAA;;AAClH,MAAMC,QAAQ,GAAGC,WAAjB,EAAA;;AAEA,MAAIJ,IAAI,KAAR,GAAA,EAAkB;AAChB,QAAMK,MAAM,GAAGF,QAAQ,KAARA,KAAAA,GAAAA,QAAAA,GAAf,SAAA;AAEA,WAAO,mBAAA,CAAA,OAAA,EAAA,QAAA,CAAA;AAAS,MAAA,KAAK,EAAd,GAAA;AAAmB,MAAA,MAAM,EAAEE;AAA3B,KAAA,EAAA,SAAA,CAAA,EAAP,QAAO,CAAP;AACD;;AAED,SAAO,mBAAA,CAAA,IAAA,EAAA,QAAA,CAAA;AAAM,IAAA,MAAM,EAAC;AAAb,GAAA,EAAA,SAAA,CAAA,EAAP,QAAO,CAAP;AATF,CAAA;;AAoBA,IAAMC,OAAyB,GAAG,SAA5BA,OAA4B,CAAA,KAAA,EAAyB;AAAA,MACjDC,IADiD,GACVC,KADU,CAAA,IAAA;AAAA,MAC3CR,IAD2C,GACVQ,KADU,CAAA,IAAA;AAAA,MACrCP,QADqC,GACVO,KADU,CAAA,QAAA;AAAA,MACxBN,SADwB,GAAA,wBAAA,CAAA,KAAA,EAAA,CAAA,MAAA,EAAA,MAAA,EAAA,UAAA,CAAA,CAAA;;AAEzD,MAAMC,QAAQ,GAAGC,WAAjB,EAAA;;AAEA,MAAIK,QAAQ,CAARA,KAAAA,CAAAA,QAAAA,MAAJ,CAAA,EAAoC;AAClC,WAAA,IAAA;AACD;;AAED,SACE,mBAAA,CAAA,KAAA,EAAA,QAAA,CAAA,EAAA,EAAA,SAAA,EAAA;AAEE,IAAA,SAAS,EAAEC,UAAU,CACnBC,YAAY,CAAA,SAAA,EADO,QACP,CADO,EAAA,YAAA,MAAA,CAAA,IAAA,CAAA,EAAA,cAAA,MAAA,CAAA,IAAA,CAAA;AAFvB,GAAA,CAAA,EAQGC,YAAY,CAAZA,QAAY,CAAZA,IAA0B,mBAAA,CAAA,iBAAA,EAAA;AAAmB,IAAA,IAAI,EAAvB,IAAA;AAA+B,IAAA,SAAS,EAAC;AAAzC,GAAA,EAT/B,QAS+B,CAR7B,CADF;AARF,CAAA;;AAsBAN,OAAO,CAAPA,YAAAA,GAAuB;AACrBC,EAAAA,IAAI,EADiB,WAAA;AAErBP,EAAAA,IAAI,EAAE;AAFe,CAAvBM;AAKA,eAAA,aAAeO,KAAK,CAALA,IAAAA,CAAf,OAAeA,CAAf","sourcesContent":["import React, { HTMLAttributes, FC, Children } from 'react';\nimport { classNames } from '../../lib/classNames';\nimport { getClassName } from '../../helpers/getClassName';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport Caption from '../Typography/Caption/Caption';\nimport Text from '../Typography/Text/Text';\nimport { VKCOM } from '../../lib/platform';\nimport { hasReactNode } from '../../lib/utils';\n\ninterface CounterTypographyProps extends HTMLAttributes<HTMLDivElement> {\n  size: CounterProps['size'];\n}\n\nconst CounterTypography: FC<CounterTypographyProps> = ({ size, children, ...restProps }: CounterTypographyProps) => {\n  const platform = usePlatform();\n\n  if (size === 's') {\n    const weight = platform === VKCOM ? 'medium' : 'regular';\n\n    return <Caption level=\"2\" weight={weight} {...restProps}>{children}</Caption>;\n  }\n\n  return <Text weight=\"medium\" {...restProps}>{children}</Text>;\n};\n\nexport interface CounterProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Тип счетчика. При использовании компонента в качестве значения свойства `after` у `Button` эти значения игнорируются\n   */\n  mode?: 'secondary' | 'primary' | 'prominent';\n  size?: 's' | 'm';\n}\n\nconst Counter: FC<CounterProps> = (props: CounterProps) => {\n  const { mode, size, children, ...restProps } = props;\n  const platform = usePlatform();\n\n  if (Children.count(children) === 0) {\n    return null;\n  }\n\n  return (\n    <div\n      {...restProps}\n      vkuiClass={classNames(\n        getClassName('Counter', platform),\n        `Counter--${mode}`,\n        `Counter--s-${size}`,\n      )}\n    >\n      {hasReactNode(children) && <CounterTypography size={size} vkuiClass=\"Counter__in\">{children}</CounterTypography>}\n    </div>\n  );\n};\n\nCounter.defaultProps = {\n  mode: 'secondary',\n  size: 'm',\n};\n\nexport default React.memo(Counter);\n"]},"metadata":{},"sourceType":"module"}