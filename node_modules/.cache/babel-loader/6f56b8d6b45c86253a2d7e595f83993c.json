{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hasTouch = exports.hasTouchEvents = exports.hasHover = exports.hasMouse = void 0;\n\nvar _IOSDetections = require(\"./IOSDetections\");\n\nvar _dom = require(\"./dom\");\n\nvar hasMouse;\nexports.hasMouse = hasMouse;\nvar hasTouchEvents;\nexports.hasTouchEvents = hasTouchEvents;\nvar hasHover;\nexports.hasHover = hasHover;\nvar hasTouch;\nexports.hasTouch = hasTouch;\n\nif (_dom.canUseDOM) {\n  if (_IOSDetections.isIOS && !_IOSDetections.isIPadOS) {\n    exports.hasMouse = hasMouse = false;\n    exports.hasHover = hasHover = false;\n    exports.hasTouchEvents = hasTouchEvents = true;\n    exports.hasTouch = hasTouch = true;\n  } else {\n    exports.hasTouchEvents = hasTouchEvents = 'ontouchstart' in document;\n    exports.hasTouch = hasTouch = hasTouchEvents || 'maxTouchPoints' in navigator && navigator.maxTouchPoints > 0;\n\n    if (hasTouch) {\n      var notMobile = !/android|mobile|tablet/i.test(navigator.userAgent);\n      exports.hasMouse = hasMouse = window.matchMedia && matchMedia('(pointer)').matches ? matchMedia('(pointer: fine)').matches : notMobile;\n      exports.hasHover = hasHover = hasMouse && (window.matchMedia && matchMedia('(hover)').matches ? matchMedia('(hover: hover)').matches : notMobile);\n    } else {\n      exports.hasMouse = hasMouse = true;\n      exports.hasHover = hasHover = true;\n    }\n  }\n} else {\n  exports.hasMouse = hasMouse = false;\n  exports.hasTouchEvents = hasTouchEvents = false;\n  exports.hasHover = hasHover = false;\n  exports.hasTouch = hasTouch = false;\n}","map":{"version":3,"sources":["../src/InputUtils.ts"],"names":["canUseDOM","isIOS","isIPadOS","hasTouchEvents","navigator","notMobile","window","matchMedia","hasMouse"],"mappings":";;;;;;;AAAA,IAAA,cAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,IAAA,IAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAEA,IAAA,QAAA;;AACA,IAAA,cAAA;;AACA,IAAA,QAAA;;AACA,IAAA,QAAA;;;AAEA,IAAIA,IAAAA,CAAJ,SAAA,EAAe;AACb,MAAIC,cAAAA,CAAAA,KAAAA,IAAS,CAACC,cAAAA,CAAd,QAAA,EAAwB;AACtB,IAAA,OAAA,CAAA,QAAA,GAAA,QAAQ,GAAR,KAAA;AACA,IAAA,OAAA,CAAA,QAAA,GAAA,QAAQ,GAAR,KAAA;AACA,IAAA,OAAA,CAAA,cAAA,GAAA,cAAc,GAAd,IAAA;AACA,IAAA,OAAA,CAAA,QAAA,GAAA,QAAQ,GAAR,IAAA;AAJF,GAAA,MAKO;AACL,IAAA,OAAA,CAAA,cAAA,GAAA,cAAc,GAAG,kBAAjB,QAAA;AACA,IAAA,OAAA,CAAA,QAAA,GAAA,QAAQ,GAAGC,cAAc,IACtB,oBAAA,SAAA,IAAiCC,SAAS,CAATA,cAAAA,GADpC,CAAA;;AAGA,QAAA,QAAA,EAAc;AACZ,UAAMC,SAAS,GAAG,CAAC,yBAAA,IAAA,CAA8BD,SAAS,CAA1D,SAAmB,CAAnB;AAEA,MAAA,OAAA,CAAA,QAAA,GAAA,QAAQ,GAAGE,MAAM,CAANA,UAAAA,IAAqBC,UAAU,CAAVA,WAAU,CAAVA,CAArBD,OAAAA,GACTC,UAAU,CAAVA,iBAAU,CAAVA,CADSD,OAAAA,GAAX,SAAA;AAGA,MAAA,OAAA,CAAA,QAAA,GAAA,QAAQ,GAAGE,QAAQ,KAAKF,MAAM,CAANA,UAAAA,IAAqBC,UAAU,CAAVA,SAAU,CAAVA,CAArBD,OAAAA,GACtBC,UAAU,CAAVA,gBAAU,CAAVA,CADsBD,OAAAA,GAAxB,SAAmB,CAAnB;AANF,KAAA,MAQO;AACL,MAAA,OAAA,CAAA,QAAA,GAAA,QAAQ,GAAR,IAAA;AACA,MAAA,OAAA,CAAA,QAAA,GAAA,QAAQ,GAAR,IAAA;AACD;AACF;AAvBH,CAAA,MAwBO;AACL,EAAA,OAAA,CAAA,QAAA,GAAA,QAAQ,GAAR,KAAA;AACA,EAAA,OAAA,CAAA,cAAA,GAAA,cAAc,GAAd,KAAA;AACA,EAAA,OAAA,CAAA,QAAA,GAAA,QAAQ,GAAR,KAAA;AACA,EAAA,OAAA,CAAA,QAAA,GAAA,QAAQ,GAAR,KAAA;AACD","sourcesContent":["import { isIOS, isIPadOS } from './IOSDetections';\nimport { canUseDOM } from './dom';\n\nlet hasMouse: boolean;\nlet hasTouchEvents: boolean;\nlet hasHover: boolean;\nlet hasTouch: boolean;\n\nif (canUseDOM) {\n  if (isIOS && !isIPadOS) {\n    hasMouse = false;\n    hasHover = false;\n    hasTouchEvents = true;\n    hasTouch = true;\n  } else {\n    hasTouchEvents = 'ontouchstart' in document;\n    hasTouch = hasTouchEvents ||\n      ('maxTouchPoints' in navigator && navigator.maxTouchPoints > 0);\n\n    if (hasTouch) {\n      const notMobile = !/android|mobile|tablet/i.test(navigator.userAgent);\n\n      hasMouse = window.matchMedia && matchMedia('(pointer)').matches ?\n        matchMedia('(pointer: fine)').matches : notMobile;\n\n      hasHover = hasMouse && (window.matchMedia && matchMedia('(hover)').matches ?\n        matchMedia('(hover: hover)').matches : notMobile);\n    } else {\n      hasMouse = true;\n      hasHover = true;\n    }\n  }\n} else {\n  hasMouse = false;\n  hasTouchEvents = false;\n  hasHover = false;\n  hasTouch = false;\n}\n\nexport { hasMouse, hasHover, hasTouchEvents, hasTouch };\n"]},"metadata":{},"sourceType":"script"}