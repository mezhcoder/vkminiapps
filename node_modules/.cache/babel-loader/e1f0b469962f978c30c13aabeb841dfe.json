{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport Tappable from \"../Tappable/Tappable\";\n\nvar Link = function Link(_ref) {\n  var children = _ref.children,\n      Component = _ref.Component,\n      restProps = _objectWithoutProperties(_ref, [\"children\", \"Component\"]);\n\n  var platform = usePlatform();\n  var baseClassName = getClassName('Link', platform);\n\n  if (!Component) {\n    if (restProps.href) {\n      Component = 'a';\n    } else {\n      Component = 'button';\n      restProps = _objectSpread({\n        type: 'button'\n      }, restProps);\n    }\n  }\n\n  return createScopedElement(Tappable, _extends({\n    Component: Component\n  }, restProps, {\n    vkuiClass: baseClassName,\n    hasActive: false,\n    hoverMode: \"opacity\"\n  }), children);\n};\n\nexport default Link;","map":{"version":3,"sources":["../../../src/components/Link/Link.tsx"],"names":["Link","children","Component","restProps","platform","usePlatform","baseClassName","getClassName","type"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAAA,YAAA,QAAA,4BAAA;AACA,SAAA,WAAA,QAAA,yBAAA;AACA,OAAA,QAAA,MAAA,sBAAA;;AAIA,IAAMA,IAAkC,GAAG,SAArCA,IAAqC,CAAA,IAAA,EAI1B;AAAA,MAHfC,QAGe,GAAA,IAAA,CAHfA,QAGe;AAAA,MAFfC,SAEe,GAAA,IAAA,CAFfA,SAEe;AAAA,MADZC,SACY,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,UAAA,EAAA,WAAA,CAAA,CAAA;;AACf,MAAMC,QAAQ,GAAGC,WAAjB,EAAA;AACA,MAAMC,aAAa,GAAGC,YAAY,CAAA,MAAA,EAAlC,QAAkC,CAAlC;;AAEA,MAAI,CAAJ,SAAA,EAAgB;AACd,QAAIJ,SAAS,CAAb,IAAA,EAAoB;AAClBD,MAAAA,SAAS,GAATA,GAAAA;AADF,KAAA,MAEO;AACLA,MAAAA,SAAS,GAATA,QAAAA;AACAC,MAAAA,SAAS,GAAA,aAAA,CAAA;AAAKK,QAAAA,IAAI,EAAE;AAAX,OAAA,EAATL,SAAS,CAATA;AACD;AACF;;AAED,SACE,mBAAA,CAAA,QAAA,EAAA,QAAA,CAAA;AACE,IAAA,SAAS,EAAED;AADb,GAAA,EAAA,SAAA,EAAA;AAGE,IAAA,SAAS,EAHX,aAAA;AAIE,IAAA,SAAS,EAJX,KAAA;AAKE,IAAA,SAAS,EAAC;AALZ,GAAA,CAAA,EADF,QACE,CADF;AAjBF,CAAA;;AA4BA,eAAA,IAAA","sourcesContent":["import { FunctionComponent, AnchorHTMLAttributes } from 'react';\nimport { getClassName } from '../../helpers/getClassName';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport Tappable, { TappableProps } from '../Tappable/Tappable';\n\nexport interface LinkProps extends AnchorHTMLAttributes<HTMLElement>, TappableProps {}\n\nconst Link: FunctionComponent<LinkProps> = ({\n  children,\n  Component,\n  ...restProps\n}: LinkProps) => {\n  const platform = usePlatform();\n  const baseClassName = getClassName('Link', platform);\n\n  if (!Component) {\n    if (restProps.href) {\n      Component = 'a';\n    } else {\n      Component = 'button';\n      restProps = { type: 'button', ...restProps };\n    }\n  }\n\n  return (\n    <Tappable\n      Component={Component}\n      {...restProps}\n      vkuiClass={baseClassName}\n      hasActive={false}\n      hoverMode=\"opacity\"\n    >{children}</Tappable>\n  );\n};\n\nexport default Link;\n"]},"metadata":{},"sourceType":"module"}