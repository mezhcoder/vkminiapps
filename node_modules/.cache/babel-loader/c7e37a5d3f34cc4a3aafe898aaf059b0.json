{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport { useRef } from 'react';\nimport { canUseDOM, useDOM } from \"../../lib/dom\";\nimport { ConfigProviderContext, Scheme, defaultConfigProviderProps } from \"./ConfigProviderContext\";\nimport { VKCOM } from \"../../lib/platform\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { useObjectMemo } from \"../../hooks/useObjectMemo\";\nimport { noop } from \"../../lib/utils\";\n\nfunction mapOldScheme(scheme) {\n  switch (scheme) {\n    case Scheme.DEPRECATED_CLIENT_LIGHT:\n      return Scheme.BRIGHT_LIGHT;\n\n    case Scheme.DEPRECATED_CLIENT_DARK:\n      return Scheme.SPACE_GRAY;\n\n    default:\n      return scheme;\n  }\n}\n\nvar ConfigProvider = function ConfigProvider(_ref) {\n  var children = _ref.children,\n      config = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var scheme = config.platform === VKCOM ? Scheme.VKCOM : mapOldScheme(config.scheme);\n\n  var _useDOM = useDOM(),\n      document = _useDOM.document;\n\n  var setScheme = function setScheme() {\n    if (scheme !== 'inherit') {\n      document.body.setAttribute('scheme', scheme);\n    }\n  };\n\n  var isMounted = useRef(false);\n\n  if (!isMounted.current && canUseDOM) {\n    setScheme();\n    isMounted.current = true;\n  }\n\n  useIsomorphicLayoutEffect(function () {\n    setScheme();\n    return scheme === 'inherit' ? noop : function () {\n      return document.body.removeAttribute('scheme');\n    };\n  }, [scheme]);\n  var configContext = useObjectMemo(config);\n  return createScopedElement(ConfigProviderContext.Provider, {\n    value: configContext\n  }, children);\n}; // Деструктуризация нужна из бага в react-docgen-typescript\n// https://github.com/styleguidist/react-docgen-typescript/issues/195\n\n\nConfigProvider.defaultProps = _objectSpread({}, defaultConfigProviderProps);\nexport default ConfigProvider;","map":{"version":3,"sources":["../../../src/components/ConfigProvider/ConfigProvider.tsx"],"names":["Scheme","ConfigProvider","children","config","scheme","mapOldScheme","document","useDOM","setScheme","isMounted","useRef","useIsomorphicLayoutEffect","configContext","useObjectMemo"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAA,MAAA,QAAA,OAAA;AACA,SAAA,SAAA,EAAA,MAAA,QAAA,eAAA;AACA,SAAA,qBAAA,EAAA,MAAA,EAAA,0BAAA,QAAA,yBAAA;AAOA,SAAA,KAAA,QAAA,oBAAA;AACA,SAAA,yBAAA,QAAA,qCAAA;AACA,SAAA,aAAA,QAAA,2BAAA;AACA,SAAA,IAAA,QAAA,iBAAA;;AASA,SAAA,YAAA,CAAA,MAAA,EAAkE;AAChE,UAAA,MAAA;AACE,SAAKA,MAAM,CAAX,uBAAA;AACE,aAAOA,MAAM,CAAb,YAAA;;AACF,SAAKA,MAAM,CAAX,sBAAA;AACE,aAAOA,MAAM,CAAb,UAAA;;AACF;AACE,aAAA,MAAA;AANJ;AAQD;;AAED,IAAMC,cAAuC,GAAG,SAA1CA,cAA0C,CAAA,IAAA,EAA6B;AAAA,MAA1BC,QAA0B,GAAA,IAAA,CAA1BA,QAA0B;AAAA,MAAbC,MAAa,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,UAAA,CAAA,CAAA;;AAC3E,MAAMC,MAAM,GAAGD,MAAM,CAANA,QAAAA,KAAAA,KAAAA,GAA4BH,MAAM,CAAlCG,KAAAA,GAA2CE,YAAY,CAACF,MAAM,CAA7E,MAAsE,CAAtE;;AAD2E,MAAA,OAAA,GAGtDI,MAHsD,EAAA;AAAA,MAGnED,QAHmE,GAAA,OAAA,CAAA,QAAA;;AAI3E,MAAME,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,QAAIJ,MAAM,KAAV,SAAA,EAA0B;AACxBE,MAAAA,QAAQ,CAARA,IAAAA,CAAAA,YAAAA,CAAAA,QAAAA,EAAAA,MAAAA;AACD;AAHH,GAAA;;AAMA,MAAMG,SAAS,GAAGC,MAAM,CAAxB,KAAwB,CAAxB;;AACA,MAAI,CAACD,SAAS,CAAV,OAAA,IAAJ,SAAA,EAAqC;AACnCD,IAAAA,SAAS;AACTC,IAAAA,SAAS,CAATA,OAAAA,GAAAA,IAAAA;AACD;;AACDE,EAAAA,yBAAyB,CAAC,YAAM;AAC9BH,IAAAA,SAAS;AACT,WAAOJ,MAAM,KAANA,SAAAA,GAAAA,IAAAA,GAA8B,YAAA;AAAA,aAAME,QAAQ,CAARA,IAAAA,CAAAA,eAAAA,CAAN,QAAMA,CAAN;AAArC,KAAA;AAFuB,GAAA,EAGtB,CAHHK,MAGG,CAHsB,CAAzBA;AAKA,MAAMC,aAAa,GAAGC,aAAa,CAAnC,MAAmC,CAAnC;AAEA,SACE,mBAAA,CAAC,qBAAD,CAAA,QAAA,EAAA;AAAgC,IAAA,KAAK,EAAED;AAAvC,GAAA,EADF,QACE,CADF;AAtBF,CAAA,C,CA6BA;AACA;;;AACAX,cAAc,CAAdA,YAAAA,GAAAA,aAAAA,CAAAA,EAAAA,EAAAA,0BAAAA,CAAAA;AAEA,eAAA,cAAA","sourcesContent":["import { FC, useRef } from 'react';\nimport { canUseDOM, useDOM } from '../../lib/dom';\nimport {\n  ConfigProviderContext,\n  ConfigProviderContextInterface,\n  Scheme,\n  AppearanceScheme,\n  defaultConfigProviderProps,\n} from './ConfigProviderContext';\nimport { VKCOM } from '../../lib/platform';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { useObjectMemo } from '../../hooks/useObjectMemo';\nimport { noop } from '../../lib/utils';\n\nexport interface ConfigProviderProps extends ConfigProviderContextInterface {\n  /**\n   * Цветовая схема приложения\n   */\n  scheme?: AppearanceScheme;\n}\n\nfunction mapOldScheme(scheme: AppearanceScheme): AppearanceScheme {\n  switch (scheme) {\n    case Scheme.DEPRECATED_CLIENT_LIGHT:\n      return Scheme.BRIGHT_LIGHT;\n    case Scheme.DEPRECATED_CLIENT_DARK:\n      return Scheme.SPACE_GRAY;\n    default:\n      return scheme;\n  }\n}\n\nconst ConfigProvider: FC<ConfigProviderProps> = ({ children, ...config }) => {\n  const scheme = config.platform === VKCOM ? Scheme.VKCOM : mapOldScheme(config.scheme);\n\n  const { document } = useDOM();\n  const setScheme = () => {\n    if (scheme !== 'inherit') {\n      document.body.setAttribute('scheme', scheme);\n    }\n  };\n\n  const isMounted = useRef(false);\n  if (!isMounted.current && canUseDOM) {\n    setScheme();\n    isMounted.current = true;\n  }\n  useIsomorphicLayoutEffect(() => {\n    setScheme();\n    return scheme === 'inherit' ? noop : () => document.body.removeAttribute('scheme');\n  }, [scheme]);\n\n  const configContext = useObjectMemo(config);\n\n  return (\n    <ConfigProviderContext.Provider value={configContext}>\n      {children}\n    </ConfigProviderContext.Provider>\n  );\n};\n\n// Деструктуризация нужна из бага в react-docgen-typescript\n// https://github.com/styleguidist/react-docgen-typescript/issues/195\nConfigProvider.defaultProps = { ...defaultConfigProviderProps };\n\nexport default ConfigProvider;\n"]},"metadata":{},"sourceType":"module"}