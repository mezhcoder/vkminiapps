{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport { Component, createRef } from 'react';\nimport Touch from \"../Touch/Touch\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { classNames } from \"../../lib/classNames\";\nimport { setRef } from \"../../lib/utils\";\nimport { rescale } from \"../../helpers/math\";\nimport { withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport { withPlatform } from \"../../hoc/withPlatform\";\n\nvar UniversalSliderDumb = /*#__PURE__*/function (_Component) {\n  _inherits(UniversalSliderDumb, _Component);\n\n  var _super = _createSuper(UniversalSliderDumb);\n\n  function UniversalSliderDumb() {\n    var _this;\n\n    _classCallCheck(this, UniversalSliderDumb);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"dragging\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"startX\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"containerWidth\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"container\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"thumbStart\", /*#__PURE__*/createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"thumbEnd\", /*#__PURE__*/createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"onStart\", function (e) {\n      if (_this.props.disabled) {\n        return;\n      }\n\n      var boundingRect = _this.container.getBoundingClientRect();\n\n      _this.containerWidth = boundingRect.width;\n      var absolutePosition = e.startX - boundingRect.left;\n\n      var value = _this.offsetToValue(absolutePosition);\n\n      _this.dragging = _this.snapDirection(value, e.originalEvent.target);\n      _this.startX = absolutePosition;\n\n      _this.props.onChange(_this.updateRange(value), e);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMove\", function (e) {\n      if (_this.props.disabled) {\n        return;\n      }\n\n      var value = _this.offsetToValue(_this.startX + (e.shiftX || 0));\n\n      _this.props.onChange(_this.updateRange(value), e);\n\n      e.originalEvent.preventDefault();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onEnd\", function () {\n      if (_this.props.disabled) {\n        return;\n      }\n\n      _this.dragging = false;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getRef\", function (container) {\n      _this.container = container;\n      setRef(container, _this.props.getRootRef);\n    });\n\n    return _this;\n  }\n\n  _createClass(UniversalSliderDumb, [{\n    key: \"updateRange\",\n    value: function updateRange(value) {\n      if (this.props.disabled) {\n        return this.props.value;\n      }\n\n      var _this$props$value = _slicedToArray(this.props.value, 2),\n          start = _this$props$value[0],\n          end = _this$props$value[1];\n\n      if (start == null) {\n        return [null, value];\n      }\n\n      var dragging = this.dragging;\n\n      if (dragging === 'start') {\n        if (value > end) {\n          // \"перехватиться\", если перетянули за конец\n          this.dragging = 'end';\n          return [end, value];\n        }\n\n        return [value, end];\n      }\n\n      if (dragging === 'end') {\n        if (value < start) {\n          // \"перехватиться\", если перетянули за начало\n          this.dragging = 'start';\n          return [value, start];\n        }\n\n        return [start, value];\n      }\n\n      return this.props.value;\n    }\n  }, {\n    key: \"offsetToValue\",\n    value: function offsetToValue(absolute) {\n      var _this$props = this.props,\n          min = _this$props.min,\n          max = _this$props.max,\n          step = _this$props.step;\n      return rescale(absolute, [0, this.containerWidth], [min, max], {\n        step: step\n      });\n    }\n  }, {\n    key: \"snapDirection\",\n    value: function snapDirection(value, target) {\n      if (target === this.thumbStart.current) {\n        return 'start';\n      }\n\n      if (target === this.thumbEnd.current) {\n        return 'end';\n      }\n\n      var _this$props$value2 = _slicedToArray(this.props.value, 2),\n          start = _this$props$value2[0],\n          end = _this$props$value2[1];\n\n      return Math.abs(start - value) <= Math.abs(end - value) ? 'start' : 'end';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          min = _this$props2.min,\n          max = _this$props2.max,\n          step = _this$props2.step,\n          value = _this$props2.value,\n          defaultValue = _this$props2.defaultValue,\n          onChange = _this$props2.onChange,\n          getRootRef = _this$props2.getRootRef,\n          platform = _this$props2.platform,\n          sizeY = _this$props2.sizeY,\n          disabled = _this$props2.disabled,\n          restProps = _objectWithoutProperties(_this$props2, [\"min\", \"max\", \"step\", \"value\", \"defaultValue\", \"onChange\", \"getRootRef\", \"platform\", \"sizeY\", \"disabled\"]);\n\n      var toPercent = function toPercent(v) {\n        return (v - min) / (max - min) * 100;\n      };\n\n      var isRange = value[0] != null;\n      var draggerStyle = isRange ? {\n        width: \"\".concat(toPercent(value[1]) - toPercent(value[0]), \"%\"),\n        left: isRange ? \"\".concat(toPercent(value[0]), \"%\") : null\n      } : {\n        width: \"\".concat(toPercent(value[1]), \"%\")\n      };\n      return createScopedElement(Touch, _extends({\n        \"data-value\": isRange ? value.join(',') : value\n      }, restProps, {\n        onStart: this.onStart,\n        onMove: this.onMove,\n        onEnd: this.onEnd,\n        vkuiClass: classNames(getClassName('Slider', platform), \"Slider--sizeY-\".concat(sizeY), disabled && 'Slider--disabled')\n      }), createScopedElement(\"div\", {\n        ref: this.getRef,\n        vkuiClass: \"Slider__in\"\n      }, createScopedElement(\"div\", {\n        vkuiClass: \"Slider__dragger\",\n        style: draggerStyle\n      }, isRange && createScopedElement(\"span\", {\n        vkuiClass: classNames('Slider__thumb', 'Slider__thumb--start'),\n        ref: this.thumbStart\n      }), createScopedElement(\"span\", {\n        vkuiClass: classNames('Slider__thumb', 'Slider__thumb--end'),\n        ref: this.thumbEnd\n      }))));\n    }\n  }]);\n\n  return UniversalSliderDumb;\n}(Component);\n\nexport var UniversalSlider = withAdaptivity(withPlatform(UniversalSliderDumb), {\n  sizeY: true\n});","map":{"version":3,"sources":["../../../src/components/RangeSlider/UniversalSlider.tsx"],"names":["UniversalSliderDumb","Component","createRef","boundingRect","absolutePosition","e","value","start","end","dragging","absolute","min","max","step","rescale","target","Math","setRef","defaultValue","onChange","getRootRef","platform","sizeY","disabled","restProps","toPercent","v","isRange","draggerStyle","width","left","classNames","getClassName","thumbStart","thumbEnd","UniversalSlider","withAdaptivity","withPlatform"],"mappings":"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","sourcesContent":["import { Component, createRef, HTMLAttributes, RefCallback } from 'react';\nimport Touch, { TouchEvent, TouchEventHandler } from '../Touch/Touch';\nimport { getClassName } from '../../helpers/getClassName';\nimport { classNames } from '../../lib/classNames';\nimport { HasPlatform, HasRootRef } from '../../types';\nimport { setRef } from '../../lib/utils';\nimport { rescale } from '../../helpers/math';\nimport { withAdaptivity, AdaptivityProps } from '../../hoc/withAdaptivity';\nimport { withPlatform } from '../../hoc/withPlatform';\n\nexport type UniversalValue = [number | null, number];\n\nexport interface UniversalSliderProps<Value> extends\n  HasRootRef<HTMLDivElement>,\n  HasPlatform,\n  Omit<HTMLAttributes<HTMLDivElement>, 'value' | 'defaultValue' | 'onChange'>,\n  AdaptivityProps {\n  min?: number;\n  max?: number;\n  step?: number;\n  value?: Value;\n  defaultValue?: Value;\n  disabled?: boolean;\n  onChange?(value: Value, e: TouchEvent): void;\n}\n\nclass UniversalSliderDumb extends Component<UniversalSliderProps<UniversalValue>> {\n  dragging: false | 'start' | 'end' = false;\n  startX = 0;\n  containerWidth = 0;\n\n  container: HTMLDivElement;\n  thumbStart = createRef<HTMLDivElement>();\n  thumbEnd = createRef<HTMLDivElement>();\n\n  onStart: TouchEventHandler = (e: TouchEvent) => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    const boundingRect = this.container.getBoundingClientRect();\n    this.containerWidth = boundingRect.width;\n\n    const absolutePosition = e.startX - boundingRect.left;\n    const value = this.offsetToValue(absolutePosition);\n    this.dragging = this.snapDirection(value, e.originalEvent.target);\n    this.startX = absolutePosition;\n\n    this.props.onChange(this.updateRange(value), e);\n  };\n\n  onMove: TouchEventHandler = (e: TouchEvent) => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    const value = this.offsetToValue(this.startX + (e.shiftX || 0));\n    this.props.onChange(this.updateRange(value), e);\n\n    e.originalEvent.preventDefault();\n  };\n\n  onEnd: TouchEventHandler = () => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    this.dragging = false;\n  };\n\n  updateRange(value: number): UniversalValue {\n    if (this.props.disabled) {\n      return this.props.value;\n    }\n\n    const [start, end] = this.props.value;\n\n    if (start == null) {\n      return [null, value];\n    }\n\n    const { dragging } = this;\n    if (dragging === 'start') {\n      if (value > end) {\n        // \"перехватиться\", если перетянули за конец\n        this.dragging = 'end';\n        return [end, value];\n      }\n      return [value, end];\n    }\n    if (dragging === 'end') {\n      if (value < start) {\n        // \"перехватиться\", если перетянули за начало\n        this.dragging = 'start';\n        return [value, start];\n      }\n      return [start, value];\n    }\n    return this.props.value;\n  };\n\n  offsetToValue(absolute: number) {\n    const { min, max, step } = this.props;\n    return rescale(absolute, [0, this.containerWidth], [min, max], { step });\n  }\n\n  snapDirection(value: number, target: EventTarget) {\n    if (target === this.thumbStart.current) {\n      return 'start';\n    }\n    if (target === this.thumbEnd.current) {\n      return 'end';\n    }\n    const [start, end] = this.props.value;\n    return Math.abs(start - value) <= Math.abs(end - value) ? 'start' : 'end';\n  }\n\n  getRef: RefCallback<HTMLDivElement> = (container) => {\n    this.container = container;\n    setRef(container, this.props.getRootRef);\n  };\n\n  render() {\n    const { min, max, step, value, defaultValue,\n      onChange, getRootRef, platform, sizeY, disabled, ...restProps } = this.props;\n    const toPercent = (v: number) => (v - min) / (max - min) * 100;\n\n    const isRange = value[0] != null;\n    const draggerStyle = isRange ? {\n      width: `${toPercent(value[1]) - toPercent(value[0])}%`,\n      left: isRange ? `${toPercent(value[0])}%` : null,\n    } : {\n      width: `${toPercent(value[1])}%`,\n    };\n\n    return (\n      <Touch\n        data-value={isRange ? value.join(',') : value}\n        {...restProps}\n        onStart={this.onStart}\n        onMove={this.onMove}\n        onEnd={this.onEnd}\n        vkuiClass={classNames(\n          getClassName('Slider', platform),\n          `Slider--sizeY-${sizeY}`,\n          disabled && 'Slider--disabled',\n        )}\n      >\n        <div ref={this.getRef} vkuiClass=\"Slider__in\">\n          <div vkuiClass=\"Slider__dragger\" style={draggerStyle}>\n            {isRange && <span vkuiClass={classNames('Slider__thumb', 'Slider__thumb--start')} ref={this.thumbStart} />}\n            <span vkuiClass={classNames('Slider__thumb', 'Slider__thumb--end')} ref={this.thumbEnd} />\n          </div>\n        </div>\n      </Touch>\n    );\n  }\n}\n\nexport const UniversalSlider = withAdaptivity(withPlatform(UniversalSliderDumb), {\n  sizeY: true,\n});\n"]},"metadata":{},"sourceType":"module"}