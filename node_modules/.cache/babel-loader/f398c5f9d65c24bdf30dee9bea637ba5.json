{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _temp;\n\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport React, { Component, Fragment, isValidElement } from 'react';\nimport { classNames } from \"../../lib/classNames\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport ReactDOM from 'react-dom';\nimport { canUseDOM, withDOM } from \"../../lib/dom\";\nimport { setRef } from \"../../lib/utils\";\nimport Subhead from \"../Typography/Subhead/Subhead\";\nimport { tooltipContainerAttr } from \"./TooltipContainer\";\n\nvar isDOMTypeElement = function isDOMTypeElement(element) {\n  return /*#__PURE__*/React.isValidElement(element) && typeof element.type === 'string';\n};\n\nvar baseClassName = getClassName('Tooltip');\nvar TooltipPortal = withDOM((_temp = /*#__PURE__*/function (_Component) {\n  _inherits(TooltipPortalClass, _Component);\n\n  var _super = _createSuper(TooltipPortalClass);\n\n  function TooltipPortalClass(props) {\n    var _this;\n\n    _classCallCheck(this, TooltipPortalClass);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"fixedPortal\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"el\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"portalTarget\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"getBoundingTargetRect\", function () {\n      var target = _this.props.target;\n      var targetBounds = target.getBoundingClientRect();\n\n      var portalBounds = _this.portalTarget.getBoundingClientRect();\n\n      return {\n        width: targetBounds.width,\n        height: targetBounds.height,\n        x: targetBounds.left - portalBounds.left,\n        y: targetBounds.top - portalBounds.top\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getRef\", function (el) {\n      return _this.el = el;\n    });\n\n    _this.state = {\n      x: 0,\n      y: 0\n    };\n    var _target = props.target;\n    /* eslint-disable no-restricted-properties */\n\n    _this.fixedPortal = _target.closest(\"[\".concat(tooltipContainerAttr, \"=fixed]\")) != null;\n    _this.portalTarget = _target.closest(\"[\".concat(tooltipContainerAttr, \"]\"));\n    /* eslint-enable no-restricted-properties */\n\n    return _this;\n  }\n\n  _createClass(TooltipPortalClass, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.document.removeEventListener('click', this.props.onClose);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          offsetY = _this$props.offsetY,\n          offsetX = _this$props.offsetX,\n          alignX = _this$props.alignX,\n          alignY = _this$props.alignY;\n      var coords = this.getBoundingTargetRect();\n      this.document.addEventListener('click', this.props.onClose);\n      this.setState({\n        x: coords.x + offsetX + (alignX === 'right' ? coords.width - this.el.offsetWidth : 0),\n        y: coords.y + (alignY === 'top' ? -this.el.offsetHeight - offsetY : coords.height + offsetY)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          header = _this$props2.header,\n          text = _this$props2.text,\n          alignX = _this$props2.alignX,\n          alignY = _this$props2.alignY,\n          cornerOffset = _this$props2.cornerOffset,\n          mode = _this$props2.mode;\n      return /*#__PURE__*/ReactDOM.createPortal(createScopedElement(\"div\", {\n        vkuiClass: classNames(baseClassName, \"Tooltip--x-\".concat(alignX), \"Tooltip--y-\".concat(alignY), \"Tooltip--\".concat(mode), {\n          'Tooltip--fixed': this.fixedPortal\n        })\n      }, createScopedElement(\"div\", {\n        vkuiClass: \"Tooltip__container\",\n        style: {\n          top: this.state.y,\n          left: this.state.x\n        },\n        ref: this.getRef\n      }, createScopedElement(\"div\", {\n        vkuiClass: \"Tooltip__corner\",\n        style: _defineProperty({}, alignX, 20 + cornerOffset)\n      }), createScopedElement(\"div\", {\n        vkuiClass: \"Tooltip__content\"\n      }, header && createScopedElement(Subhead, {\n        weight: \"semibold\",\n        vkuiClass: \"Tooltip__title\"\n      }, header), text && createScopedElement(Subhead, {\n        weight: \"regular\",\n        vkuiClass: \"Tooltip__text\"\n      }, text)))), this.portalTarget);\n    }\n  }, {\n    key: \"document\",\n    get: function get() {\n      return this.props.document;\n    }\n  }]);\n\n  return TooltipPortalClass;\n}(Component), _temp));\n\nvar Tooltip = /*#__PURE__*/function (_Component2) {\n  _inherits(Tooltip, _Component2);\n\n  var _super2 = _createSuper(Tooltip);\n\n  function Tooltip() {\n    var _this2;\n\n    _classCallCheck(this, Tooltip);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super2.call.apply(_super2, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this2), \"state\", {\n      ready: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"targetEl\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this2), \"getRef\", function (el) {\n      _this2.targetEl = el;\n      var children = _this2.props.children;\n\n      if ( /*#__PURE__*/isValidElement(children)) {\n        setRef(el, isDOMTypeElement(children) ? children.ref : children.props.getRootRef);\n      }\n    });\n\n    return _this2;\n  }\n\n  _createClass(Tooltip, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (canUseDOM) {\n        this.targetEl && this.setState({\n          ready: true\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          _this$props3$children = _this$props3.children,\n          children = _this$props3$children === void 0 ? null : _this$props3$children,\n          isShown = _this$props3.isShown,\n          portalProps = _objectWithoutProperties(_this$props3, [\"children\", \"isShown\"]);\n\n      var child = /*#__PURE__*/isValidElement(children) ? /*#__PURE__*/React.cloneElement(children, _defineProperty({}, isDOMTypeElement(children) ? 'ref' : 'getRootRef', this.getRef)) : children;\n\n      if (!isShown || !this.state.ready) {\n        return child;\n      }\n\n      return createScopedElement(Fragment, null, child, createScopedElement(TooltipPortal, _extends({}, portalProps, {\n        target: this.targetEl\n      })));\n    }\n  }]);\n\n  return Tooltip;\n}(Component);\n\n_defineProperty(Tooltip, \"defaultProps\", {\n  offsetX: 0,\n  offsetY: 15,\n  alignX: 'left',\n  alignY: 'bottom',\n  cornerOffset: 0,\n  isShown: true,\n  mode: 'accent'\n});\n\nexport { Tooltip as default };","map":{"version":3,"sources":["../../../src/components/Tooltip/Tooltip.tsx"],"names":["isDOMTypeElement","element","baseClassName","getClassName","TooltipPortal","withDOM","x","y","target","props","targetBounds","portalBounds","width","height","top","offsetY","offsetX","alignX","alignY","coords","header","text","cornerOffset","mode","classNames","fixedPortal","left","getRef","Tooltip","Component","isShown","ready","children","isValidElement","setRef","portalProps","child","React","targetEl"],"mappings":"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","sourcesContent":["import React, { ReactElement, ReactNode, Component, Fragment, RefCallback, isValidElement } from 'react';\nimport { classNames } from '../../lib/classNames';\nimport { getClassName } from '../../helpers/getClassName';\nimport ReactDOM from 'react-dom';\nimport { canUseDOM, DOMProps, withDOM } from '../../lib/dom';\nimport { setRef } from '../../lib/utils';\nimport Subhead from '../Typography/Subhead/Subhead';\nimport { tooltipContainerAttr } from './TooltipContainer';\n\ninterface TooltipPortalProps extends Partial<TooltipProps> {\n  target?: HTMLElement;\n}\n\ninterface TooltipPortalState {\n  x: number;\n  y: number;\n}\n\ntype GetBoundingTargetRect = () => {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n};\n\nconst isDOMTypeElement = (element: ReactElement): element is React.DOMElement<any, any> => {\n  return React.isValidElement(element) && typeof element.type === 'string';\n};\n\nconst baseClassName = getClassName('Tooltip');\n\nconst TooltipPortal = withDOM<TooltipPortalProps>(\n  class TooltipPortalClass extends Component<TooltipPortalProps & DOMProps, TooltipPortalState> {\n    constructor(props: TooltipPortalProps) {\n      super(props);\n\n      this.state = {\n        x: 0,\n        y: 0,\n      };\n\n      const { target } = props;\n      /* eslint-disable no-restricted-properties */\n      this.fixedPortal = target.closest(`[${tooltipContainerAttr}=fixed]`) != null;\n      this.portalTarget = target.closest(`[${tooltipContainerAttr}]`);\n      /* eslint-enable no-restricted-properties */\n    }\n\n    get document() {\n      return this.props.document;\n    }\n\n    fixedPortal: boolean;\n\n    el: HTMLDivElement;\n\n    portalTarget: HTMLElement;\n\n    getBoundingTargetRect: GetBoundingTargetRect = () => {\n      const { target } = this.props;\n      const targetBounds = target.getBoundingClientRect();\n      const portalBounds = this.portalTarget.getBoundingClientRect();\n\n      return {\n        width: targetBounds.width,\n        height: targetBounds.height,\n        x: targetBounds.left - portalBounds.left,\n        y: targetBounds.top - portalBounds.top,\n      };\n    };\n\n    componentWillUnmount() {\n      this.document.removeEventListener('click', this.props.onClose);\n    }\n\n    componentDidMount() {\n      const { offsetY, offsetX, alignX, alignY } = this.props;\n      const coords = this.getBoundingTargetRect();\n\n      this.document.addEventListener('click', this.props.onClose);\n\n      this.setState({\n        x: coords.x + offsetX + (alignX === 'right' ? coords.width - this.el.offsetWidth : 0),\n        y: coords.y + (alignY === 'top' ? -this.el.offsetHeight - offsetY : coords.height + offsetY),\n      });\n    }\n\n    getRef: RefCallback<HTMLDivElement> = (el) => this.el = el;\n\n    render() {\n      const { header, text, alignX, alignY, cornerOffset, mode } = this.props;\n\n      return ReactDOM.createPortal(\n        <div vkuiClass={\n          classNames(\n            baseClassName,\n            `Tooltip--x-${alignX}`,\n            `Tooltip--y-${alignY}`,\n            `Tooltip--${mode}`,\n            {\n              'Tooltip--fixed': this.fixedPortal,\n            },\n          )}>\n          <div vkuiClass=\"Tooltip__container\" style={{ top: this.state.y, left: this.state.x }} ref={this.getRef}>\n            <div vkuiClass=\"Tooltip__corner\" style={{ [alignX]: 20 + cornerOffset }} />\n            <div vkuiClass=\"Tooltip__content\">\n              {header && <Subhead weight=\"semibold\" vkuiClass=\"Tooltip__title\">{header}</Subhead>}\n              {text && <Subhead weight=\"regular\" vkuiClass=\"Tooltip__text\">{text}</Subhead>}\n            </div>\n          </div>\n        </div>, this.portalTarget);\n    }\n  },\n);\n\nexport interface TooltipProps {\n  /**\n   * **Важно**: если в `children` передан React-компонент, то необходимо убедиться в том, что он поддерживает\n   * свойство `getRootRef`, которое должно возвращаться ссылку на корневой DOM-элемент компонента,\n   * иначе тултип показан не будет. Если передан React-element, то такой проблемы нет.\n   */\n  children: ReactNode;\n  mode: 'accent' | 'light';\n  /**\n   * Если передан `false`, то рисуется просто `children`.\n   */\n  isShown: boolean;\n  /**\n   * Текст тултипа.\n   */\n  text?: ReactNode;\n  /**\n   * Заголовок тултипа.\n   */\n  header?: ReactNode;\n  /**\n   * Положение по горизонтали (прижатие к левому или правому краю `children`).\n   */\n  alignX?: 'left' | 'right';\n  /**\n   * Положение по вертикали (расположение над или под `children`).\n   */\n  alignY?: 'top' | 'bottom';\n  /**\n   * Сдвиг по горизонтали (относительно портала, в котором рисуется тултип).\n   */\n  offsetX?: number;\n  /**\n   * Сдвиг по вертикали (относительно портала, в котором рисуется тултип).\n   */\n  offsetY?: number;\n  /**\n   * Сдвиг треугольника (относительно ширины тултипа).\n   */\n  cornerOffset?: number;\n  /**\n   * Callback, который вызывается при клике по любому месту в пределах экрана.\n   */\n  onClose(): void;\n}\n\nexport interface TooltipState {\n  ready: boolean;\n}\n\nexport default class Tooltip extends Component<TooltipProps, TooltipState> {\n  static defaultProps: Partial<TooltipProps> = {\n    offsetX: 0,\n    offsetY: 15,\n    alignX: 'left',\n    alignY: 'bottom',\n    cornerOffset: 0,\n    isShown: true,\n    mode: 'accent',\n  };\n\n  state: TooltipState = {\n    ready: false,\n  };\n\n  targetEl: HTMLElement;\n\n  componentDidMount() {\n    if (canUseDOM) {\n      this.targetEl && this.setState({ ready: true });\n    }\n  }\n\n  getRef: RefCallback<HTMLDivElement> = (el) => {\n    this.targetEl = el;\n\n    const { children } = this.props;\n    if (isValidElement(children)) {\n      setRef(el, isDOMTypeElement(children) ? children.ref : children.props.getRootRef);\n    }\n  };\n\n  render() {\n    const { children = null, isShown, ...portalProps } = this.props;\n\n    const child = isValidElement(children) ? React.cloneElement(children, {\n      [isDOMTypeElement(children) ? 'ref' : 'getRootRef']: this.getRef,\n    }) : children;\n\n    if (!isShown || !this.state.ready) {\n      return child;\n    }\n\n    return (\n      <Fragment>\n        {child}\n        <TooltipPortal {...portalProps} target={this.targetEl} />\n      </Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}