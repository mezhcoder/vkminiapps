{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport Card from \"../Card/Card\";\nimport Caption from \"../Typography/Caption/Caption\";\nimport Title from \"../Typography/Title/Title\";\nimport Text from \"../Typography/Text/Text\";\nimport Tappable from \"../Tappable/Tappable\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { hasReactNode } from \"../../lib/utils\";\n\nvar ContentCard = function ContentCard(props) {\n  var getRef = props.getRef,\n      onClick = props.onClick,\n      subtitle = props.subtitle,\n      header = props.header,\n      text = props.text,\n      caption = props.caption,\n      className = props.className,\n      image = props.image,\n      maxHeight = props.maxHeight,\n      disabled = props.disabled,\n      mode = props.mode,\n      alt = props.alt,\n      style = props.style,\n      getRootRef = props.getRootRef,\n      restProps = _objectWithoutProperties(props, [\"getRef\", \"onClick\", \"subtitle\", \"header\", \"text\", \"caption\", \"className\", \"image\", \"maxHeight\", \"disabled\", \"mode\", \"alt\", \"style\", \"getRootRef\"]);\n\n  var platform = usePlatform();\n  return createScopedElement(Card, {\n    mode: mode,\n    getRootRef: getRootRef,\n    vkuiClass: getClassName('ContentCard', platform),\n    style: style,\n    className: className\n  }, createScopedElement(Tappable, {\n    disabled: disabled,\n    onClick: onClick,\n    vkuiClass: \"ContentCard__tappable\"\n  }, image && createScopedElement(\"img\", _extends({}, restProps, {\n    ref: getRef,\n    src: image,\n    alt: alt,\n    vkuiClass: \"ContentCard__img\",\n    style: {\n      maxHeight: props.maxHeight\n    },\n    width: \"100%\"\n  })), createScopedElement(\"div\", {\n    vkuiClass: \"ContentCard__body\"\n  }, hasReactNode(subtitle) && createScopedElement(Caption, {\n    caps: true,\n    vkuiClass: \"ContentCard__caption\",\n    weight: \"semibold\",\n    level: \"3\"\n  }, subtitle), hasReactNode(header) && createScopedElement(Title, {\n    vkuiClass: \"ContentCard__title\",\n    weight: \"semibold\",\n    level: \"3\"\n  }, header), hasReactNode(text) && createScopedElement(Text, {\n    vkuiClass: \"ContentCard__text\",\n    weight: \"regular\"\n  }, text), hasReactNode(caption) && createScopedElement(Caption, {\n    vkuiClass: \"ContentCard__caption\",\n    weight: \"regular\",\n    level: \"1\"\n  }, caption))));\n};\n\nContentCard.defaultProps = {\n  mode: 'shadow'\n};\nexport default ContentCard;","map":{"version":3,"sources":["../../../src/components/ContentCard/ContentCard.tsx"],"names":["ContentCard","getRef","onClick","subtitle","header","text","caption","className","image","maxHeight","disabled","mode","alt","style","getRootRef","restProps","props","platform","usePlatform","getClassName","hasReactNode"],"mappings":"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","sourcesContent":["import { FC, ImgHTMLAttributes, ReactNode } from 'react';\nimport Card, { CardProps } from '../Card/Card';\nimport Caption from '../Typography/Caption/Caption';\nimport Title from '../Typography/Title/Title';\nimport Text from '../Typography/Text/Text';\nimport Tappable from '../Tappable/Tappable';\nimport { getClassName } from '../../helpers/getClassName';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { hasReactNode } from '../../lib/utils';\nimport { HasRef, HasRootRef } from '../../types';\n\nexport interface ContentCardProps extends HasRootRef<HTMLDivElement>, ImgHTMLAttributes<HTMLImageElement>, HasRef<HTMLImageElement>{\n  /**\n   Текст над заголовком\n   */\n  subtitle?: ReactNode;\n  /**\n   Заголовок\n   */\n  header?: ReactNode;\n  /**\n   Текст\n   */\n  text?: ReactNode;\n  /**\n   Нижний текст\n   */\n  caption?: ReactNode;\n  /**\n    URL или путь к изображению\n   */\n  image?: string;\n  /**\n    Максимальная высота изображения\n   */\n  maxHeight?: number;\n  /**\n    Аналогично alt для img\n   */\n  alt?: string;\n  /**\n    Отключает Tappable у карточки\n   */\n  disabled?: boolean;\n  /**\n   В точности как у `<Card/>`\n   */\n  mode?: CardProps['mode'];\n}\n\nconst ContentCard: FC<ContentCardProps> = (props: ContentCardProps) => {\n  const { getRef, onClick, subtitle, header, text, caption, className, image, maxHeight, disabled, mode, alt, style, getRootRef, ...restProps } = props;\n  const platform = usePlatform();\n\n  return (\n    <Card mode={mode} getRootRef={getRootRef} vkuiClass={getClassName('ContentCard', platform)} style={style} className={className}>\n      <Tappable disabled={disabled} onClick={onClick} vkuiClass=\"ContentCard__tappable\">\n        {image && <img {...restProps} ref={getRef} src={image} alt={alt} vkuiClass=\"ContentCard__img\" style={{ maxHeight: props.maxHeight }} width=\"100%\" />}\n        <div vkuiClass=\"ContentCard__body\">\n          {hasReactNode(subtitle) && <Caption caps vkuiClass=\"ContentCard__caption\" weight=\"semibold\" level=\"3\">{subtitle}</Caption>}\n          {hasReactNode(header) && <Title vkuiClass=\"ContentCard__title\" weight=\"semibold\" level=\"3\">{header}</Title>}\n          {hasReactNode(text) && <Text vkuiClass=\"ContentCard__text\" weight=\"regular\">{text}</Text>}\n          {hasReactNode(caption) && <Caption vkuiClass=\"ContentCard__caption\" weight=\"regular\" level=\"1\">{caption}</Caption>}\n        </div>\n      </Tappable>\n    </Card>\n  );\n};\n\nContentCard.defaultProps = {\n  mode: 'shadow',\n};\n\nexport default ContentCard;\n"]},"metadata":{},"sourceType":"module"}