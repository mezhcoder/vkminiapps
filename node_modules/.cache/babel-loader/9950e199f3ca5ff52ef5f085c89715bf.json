{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport React from 'react';\nimport { Icon28ChevronBack, Icon28ChevronLeftOutline, Icon28ArrowLeftOutline } from '@vkontakte/icons';\nimport PanelHeaderButton from \"../PanelHeaderButton/PanelHeaderButton\";\nimport { ANDROID, VKCOM, IOS } from \"../../lib/platform\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { withAdaptivity, SizeType } from \"../../hoc/withAdaptivity\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { classNames } from \"../../lib/classNames\";\n\nvar PanelHeaderBack = function PanelHeaderBack(_ref) {\n  var label = _ref.label,\n      sizeX = _ref.sizeX,\n      props = _objectWithoutProperties(_ref, [\"label\", \"sizeX\"]);\n\n  var platform = usePlatform();\n  var showLabel = platform === VKCOM || platform === IOS && sizeX === SizeType.REGULAR;\n  var className = classNames(getClassName('PanelHeaderBack', platform), {\n    'PanelHeaderBack--has-label': showLabel && !!label\n  });\n  return createScopedElement(PanelHeaderButton, _extends({}, props, {\n    vkuiClass: className,\n    label: showLabel && label\n  }), platform === ANDROID ? createScopedElement(Icon28ArrowLeftOutline, null) : platform === VKCOM ? createScopedElement(Icon28ChevronLeftOutline, null) : createScopedElement(Icon28ChevronBack, null));\n};\n\nexport default /*#__PURE__*/React.memo(withAdaptivity(PanelHeaderBack, {\n  sizeX: true\n}));","map":{"version":3,"sources":["../../../src/components/PanelHeaderBack/PanelHeaderBack.tsx"],"names":["PanelHeaderBack","label","sizeX","props","platform","usePlatform","showLabel","SizeType","className","classNames","getClassName","withAdaptivity"],"mappings":";;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,iBAAA,EAAA,wBAAA,EAAA,sBAAA,QAAA,kBAAA;AACA,OAAA,iBAAA,MAAA,wCAAA;AACA,SAAA,OAAA,EAAA,KAAA,EAAA,GAAA,QAAA,oBAAA;AACA,SAAA,WAAA,QAAA,yBAAA;AACA,SAAA,cAAA,EAAA,QAAA,QAAA,0BAAA;AAEA,SAAA,YAAA,QAAA,4BAAA;AACA,SAAA,UAAA,QAAA,sBAAA;;AAEA,IAAMA,eAA4E,GAAG,SAA/EA,eAA+E,CAAA,IAAA,EAA0E;AAAA,MAAvEC,KAAuE,GAAA,IAAA,CAAvEA,KAAuE;AAAA,MAAhEC,KAAgE,GAAA,IAAA,CAAhEA,KAAgE;AAAA,MAAtDC,KAAsD,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,OAAA,EAAA,OAAA,CAAA,CAAA;;AAC7J,MAAMC,QAAQ,GAAGC,WAAjB,EAAA;AACA,MAAMC,SAAS,GAAGF,QAAQ,KAARA,KAAAA,IAAsBA,QAAQ,KAARA,GAAAA,IAAoBF,KAAK,KAAKK,QAAQ,CAA9E,OAAA;AACA,MAAMC,SAAS,GAAGC,UAAU,CAACC,YAAY,CAAA,iBAAA,EAAb,QAAa,CAAb,EAA4C;AACtE,kCAA8BJ,SAAS,IAAI,CAAC,CAACL;AADyB,GAA5C,CAA5B;AAIA,SACE,mBAAA,CAAA,iBAAA,EAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAA8B,IAAA,SAAS,EAAvC,SAAA;AAAoD,IAAA,KAAK,EAAEK,SAAS,IAAIL;AAAxE,GAAA,CAAA,EACGG,QAAQ,KAARA,OAAAA,GAAuB,mBAAA,CAAA,sBAAA,EAAvBA,IAAuB,CAAvBA,GAAoDA,QAAQ,KAARA,KAAAA,GAAqB,mBAAA,CAAA,wBAAA,EAArBA,IAAqB,CAArBA,GAAoD,mBAAA,CAAA,iBAAA,EAF7G,IAE6G,CAD3G,CADF;AAPF,CAAA;;AAcA,eAAA,aAAe,KAAK,CAAL,IAAA,CAAWO,cAAc,CAAA,eAAA,EAAkB;AACxDT,EAAAA,KAAK,EAAE;AADiD,CAAlB,CAAzB,CAAf","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport { Icon28ChevronBack, Icon28ChevronLeftOutline, Icon28ArrowLeftOutline } from '@vkontakte/icons';\nimport PanelHeaderButton, { PanelHeaderButtonProps } from '../PanelHeaderButton/PanelHeaderButton';\nimport { ANDROID, VKCOM, IOS } from '../../lib/platform';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { withAdaptivity, SizeType } from '../../hoc/withAdaptivity';\nimport { AdaptivityProps } from '../..';\nimport { getClassName } from '../../helpers/getClassName';\nimport { classNames } from '../../lib/classNames';\n\nconst PanelHeaderBack: FunctionComponent<PanelHeaderButtonProps & AdaptivityProps> = ({ label, sizeX, ...props }: PanelHeaderButtonProps & AdaptivityProps) => {\n  const platform = usePlatform();\n  const showLabel = platform === VKCOM || platform === IOS && sizeX === SizeType.REGULAR;\n  const className = classNames(getClassName('PanelHeaderBack', platform), {\n    'PanelHeaderBack--has-label': showLabel && !!label,\n  });\n\n  return (\n    <PanelHeaderButton {...props} vkuiClass={className} label={showLabel && label}>\n      {platform === ANDROID ? <Icon28ArrowLeftOutline /> : platform === VKCOM ? <Icon28ChevronLeftOutline /> : <Icon28ChevronBack />}\n    </PanelHeaderButton>\n  );\n};\n\nexport default React.memo(withAdaptivity(PanelHeaderBack, {\n  sizeX: true,\n}));\n"]},"metadata":{},"sourceType":"module"}