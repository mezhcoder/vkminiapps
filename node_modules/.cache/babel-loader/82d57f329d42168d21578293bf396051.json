{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { classNames } from \"../../lib/classNames\";\nimport Tappable from \"../Tappable/Tappable\";\nimport Title from \"../Typography/Title/Title\";\nimport Text from \"../Typography/Text/Text\";\nimport Subhead from \"../Typography/Subhead/Subhead\";\nimport Caption from \"../Typography/Caption/Caption\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { SizeType, withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport { Platform, VKCOM } from \"../../lib/platform\";\n\nvar getContent = function getContent(size, children, sizeY, platform) {\n  switch (size) {\n    case 'l':\n      return sizeY === SizeType.COMPACT ? createScopedElement(Text, {\n        weight: \"medium\",\n        vkuiClass: \"Button__content\"\n      }, children) : createScopedElement(Title, {\n        level: \"3\",\n        weight: \"medium\",\n        Component: \"div\",\n        vkuiClass: \"Button__content\"\n      }, children);\n\n    case 'm':\n      return sizeY === SizeType.COMPACT ? createScopedElement(Subhead, {\n        weight: platform === VKCOM ? 'regular' : 'medium',\n        vkuiClass: \"Button__content\",\n        Component: \"div\"\n      }, children) : createScopedElement(Text, {\n        weight: \"medium\",\n        vkuiClass: \"Button__content\"\n      }, children);\n\n    case 's':\n    default:\n      if (platform === Platform.IOS) {\n        return createScopedElement(Subhead, {\n          weight: \"medium\",\n          vkuiClass: \"Button__content\"\n        }, children);\n      } else if (platform === Platform.VKCOM) {\n        return createScopedElement(Caption, {\n          level: \"1\",\n          weight: \"regular\",\n          vkuiClass: \"Button__content\"\n        }, children);\n      } else {\n        return sizeY === SizeType.COMPACT ? createScopedElement(Caption, {\n          level: \"1\",\n          weight: \"medium\",\n          vkuiClass: \"Button__content\"\n        }, children) : createScopedElement(Subhead, {\n          weight: \"medium\",\n          vkuiClass: \"Button__content\"\n        }, children);\n      }\n\n  }\n};\n\nvar Button = function Button(props) {\n  var _classNames;\n\n  var platform = usePlatform();\n\n  var size = props.size,\n      mode = props.mode,\n      stretched = props.stretched,\n      align = props.align,\n      children = props.children,\n      before = props.before,\n      after = props.after,\n      getRootRef = props.getRootRef,\n      Component = props.Component,\n      sizeY = props.sizeY,\n      restProps = _objectWithoutProperties(props, [\"size\", \"mode\", \"stretched\", \"align\", \"children\", \"before\", \"after\", \"getRootRef\", \"Component\", \"sizeY\"]);\n\n  var hasIcons = Boolean(before || after);\n  return createScopedElement(Tappable, _extends({}, restProps, {\n    vkuiClass: classNames(getClassName('Button', platform), \"Button--sz-\".concat(size), \"Button--lvl-\".concat(mode), \"Button--aln-\".concat(align), \"Button--sizeY-\".concat(sizeY), (_classNames = {}, _defineProperty(_classNames, 'Button--str', stretched), _defineProperty(_classNames, 'Button--with-icon', hasIcons), _classNames)),\n    getRootRef: getRootRef,\n    Component: restProps.href ? 'a' : Component,\n    activeMode: \"opacity\"\n  }), createScopedElement(\"div\", {\n    vkuiClass: \"Button__in\"\n  }, before && createScopedElement(\"div\", {\n    vkuiClass: \"Button__before\"\n  }, before), children && getContent(size, children, sizeY, platform), after && createScopedElement(\"div\", {\n    vkuiClass: \"Button__after\"\n  }, after)));\n};\n\nButton.defaultProps = {\n  mode: 'primary',\n  Component: 'button',\n  align: 'center',\n  size: 's',\n  stretched: false,\n  stopPropagation: true\n};\nexport default withAdaptivity(Button, {\n  sizeY: true\n});","map":{"version":3,"sources":["../../../src/components/Button/Button.tsx"],"names":["getContent","sizeY","SizeType","platform","Platform","Button","usePlatform","size","mode","stretched","align","children","before","after","getRootRef","Component","restProps","props","hasIcons","Boolean","classNames","getClassName","stopPropagation","withAdaptivity"],"mappings":"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","sourcesContent":["import { FunctionComponent, ReactNode } from 'react';\nimport { getClassName } from '../../helpers/getClassName';\nimport { classNames } from '../../lib/classNames';\nimport Tappable, { TappableProps } from '../Tappable/Tappable';\nimport Title from '../Typography/Title/Title';\nimport Text from '../Typography/Text/Text';\nimport Subhead from '../Typography/Subhead/Subhead';\nimport Caption from '../Typography/Caption/Caption';\nimport { HasAlign } from '../../types';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { AdaptivityProps, SizeType, withAdaptivity } from '../../hoc/withAdaptivity';\nimport { Platform, VKCOM } from '../../lib/platform';\n\nexport interface VKUIButtonProps extends HasAlign {\n  mode?: 'primary' | 'secondary' | 'tertiary' | 'outline' | 'commerce' | 'destructive' | 'overlay_primary' | 'overlay_secondary' | 'overlay_outline';\n  size?: 's' | 'm' | 'l';\n  stretched?: boolean;\n  before?: ReactNode;\n  after?: ReactNode;\n}\n\nexport interface ButtonProps extends Omit<TappableProps, 'size'>, VKUIButtonProps {}\n\nconst getContent = (size: ButtonProps['size'], children: ButtonProps['children'], sizeY: AdaptivityProps['sizeY'], platform: Platform) => {\n  switch (size) {\n    case 'l':\n      return (\n        sizeY === SizeType.COMPACT ?\n          <Text weight=\"medium\" vkuiClass=\"Button__content\">{children}</Text>\n          :\n          <Title level=\"3\" weight=\"medium\" Component=\"div\" vkuiClass=\"Button__content\">\n            {children}\n          </Title>\n      );\n    case 'm':\n      return (\n        sizeY === SizeType.COMPACT ?\n          <Subhead weight={platform === VKCOM ? 'regular' : 'medium'} vkuiClass=\"Button__content\" Component=\"div\">\n            {children}\n          </Subhead>\n          :\n          <Text weight=\"medium\" vkuiClass=\"Button__content\">\n            {children}\n          </Text>\n      );\n    case 's':\n    default:\n      if (platform === Platform.IOS) {\n        return <Subhead weight=\"medium\" vkuiClass=\"Button__content\">{children}</Subhead>;\n      } else if (platform === Platform.VKCOM) {\n        return <Caption level=\"1\" weight=\"regular\" vkuiClass=\"Button__content\">{children}</Caption>;\n      } else {\n        return sizeY === SizeType.COMPACT ?\n          <Caption level=\"1\" weight=\"medium\" vkuiClass=\"Button__content\">{children}</Caption> :\n          <Subhead weight=\"medium\" vkuiClass=\"Button__content\">{children}</Subhead>;\n      }\n  }\n};\n\nconst Button: FunctionComponent<ButtonProps> = (props: ButtonProps) => {\n  const platform = usePlatform();\n  const { size, mode, stretched, align, children, before, after, getRootRef, Component, sizeY, ...restProps } = props;\n  const hasIcons = Boolean(before || after);\n\n  return <Tappable {...restProps}\n    vkuiClass={\n      classNames(\n        getClassName('Button', platform),\n        `Button--sz-${size}`,\n        `Button--lvl-${mode}`,\n        `Button--aln-${align}`,\n        `Button--sizeY-${sizeY}`,\n        {\n          ['Button--str']: stretched,\n          ['Button--with-icon']: hasIcons,\n        },\n      )\n    }\n    getRootRef={getRootRef}\n    Component={restProps.href ? 'a' : Component}\n    activeMode=\"opacity\"\n  >\n    <div vkuiClass=\"Button__in\">\n      {before && <div vkuiClass=\"Button__before\">{before}</div>}\n      {children && getContent(size, children, sizeY, platform)}\n      {after && <div vkuiClass=\"Button__after\">{after}</div>}\n    </div>\n  </Tappable>;\n};\n\nButton.defaultProps = {\n  mode: 'primary',\n  Component: 'button',\n  align: 'center',\n  size: 's',\n  stretched: false,\n  stopPropagation: true,\n};\n\nexport default withAdaptivity(Button, {\n  sizeY: true,\n});\n"]},"metadata":{},"sourceType":"module"}